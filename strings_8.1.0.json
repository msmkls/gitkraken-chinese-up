{
  "languageOption": {
    "label": "English (US)",
    "value": "en-us"
  },
  "menuStrings": {
    "ProductName": "<%= productName %>",
    "AboutProduct": "关于<%= productName %>",
    "VersionNumber": "版本<%= version %>(<%= bitness %>位)",
    "ViewReleaseNotes": "查看发行说明",
    "CheckingForUpdates": "正在检查更新...",
    "RestartAndInstallUpdate": "重启并安装更新",
    "CheckForUpdateWithLastCheckedTime": "检查更新<%= updateLastCheckedTime %>",
    "UpdateAvailableWithVersion": "可用更新(<%= updateAvailableVersion %>)",
    "UpdateAvailableDownloadDeb": "下载.deb文件",
    "UpdateAvailableDownloadRpm": "下载.rpm文件",
    "UpdateAvailableDownloadTargz": "下载.tar.gz文件",
    "UpdateDownloadedShowFile": "更新已下载(显示文件)",
    "UpdateErroredAtTime": "更新错误<%= updateErrorTime %>",
    "DownloadingUpdate": "正在下载更新...",
    "DownloadUpdate": "下载更新",
    "Preferences": "首选项...",
    "&Preferences": "首选项(&P)...",
    "Services": "服务",
    "Hide": "隐藏GitKraken",
    "HideOthers": "隐藏其他",
    "ShowAll": "显示全部",
    "Quit": "退出GitKraken",
    "E&xit": "退出(&X)",
    "File": "文件",
    "&File": "文件(&F)",
    "NewTab": "新标签",
    "New&Tab": "新标签",
    "CloneRepo": "克隆存储库",
    "Clo&neRepo": "克隆存储库(&N)",
    "InitRepo": "初始化存储库",
    "&InitRepo": "初始化存储库(&I)",
    "OpenRepo": "打开存储库",
    "&OpenRepo": "打开存储库(&O)",
    "OpenRepoInExternalEditor": "在外部编辑器中打开仓库",
    "OpenRepoInNamedExternalEditor": "Open Repo in {0}",
    "OpenRepoInExternal&Editor": "在外部和编辑器中打开仓库",
    "Open&Terminal": "打开终端(&T)",
    "OpenTerminal": "打开终端",
    "OpenInFileManager": "在文件管理器中打开",
    "ReopenClosedTab": "重新打开关闭的标签页",
    "ReopenClosed&Tab": "重新打开已关闭&标签",
    "SignIntoDifferentAccount": "登录其他帐户",
    "Edit": "编辑",
    "&Edit": "编辑(&E)",
    "Undo": "撤消",
    "&Undo": "撤消(&U)",
    "Redo": "重做",
    "&Redo": "重做(&R)",
    "Cut": "剪切",
    "&Cut": "剪切(&C)",
    "Copy": "复制",
    "C&opy": "复制(&O)",
    "Paste": "粘贴",
    "&Paste": "粘贴(&P)",
    "SelectAll": "全选",
    "Select&All": "全选(&A)",
    "View": "查看",
    "&View": "查看(&V)",
    "Reload": "重新加载",
    "&Reload": "重新加载(&R)",
    "ToggleFullScreen": "切换全屏",
    "Toggle&FullScreen": "切换全屏(&F)",
    "Developer": "开发者",
    "SupportLogs": "支持日志",
    "RunTests": "运行测试...",
    "ToggleDeveloperTools": "切换开发者工具",
    "ToggleDeveloper&Tools": "切换开发者工具(&T)",
    "ToggleMainProcessDeveloperTools": "Toggle Main Process Developer Tools",
    "ToggleMainProcessDeveloper&Tools": "Toggle Main Process Developer &Tools",
    "PrintPerformanceTimingsToTerminal": "打印到终端的性能时序",
    "Tabs": "标签",
    "CloseTab": "关闭标签",
    "SelectNextTab": "选择下一个标签",
    "SelectPreviousTab": "选择上一个标签",
    "OpenTabsList": "Open Tabs List",
    "SelectTab1": "选择标签1",
    "SelectTab2": "选择标签2",
    "SelectTab3": "选择标签3",
    "SelectTab4": "选择标签4",
    "SelectTab5": "选择标签5",
    "SelectTab6": "选择标签6",
    "SelectTab7": "选择标签7",
    "SelectTab8": "选择标签8",
    "SelectTab9": "选择标签9",
    "Favorites": "收藏夹",
    "OpenFavorite1": "打开收藏夹仓库1",
    "OpenFavorite2": "打开收藏夹仓库2",
    "OpenFavorite3": "打开收藏夹仓库3",
    "OpenFavorite4": "打开收藏夹仓库4",
    "OpenFavorite5": "打开收藏夹仓库5",
    "OpenFavorite6": "打开收藏夹仓库6",
    "OpenFavorite7": "打开收藏夹仓库7",
    "OpenFavorite8": "打开收藏夹仓库8",
    "OpenFavorite9": "打开收藏夹仓库9",
    "ShowDetailPanel": "Show Commit Details Panel",
    "ShowLeftPanel": "Show Left Panel",
    "ShowToolbar": "Show Toolbar",
    "Window": "窗口",
    "Minimize": "最小化",
    "Zoom": "缩放",
    "Help": "帮助",
    "&Help": "帮助(&H)",
    "ViewSupportDocs": "查看支持文档",
    "ViewErrorLogs": "查看错误日志",
    "ViewPerformanceLogs": "查看性能日志",
    "ViewActivityLogs": "查看活动日志",
    "SendUsFeedback": "向我们发送反馈",
    "GetSupport": "获取支持",
    "KeyboardShortcuts": "键盘快捷键",
    "OpenFuzzyFinder": "打开模糊查找器",
    "FollowUsOnTwitter": "在推特上关注我们",
    "RunTestsWithCoverage": "使用覆盖率运行测试...",
    "ToggleReactPerfRecording": "启动/停止响应性能记录",
    "RunSystemTests": "运行系统测试..."
  },
  "strings": {
    "About-BuiltBy": "GitKraken由Axosoft在阳光明媚的亚利桑那州斯科茨代尔建造",
    "About-OpenSource": "它使用了一些优秀的开源项目:",
    "About-Libgit2License": "GitKraken在GNU公共许可证下通过NodeGit使用libgit2库, 并带有链接异常",
    "About-TermsOfService": "服务条款",
    "About-OpenSourceLicenses": "依赖开源许可证",
    "About-AllRightsReserved": "保留所有权利",
    "About-Version": "GitKraken Version {0}",
    "Application": "应用",
    "Bytes": "字节",
    "By": "{0}由",
    "Cli-TerminalPreviewButton": "CLI 预览",
    "NoMatches": "无匹配",
    "NoFilterMatches": "没有匹配过滤器的结果",
    "QuitGitKraken": "退出GitKraken",
    "Done": "Done",
    "Or": "or",
    "Repo-Close": "关闭存储库",
    "Repo-Delete": "删除存储库",
    "Repo-ClearFromRecentRepositories": "清除最近的存储库中的{0}",
    "Repo-Open": "打开存储库",
    "Repo-OpenInFileManager": "在文件管理器中打开",
    "Repo-OpenInDefaultTerminal": "Open in default external terminal",
    "Repo-OpenInTerminalTab": "Open this repo in a Terminal Tab",
    "Registration-ChangeEmail": "使用其他账户登录",
    "Registration-CheckStatus": "检查状态",
    "Registration-PrivateRepoDetected": "这似乎是一个私人存储库",
    "Registration-PrivateRepoDetectedContent": "GitKraken的免费版本不支持打开私有或自托管存储库。",
    "Registration-CreateAccount": "为GitKraken创建一个账户",
    "Registration-CreatingAccount": "创建账户...",
    "Registration-DontWantAccount": "现在不要创建账户",
    "Registration-EmailDefault": "(默认为git config user.email)",
    "Registration-EmailAddress": "邮件地址",
    "Registration-EnterEmailAddress": "请输入邮件地址",
    "Registration-EnterName": "请输入名称",
    "Registration-SelfHostedLoginFailedDueToNoLicense": "您的帐户没有有效的GitKraken自托管许可证。",
    "Registration-ForgotPassword": "我忘记了密码",
    "Registration-GoBackToSelfHostedConfiguration": "更改GitKraken自托管服务器的URL",
    "Registration-GoingUnregistered": "在创建或登录账户前, 您可以使用GitKraken{0}天。",
    "Registration-LdapUsername": "用户名",
    "Registration-Name": "名字",
    "Registration-NameAndEmailDefault": "(默认为git config中的user.email和user.name)",
    "Registration-ServerConnectionError": "无法连接到服务器。",
    "Registration-SignInWithGitHub": "使用GitHub登录",
    "Registration-SignInWithGoogle": "Sign in with Google",
    "Registration-SuccessfullyRegistered": "您的电子邮件地址已经通过验证！",
    "Registration-HaveNotRegistered": "您尚未通过电子邮件地址验证",
    "Registration-iHaveReadAndAgreeToThe": "我已阅读并同意",
    "Registration-iAgree": "我同意",
    "Registration-Password": "密码",
    "Registration-ConfirmPassword": "确认密码",
    "Registration-Register": "注册",
    "Registration-ResendEmail": "重发邮件",
    "Registration-ResendingEmail": "发送...",
    "Registration-ShowMoreOptions": "显示更多选项",
    "Registration-Success": "已将邮件发送到{0}。要继续使用GitKraken, 您需要在{1}天内验证您的邮件地址。",
    "Registration-Failed": "无法连接到服务器",
    "Registration-FailedExtra": "请稍后再试。",
    "Registration-FailedExtraDaysLeft": "请在{0}天内重试, 以便继续使用GitKraken。",
    "Registration-EULA": "最终用户许可协议",
    "Registration-EULAAbbreviated": "EULA",
    "Registration-EULAUpdateTitle": "最终用户许可协议更新",
    "Registration-EULAFirstTimeMessage": "即将完成！我们只需要确保您同意我们的EULA。",
    "Registration-EULAUpdateMessage": "最终用户许可协议已更新。您必须同意新版本才能继续使用GitKraken。",
    "Registration-EULALoadFailed": "EULA加载失败",
    "Registration-PasswordIsGood": "这是一个很好的密码!",
    "Registration-PasswordStrength0": "很弱",
    "Registration-PasswordStrength1": "弱",
    "Registration-PasswordStrength2": "中等",
    "Registration-PasswordStrength3": "强",
    "Registration-PasswordStrength4": "非常强",
    "Registration-PasswordStrengthPrefix": "密码强度:",
    "Registration-PasswordTooShort": "密码长度必须至少为{0}个字符。",
    "Registration-ProLicenseExpiredTitle": "许可证已过期",
    "Registration-StudentLicenseExpiredTitle": "学生许可证已过期",
    "Registration-ProLicenseExpiredBody1": "您的GitKraken许可证已经过期。请更新您的订阅，以便继续将GitKraken用于商业用途。",
    "Registration-StudentLicenseExpiredBody1-1": "您的GitKraken Pro的GitHub学生许可证已过期。您有几种选择：",
    "Registration-StudentLicenseExpiredBody1-2": "如果您确定您仍然拥有 GitHub 的学生身份，则需要再次 {0} 以验证您的许可证。",
    "Registration-StudentLicenseExpiredBody1-2Button": "使用GitHub登录",
    "Registration-StudentLicenseExpiredBody1-3": "如果您需要使用 GitHub 更新您的学生身份，请{0}。 在此期间，您可以使用免费版本。",
    "Registration-StudentLicenseExpiredBody1-3Button": "访问GitHub教育网站",
    "Registration-StudentLicenseExpiredBody1-4": "如果您对高级许可感兴趣，{0}。",
    "Registration-StudentLicenseExpiredBody1-4Button": "查看GitKraken计划",
    "Registration-StudentLicenseExpiredBody1-5": "否则，您可以{0}。",
    "Registration-StudentLicenseExpiredBody1-5Button": "切换到免费许可证",
    "Registration-ProLicenseExpiredBody2-1": "您正在使用非商业用途的GitKraken免费版。合并冲突编辑器、配置文件、GitHub企业版、GitLab自建主机，Bitbucket服务器和Azure开发运维集成等专业功能已被禁用。",
    "Registration-ProLicenseExpiredBody2-2": "您可以随时从主菜单或访问{0}续订。",
    "Registration-StudentLicenseExpiredBody2-2": "您可以随时从主菜单或访问 {0} 进行订阅。",
    "Registration-ProLicenseExpiredCancel": "切换到非商业用途",
    "Registration-ProLicenseExpiredGoToShop": "续订",
    "Registration-UseGitKraken": "使用GitKraken",
    "Registration-ValidateConfirmPassword": "密码不匹配。",
    "Registration-ValidateField": "此字段是必需的。",
    "Registration-ValidateEmail": "请输入正确的邮件地址。",
    "Registration-ValidateEULA": "您必须同意最终用户许可协议。",
    "Registration-VerifyEmailTitle": "请验证您的邮件地址",
    "Registration-VerifyEmailBody": "我们还没有收到{0}的验证信息。继续使用GitKraken请通过发到该地址的邮件中的链接完成身份验证。",
    "Registration-CantFindEmail": "没找到邮件?",
    "Registration-IncorrectEmail": "账户不正确?",
    "Registration-XDaysToActivate": "{0}天激活",
    "Registration-1DayToActivate": "1天激活",
    "Registration-Login": "登录",
    "Registration-LoggingIn": "正在登录...",
    "Registration-CreateAccountTitle": "创建账户",
    "Registration-LoginTitle": "欢迎来到GitKraken",
    "Registration-SignInWithExistingGKAccount": "或使用现有的GitKraken账户登录",
    "Registration-GoToCreate": "创建",
    "Registration-GoToLoginLeadin": "已经有账户了?",
    "Registration-GoToLogin": "登录",
    "Registration-ManualInput": "Manually input the OAuth token",
    "Registration-OrSeparatorLine": "or",
    "Registration-SignInWithGitKraken": "Sign in with GitKraken",
    "Registration-SignInWithOtherProvider": "Sign in with other provider",
    "InitialCliGuiChoice-Title": "Which view would you like to start with?",
    "InitialCliGuiChoice-Subtitle": "Either of these views can be accessed at any time by creating a new tab",
    "InitialCliGuiChoice-CLI-Title": "Terminal Tab",
    "InitialCliGuiChoice-CLI-Button": "Start with a Terminal Tab",
    "InitialCliGuiChoice-CLI-Message": "A terminal-first experience, enhanced by the GitKraken CLI with features like autocomplete suggestions and repository visualizations that can be accessed via the",
    "InitialCliGuiChoice-GUI-Title": "Repo Tab",
    "InitialCliGuiChoice-GUI-Button": "Start with a Repo Tab",
    "InitialCliGuiChoice-GUI-Message": "Clearly visualize the most helpful information about your repositories, with easy access to the commit graph, work in progress, pull requests, issues, teams and more.",
    "Role-Admin": "Admin",
    "Role-Billing": "Billing Contact",
    "Role-Owner": "Owner",
    "SelfHostedConfiguration-Title": "配置GitKraken自托管",
    "SelfHostedConfiguration-EnterHostname": "请粘贴在GitKraken下载页面上提供的URL：",
    "SelfHostedConfiguration-CouldNotConnect": "无法连接到服务器。",
    "SelfHostedConfiguration-CouldNotParseURL": "无法解析给定的URL。",
    "Status-Pending": "Pending",
    "LicenseExpirationWarning-NDays": "License expires in {0} days",
    "LicenseExpirationWarning-Tomorrow": "许可证在1天后过期！",
    "LicenseExpirationWarning-Today": "许可证在不到一天的时间内到期！",
    "Standalone-LicenseConfigurationTitle": "企业许可证",
    "Standalone-LicenseInfoForActive": "{1}用户的{0}许可",
    "Standalone-LicenseInfoForActiveExpiresSoon": "{1}用户的{0}许可。{2}天后过期",
    "Standalone-LicenseInfoExpiresTomorrow": "{1}用户的{0}许可。{2}天后过期",
    "Standalone-LicenseInfoExpiresToday": "{1}用户的{0}许可。今天过期",
    "Standalone-LicenseInfoExpired": "{1}用户的{0}许可。已过期",
    "Standalone-Unlicensed": "未经授权",
    "Standalone-LicensedTo": "授权于",
    "Standalone-NumberOfUsers": "用户数量",
    "Standalone-Expires": "过期",
    "Standalone-DateExpired": "{0}已过期",
    "Standalone-GitKrakenIsUnlicensed": "这份GitKraken副本是未经授权的。",
    "Standalone-SavedLicenseIsInvalid": "磁盘上的许可证无效。",
    "Standalone-AddAValidLicense": "添加有效的许可证文件以继续。",
    "Standalone-AddALicense": "添加许可证文件以继续。",
    "Standalone-UpdateLicense": "更新许可证",
    "Standalone-AddLicense": "添加许可证",
    "Standalone-UpdatedLicenseWasExpired": "您选择的许可证文件已过期。",
    "Standalone-UpdatedLicenseFailedToUpdate": "当我们尝试使用所选的许可证时出错了。",
    "Standalone-UpdatedLicenseWasInvalid": "您选择的许可证文件无效。",
    "Standalone-UpdatedLicenseWasNotFound": "找不到您选择的许可证文件。",
    "Standalone-BrowserForLicense": "浏览GitKraken许可证",
    "Standalone-BadSelectedLicense": "许可证更新失败",
    "Standalone-LicenseSuccessfullyUpdated": "许可证已成功更新",
    "AnnotatedTag": "带注释的标签",
    "Apply": "应用",
    "Author": "作者",
    "Branch": "分支",
    "branch": "分支",
    "Close": "关闭",
    "Commit": "提交",
    "Create": "创建",
    "DeletingWithEllipsis": "删除中...",
    "AuthoredLabel": "创作于",
    "CoauthorsLabel": "共同作者:",
    "CommitterLabel": "承诺的",
    "CommitLabel": "提交:",
    "ParentLabel": "父:",
    "CheckingOutBranch": "正在检出分支",
    "ConnectingWithEllipsis": "正在连接...",
    "DateAuthored": "作者日期",
    "DiscardAllChanges": "丢弃所有改动",
    "Filter": "筛选器",
    "GeneratingWithEllipsis": "正在生成...",
    "LoadingDiffWithEllipsis": "正在加载差异...",
    "LoadingWithEllipsis": "载入中...",
    "Local": "本地",
    "Log": "记录",
    "New": "新",
    "Optional": "(可选)",
    "Parent": "父",
    "Parents": "父",
    "Pop": "弹出",
    "project": "project",
    "Pull": "拉取",
    "Push": "推送",
    "Redo": "重做",
    "Repo": "存储库",
    "Repository": "资料库",
    "repository": "资料库",
    "Save": "保存",
    "Selected": "Selected",
    "DontSave": "不保存",
    "ToggleHideLabel": "隐藏",
    "ToggleSoloLabel": "独奏",
    "ShowAll": "显示全部",
    "SoloBranch": "将此分支设置为独奏模式",
    "UnsoloAll": "退出独奏模式",
    "SuccessWithBang": "成功!",
    "Stage": "暂存",
    "Staged": "已暂存",
    "Stash": "贮藏",
    "Tag": "标签",
    "Undo": "撤消",
    "Uninitialized": "未初始化",
    "Unstage": "取消暂存",
    "Unstaged": "未暂存",
    "Cli": "Terminal",
    "UpstreamBranch": "上游分支",
    "ViewAllRepositories": "查看所有存储库",
    "ViewReleaseNotes": "查看发行说明",
    "ViewSupportDocs": "View Support Documentation",
    "WorkInProgressAbbr": "WIP",
    "WorkInProgressOnBranchAbbr": "WIP于{0}",
    "Zoom": "缩放",
    "EnterpriseLicense": "ENTERPRISE",
    "IndividualLicense": "个人",
    "Pro": "专业版",
    "FreeUserLicense": "自由",
    "Trial": "TRIAL",
    "SelfHosted": "自住",
    "Standalone": "企业版",
    "FreeBadgeTooltip": "许可用于开源项目。单击以查看计划。",
    "Stash-ApplyWithUncommittedChangesPrompt": "您有未提交的改动。确定要应用贮藏区并覆盖改动吗?",
    "StashMessage-Amend": "在修改\"{0}\"之前自动贮藏",
    "StashMessage-Checkout": "在检出\"{0}\"之前自动贮藏",
    "StashMessage-CherryPick": "在摘取\"{0}\"之前自动贮藏",
    "StashMessage-Merge": "在合并\"{0}\"和\"{1}\"之前自动贮藏",
    "StashMessage-Rebase": "在变基\"{0}\"之前自动贮藏",
    "StashMessage-Revert": "在还原\"{0}\"之前自动贮藏",
    "Ignore": "忽略",
    "IgnoreFile": "忽略'{0}'",
    "IgnoreNFiles": "忽略{0}个文件",
    "AllFilesWithSameExtension": "所有扩展名为'{0}'的文件",
    "AllFilesInFolder": "'{0}/'下的所有文件",
    "IgnoreAllFilesInFolder": "忽略'{0}/'下的所有文件",
    "File-AlreadyExists": "文件'{0}'已存在",
    "File-Blame": "文件追责",
    "File-CanOnlyEditText": "只能编辑文本文件",
    "File-CouldNotOpenInEditor": "无法在编辑器中打开文件",
    "File-CouldNotCreate": "无法创建文件",
    "File-CouldNotCreateOutOfRepo": "无法在存储库之外创建文件!",
    "File-CouldNotDelete": "无法删除文件",
    "File-Create": "创建文件",
    "File-Created": "已创建'{0}'",
    "File-Delete": "删除文件",
    "File-DeleteInWorkDir": "删除工作目录文件",
    "File-Deleted": "已删除'{0}'",
    "File-DoesNotExist": "文件不存在",
    "File-ConfirmDeletePath": "您确定要删除'{0}'吗?",
    "File-Open": "打开文件",
    "File-Edit": "编辑文件",
    "File-OpenInDefaultProgram": "在默认程序中打开文件",
    "File-OpenInDefaultEditor": "在外部编辑器中打开",
    "File-OpenInNamedEditor": "Open in {0}",
    "File-OpenWithName": "打开{0}",
    "File-Reset": "丢弃改动",
    "File-ShowFolderContents": "在文件夹中打开",
    "File-ShowFolderContentsMac": "在Finder中打开",
    "File-ShowInFolder": "在文件夹中显示",
    "File-ShowInFolderMac": "在Finder中显示",
    "File-ShowInFolderMacWithName": "在Finder中显示{0}",
    "File-ShowInFolderWithName": "在文件夹中显示{0}",
    "File-StatusAdded": "已添加",
    "File-StatusDeleted": "已删除",
    "File-StatusRenamed": "已重名",
    "File-StatusRenamedFrom": "从",
    "File-StatusRenamedTo": "到",
    "File-UnstageAndRemove": "取消暂存并删除文件",
    "Folder-NewFile": "在此文件夹中创建文件",
    "Folder-MarkConflictedFilesAsResolved": "标记所有为已解决的",
    "Folder-Open": "打开文件夹",
    "Folder-ResetAll": "重置文件夹",
    "Folder-StageAll": "暂存文件夹",
    "Folder-UnstageAll": "取消暂存文件夹",
    "Folder-DiscardAllChanges": "丢弃文件夹中的所有改动",
    "FileHistory": "文件历史记录",
    "FileHistory-AuthorInfo": "由{0}在{1}上创作",
    "FileHistory-CannotLinkToGraph": "此提交在关系图上不可见",
    "FileHistory-CommitShaCopied": "提交SHA复制!",
    "FileHistory-DiffView": "差异视图",
    "FileHistory-End": "历史结尾",
    "FileHistory-FileView": "文件视图",
    "FileHistory-LinkToGraph": "在关系图中查看{0}",
    "FileHistory-BlameButtonLabel": "追责",
    "FileHistory-ShowBlame": "显示追责细节",
    "FileHistory-UnknownAuthorName": "未知",
    "FuzzyFinder-DefaultPlaceHolder": "搜索命令和操作(例如打开存储库)",
    "FuzzyFinder-BlamePlaceholder": "搜索文件以查看谁做了什么(即其追责)",
    "FuzzyFinder-CheckoutPlaceholder": "搜索要检出的分支",
    "FuzzyFinder-CloseTab": "关闭标签",
    "FuzzyFinder-CreateAnnotatedTag": "创建带注释的标签",
    "FuzzyFinder-CreateBranch": "创建分支",
    "FuzzyFinder-CreateFilePlaceholder": "输入新文件名",
    "FuzzyFinder-CreateTag": "创建标签",
    "FuzzyFinder-DeleteFilePlaceholder": "搜索要删除的文件",
    "FuzzyFinder-EditFilePlaceholder": "搜索要编辑的文件",
    "FuzzyFinder-DevPlaceholder": "订购Chipotle",
    "FuzzyFinder-HistoryPlaceholder": "搜索文件以查看其历史/追责",
    "FuzzyFinder-OpenInDefaultEditor": "在外部编辑器中打开",
    "FuzzyFinder-OpenFilePlaceholder": "搜索要打开的文件",
    "FuzzyFinder-OpenRepoPlaceholder": "搜索要打开的存储库",
    "FuzzyFinder-RenameBranch": "重命名分支",
    "FuzzyFinder-SearchCommitsPlaceholder": "使用消息, ID, 作者搜索提交",
    "FuzzyFinder-SwitchProfilePlaceholder": "搜索要切换到的配置文件",
    "FuzzyFinder-ViewFilePlaceholder": "搜索要查看的文件",
    "FuzzyFinder-BlameFilePrefix": "追责",
    "FuzzyFinder-CheckoutRefPrefix": "检出",
    "FuzzyFinder-ConfigureGitFlow": "配置Git工作流",
    "FuzzyFinder-ConfigureGpgSigning": "配置GPG签名",
    "FuzzyFinder-ConfigureLfs": "配置LFS",
    "FuzzyFinder-CreateFileKeywords": "创建新文件",
    "FuzzyFinder-CreateFilePrefix": "创建文件",
    "FuzzyFinder-DeleteFilePrefix": "删除文件",
    "FuzzyFinder-EditFilePrefix": "编辑文件",
    "FuzzyFinder-StartPullRequest": "开始拉取请求",
    "FuzzyFinder-StartPullRequestKeywords": "新创建拉取请求",
    "FuzzyFinder-DevPrefix": "开发",
    "FuzzyFinder-DiscardAllKeywords": "全部重置",
    "FuzzyFinder-FileHistoryPrefix": "历史",
    "FuzzyFinder-GitFlowPrefix": "Git工作流:",
    "FuzzyFinder-InitRepoKeywords": "初始化",
    "FuzzyFinder-JoinTheLightOrDarkSide": "加入{0}侧",
    "FuzzyFinder-JoinTheLightSlashDarkSide": "加入暗/亮侧",
    "FuzzyFinder-OpenGitFlowPanel": "Git工作流",
    "FuzzyFinder-OpenFile": "打开文件",
    "FuzzyFinder-OpenFileInExternalCompareTool": "在外部差异/合并工具中打开",
    "FuzzyFinder-OpenInFileManagerKeywords": "文件夹资源管理器查找程序",
    "FuzzyFinder-OpenInTerminalKeywords": "命令行控制台",
    "FuzzyFinder-OpenProjects": "Open Projects",
    "FuzzyFinder-OpenRepoInExternalEditor": "在外部编辑器中打开仓库",
    "FuzzyFinder-OpenRepoPrefix": "打开存储库",
    "FuzzyFinder-OpenShell": "Open a new Terminal Tab",
    "FuzzyFinder-OpenShellKeywords": "command line shell terminal prompt",
    "FuzzyFinder-RefPrefix": "分支:",
    "FuzzyFinder-RepoPrefix": "存储库管理:",
    "FuzzyFinder-SearchCommits": "搜索提交",
    "FuzzyFinder-Settings": "设置",
    "FuzzyFinder-SettingsKeywords": "偏好选项",
    "FuzzyFinder-StashPrefix": "贮藏区:",
    "FuzzyFinder-SwitchProfile": "切换到配置文件",
    "FuzzyFinder-ToggleSyntaxHighlighting": "切换语法高亮",
    "FuzzyFinder-ToggleTheme": "切换主题",
    "FuzzyFinder-ToggleToolbar": "Toggle Toolbar",
    "FuzzyFinder-ToggleToolbarLabels": "切换工具栏标签",
    "FuzzyFinder-ViewFile": "查看文件",
    "FuzzyFinder-ViewErrorLogs": "查看错误日志",
    "FuzzyFinder-ViewPerformanceLogs": "查看性能日志",
    "FuzzyFinder-ViewReleaseNotes": "查看发行说明",
    "FuzzyFinder-ViewReleaseNotesKeywords": "补丁说明变更日志",
    "FuzzyFinder-ViewWorkingDirectoryChanges": "查看工作目录改动",
    "FuzzyFinder-ViewWorkingDirectoryChangesKeywords": "更改wip workdir工作",
    "CommitSearch-ClearFilter": "Clear filter",
    "CommitSearch-Placeholder": "查找提交",
    "CommitSearch-ResultsText": "{0} of {1}",
    "CommitSearch-NoResults": "0结果",
    "CommitSearch-NoAuthorsFound": "No authors found",
    "CommitFilter-FilterPlaceholder": "filter the graph by team or author",
    "CommitFilter-Authors": "authors",
    "CommitFilter-Teams": "teams",
    "GARLIC-RequestCancelledFromCredentialChange": "Request cancelled, credentials have changed for {0}",
    "GitHook-ExitCode": "退出代码:{0}",
    "GitHook-ExitedSuccessfully": "{0}: Exited with code 0",
    "GitHooks-ExitedSuccessfully": "Git Hooks exited with code 0: {0}",
    "GitHooks-Failed": "多个Git挂钩失败",
    "GitHook-OpenFailureLogModal": "查看钩子输出",
    "GitHook-HookFailed": "{0}失败",
    "GitHook-PermissionDenied": "{0}没有执行权限!",
    "GitHook-PrePushDidNotRun": "预推送钩子未运行",
    "GitHook-PrePushDidNotRunReason": "由于{1}, 无法执行{0}",
    "GitHook-FailedToRun": "Git Hook无法运行。",
    "System-OperationCancelled": "操作被用户取消",
    "LeftPanel-CheckedOut": "检出",
    "LeftPanel-ClearFilter": "清除筛选器",
    "LeftPanel-Collapse": "折叠面板",
    "LeftPanel-FilterCommits": "筛选器({0} + {1} + f)",
    "LeftPanel-Filtering": "筛选中",
    "LeftPanel-Expand": "展开面板",
    "LeftPanel-Hide": "在关系图中隐藏",
    "LeftPanel-Show": "在关系图中显示",
    "LeftPanel-StopSoloing": "停止此分支的独奏模式",
    "LeftPanelAddUserForkRow-YouHaveAFork": "You have a fork of this repo",
    "LeftPanelAddUserForkRow-AddRemoteButtonLabel": "添加",
    "LeftPanelAddUserForkRow-AddThisFork": "Add this fork as a remote",
    "TextOperation-Cut": "剪切",
    "TextOperation-Copy": "复制",
    "TextOperation-CopyFileContentsToClipboard": "将文件内容复制到剪贴板",
    "TextOperation-CopySuccess": "已复制！",
    "TextOperation-Paste": "粘贴",
    "TextOperation-Delete": "删除",
    "TextOperation-SelectAll": "全选",
    "ResizePanel": "调整面板大小",
    "FastForwardBranchToBranch": "快进分支{0}到分支{1}",
    "FileMayStillHaveConflicts": "此文件中可能仍然存在冲突",
    "MergedBranchToRef": "将分支'{0}'合并到{1}中",
    "MergedRemoteBranchToRef": "将远程跟踪分支'{0}'合并到{1}中",
    "MergedTagToRef": "将标签'{0}'合并到{1}中",
    "MergedBranchToMaster": "合并分支'{0}'",
    "MergedRemoteBranchToMaster": "合并远程跟踪分支'{0}'",
    "MergedTagToMaster": "合并标签'{0}'",
    "MergeConflictMessageSingular": "尝试合并到{0}时发现1个文件冲突",
    "MergeConflictMessagePlural": "尝试合并到{1}时发现{0}个文件冲突",
    "MergingIntoNamed": "合并到{0}",
    "ExternalDiffTool": "外部差异工具",
    "ExternalMergeTool": "外部合并工具",
    "OpenInDiffTool": "在差异工具中打开",
    "OpenInMergeTool": "在合并工具中打开",
    "OpenIn": "使用{0}打开",
    "MarkAllResolved": "全部标记为已解决",
    "MarkNResolved": "标记{0}为已解决",
    "MarkAsConflicted": "标记为未解决",
    "MarkAsResolved": "标记为已解决",
    "MarkNConflicted": "标记{0}为未解决",
    "UnsupportedRebaseMessage": "此存储库正在另一个应用程序中运行变基",
    "ViewAuthenticationSettings": "查看设置",
    "ViewExternalEditorSettings": "查看外部编辑器设置",
    "ViewDiffToolSettings": "查看差异工具设置",
    "ViewMergeToolSettings": "查看合并工具设置",
    "ViewShPathSettings": "查看设置",
    "ViewTerminalSettings": "查看终端设置",
    "DiscardSelectedLines": "丢弃已选中的行的改动",
    "DiscardThisHunk": "丢弃区块的改动",
    "DiscardThisLine": "丢弃此行的改动",
    "DiscardNChanges": "丢弃{0}个文件中的改动",
    "RefCreatedMessage": "{0}: {1}已创建在{2}",
    "StageAllChanges": "暂存所有改动",
    "StageNChanges": "暂存{0}个文件",
    "StageSelectedLines": "暂存已选中的行",
    "StageThisFile": "暂存文件",
    "StageThisChange": "暂存此改动",
    "StageThisHunk": "暂存区块",
    "StageThisLine": "暂存此行",
    "UnstageAllChanges": "取消暂存的所有改动",
    "UnstageNChanges": "取消暂存{0}个文件",
    "UnstageSelectedLines": "取消暂存已选中的行",
    "UnstageThisFile": "取消暂存文件",
    "UnstageThisChange": "取消暂存这个改动",
    "UnstageThisHunk": "取消暂存区块",
    "UnstageThisLine": "取消暂存此行",
    "StageFilemodeChange": "暂存文件模式改动",
    "UnstageFilemodeChange": "取消暂存文件模式改动",
    "WindowsFilemodeChangeWarning": "可能已对GitKraken以外的索引进行了文件模式更改。",
    "WindowsFilemodeChangeWarningConfigEnabled": "您在git配置中启用了文件模式更改！在Windows中，工作目录中的文件似乎具有-x，因此此处显示文件模式更改。",
    "OKButtonLabel": "确定",
    "CancelButtonLabel": "取消",
    "YesButtonLabel": "是",
    "NoButtonLabel": "否",
    "ExitButtonLabel": "退出",
    "ExitPreferencesButtonLabel": "退出首选项",
    "PreviousButtonLabel": "上一个",
    "NextButtonLabel": "下一个",
    "BrowseButtonLabel": "浏览",
    "SubmitButtonLabel": "提交",
    "GenerateButtonLabel": "生成",
    "SendMessageButtonLabel": "发送",
    "LogInButtonLabel": "登录",
    "FinishSetupButtonLabel": "完成",
    "OpenNowButtonLabel": "立即打开",
    "InitializeButtonLabel": "初始化",
    "DeleteButtonLabel": "删除",
    "DeleteAndCommitLabel": "删除并提交",
    "DiscardUnstagedChangesButtonLabel": "丢弃未暂存的改动",
    "UnstageAndRemoveButtonLabel": "取消暂存并删除",
    "ResetAllButtonLabel": "重置所有",
    "ResetFileButtonLabel": "重置文件",
    "ResetFilesButtonLabel": "重置文件",
    "SaveAncesor": "保存上级",
    "SaveFileButtonLabel": "保存文件",
    "CommitAndMergeButtonLabel": "合并后提交",
    "DropCommitButtonLabel": "删除提交",
    "DropCommitsButtonLabel": "删除提交",
    "AbortCherrypickButtonLabel": "中止摘取",
    "AbortMergeButtonLabel": "中止合并",
    "StartRebaseButtonLabel": "开始变基",
    "ContinueRebaseButtonLabel": "继续变基",
    "AbortRebaseButtonLabel": "中止变基",
    "CommitRevertLabel": "提交还原",
    "SkipCommitButtonLabel": "跳过提交",
    "CommitButtonLabelStageFiles": "请暂存要提交的文件/改动",
    "CommitButtonLabelAddMessage": "请输入提交消息",
    "CommitButtonLabelPlural": "提交{0}个文件的改动",
    "CommitButtonLabelSingular": "提交1个文件的改动",
    "ForcePushButtonLabel": "强制推送",
    "ProvideFeedbackButtonLabel": "反馈",
    "LinuxUpdate-StatusBar-AvailableStatus": "Update available ({0})",
    "LinuxUpdate-Notification-AvailableStatus": "Download update",
    "LinuxUpdate-CheckingForUpdates": "Checking for updates...",
    "LinuxUpdate-DownloadDebUpdateButtonLabel": ".deb",
    "LinuxUpdate-DownloadRpmUpdateButtonLabel": ".rpm",
    "LinuxUpdate-DownloadTarGzUpdateButtonLabel": ".tar.gz",
    "LinuxUpdate-Downloaded": "已完成下载 {0}",
    "LinuxUpdate-Downloading": "正在下载 {0}...",
    "LinuxUpdate-FailedTryAgain": "Update Failed. Try Again.",
    "LinuxUpdate-ShowDownloadedUpdateButtonLabel": "更新就绪(显示文件)",
    "LinuxUpdate-SomethingWentWrong": "下载更新时出错",
    "LinuxUpdate-TryAgain": "Try Again",
    "LinuxUpdate-DownloadFromGitKraken": "Download from GitKraken.com",
    "AutoUpdate-StatusBar-RestartGitKrakenAndInstallUpdateButtonLabel": "Update Ready (Restart GitKraken)",
    "AutoUpdate-Notification-RestartGitKrakenAndInstallUpdateButtonLabel": "Restart and update",
    "AmendPreviousCommitButtonLabel": "修改最后一次提交",
    "AmendOrRewordPreviousCommitMessageButtonLabel": "更新讯息",
    "AmendPreviousCommitMessageTip": "单击此处修改提交消息",
    "RewordCommitMessageTooltip": "单击以改写您的提交消息",
    "RewordCommitMessageHelperText": "Rewording this commit message will cause {0} commits to be rebased.",
    "RewordInputTitle": "R词提交消息",
    "CancelAmendPreviousCommitMessageButtonLabel": "停止修改",
    "CancelRewordPreviousCommitMessageButtonLabel": "取消改写",
    "RefreshTokenLabel": "刷新令牌",
    "OptIntoAnalyticsButtonLabel": "将分析数据发送到GitKraken",
    "OptIntoAnalyticsCancelButtonLabel": "不发送数据",
    "RetryWithoutOAuthLabel": "无OAuth重试",
    "UpgradeGitKrakenButtonLabel": "升级GitKraken",
    "UpgradeToProButtonLabel": "升级到GitKraken专业版",
    "UseFreeButtonLabel": "继续使用GitKraken免费版",
    "SeePlansButtonLabel": "查看GitKraken计划",
    "StartTrialButtonLabel": "GitKraken专业版免费试用",
    "TrialStatus": "GitKraken专业版的试用期剩余{0} - 立即升级",
    "ConfirmButtonLabel": "Confirm",
    "RemoveButtonLabel": "移除",
    "Option-None": "<无>",
    "Option-UseMergeTool": "<使用合并工具>",
    "ActivityLogButtonTooltip": "活动记录",
    "GitFlowButtonTooltip": "Git工作流",
    "UndoValidButtonTooltip": "撤消{0}",
    "RedoValidButtonTooltip": "重做{0}",
    "UndoCannotButtonTooltip": "无法撤消",
    "RedoCannotButtonTooltip": "无法重做",
    "UndoInvalidButtonTooltip": "无法撤消{0}。目前只支持提交、检出和某些丢弃操作。",
    "RedoInvalidButtonTooltip": "无可重做的撤消",
    "RefreshButtonTooltip": "刷新",
    "SetAsDefaultOptionTooltip": "设置为默认值",
    "DefaultOptionTooltip": "默认",
    "PushButtonTooltip": "推送",
    "PushToButtonTooltip": "Push to {0}",
    "PullOptionsMessage": "选择在单击此按钮时默认执行的拉取/推送操作",
    "PullOptions-FetchAll": "获取所有",
    "PullOptions-Merge": "拉取(快进优先)",
    "PullOptions-FastForwardOnly": "拉取(仅快进)",
    "PullOptions-NoFastForward": "拉取(非快进)",
    "PullOptions-Rebase": "拉取(变基)",
    "BranchButtonTooltip": "分支",
    "StashButtonTooltip": "贮藏",
    "ApplyStashButtonTooltip": "应用贮藏区",
    "PopStashButtonTooltip": "弹出贮藏区",
    "OrderChipotleButtonTooltip": "星期四吃葡萄",
    "SearchCommitsTooltip": "搜索提交({0} + f)",
    "CliButtonTooltip": "Open in Terminal Tab",
    "FuzzyFinderButtonTooltip": "Command Palette ({0} + P)",
    "Rebasing-LoadingOverlayLabel": "Rebasing",
    "Rebasing-CommitLabel": "从{1}重新变基提交{0}",
    "Rebasing-AutoStashLabel": "自动贮藏未提交的改动",
    "Rebasing-PoppingAutoStashLabel": "弹出自动贮藏的改动",
    "ReflogAction": "使用reflog消息\"{0}\"的操作",
    "ReflogActionCommit": "提交\"{0}\"",
    "ReflogActionCommitAmend": "提交修订\"{0}\"",
    "ReflogActionCheckout": "从\"{0}\"检出到\"{1}\"",
    "ReflogActionReset": "重置为\"{0}\"",
    "ReflogActionSaveOne": "丢弃\"{0}\"",
    "ReflogActionSaveMany": "丢弃\"{0}\"和其他{1}个文件",
    "ReflogActionSaveUnknown": "丢弃",
    "ReflogActionDeleteBranchTracking": "删除分支\"{0}\"跟踪\"{1}\"",
    "ReflogActionDeleteBranch": "删除分支\"{0}\"",
    "ReflogActionRemoveRemote": "删除远程\"{0}\"",
    "ConflictsHeader-Into": "into",
    "ConflictsHeader-Merging": "Merging",
    "ConflictsHeader-Onto": "onto",
    "ConflictsHeader-Rebasing": "Rebasing",
    "ContextMenu-AddToDictionary": "Add to Dictionary",
    "ContextMenu-AmendOrRewordCommitMessage": "编辑提交消息",
    "ContextMenu-AnnotateTag": "批注{0}",
    "ContextMenu-CheckoutBranch": "检出{0}",
    "ContextMenu-CheckoutCommit": "签出此提交",
    "ContextMenu-CherrypickCommit": "摘取提交",
    "ContextMenu-CreateAnnotatedTag": "在此处创建带注释的标签",
    "ContextMenu-CloseTab": "关闭标签",
    "ContextMenu-CloseOtherTabs": "关闭其他标签",
    "ContextMenu-CloseTabsRight": "关闭右侧的标签",
    "ContextMenu-CommitNotInGraph": "无法跳转到图形中，因为它不可见。",
    "ContextMenu-Copy": "&Copy",
    "ContextMenu-CopyBranchName": "将分支名称复制到剪贴板",
    "ContextMenu-CopyDeepLinkFailed": "Failed to copy deep link",
    "ContextMenu-CopyDeepLinkFailedMissingInfo": "No commit sha, branch name or tag name found.",
    "ContextMenu-CopyDeepLinkFailedNoFirstCommitSha": "No first commit sha found for the repo.",
    "ContextMenu-CopyDeepLinkFailedNoRemoteUrl": "No remote url could be found.",
    "ContextMenu-CopyDeepLinkForBranch": "Copy link to branch: {0}",
    "ContextMenu-CopyDeepLinkForCommit": "Copy link to this commit",
    "ContextMenu-CopyDeepLinkForCommitOnRemote": "Copy link to this commit on remote: {0}",
    "ContextMenu-CopyDeepLinkForRemote": "Copy link to remote: {0}",
    "ContextMenu-CopyDeepLinkForTag": "Copy link to this tag",
    "ContextMenu-CopyDeepLinkForTagOnRemote": "Copy link to this tag on remote: {0}",
    "ContextMenu-CopyDeepLinkOnRemote": "on remote: {0}",
    "ContextMenu-OpenGijLinkFailed": "Failed to open Jira link",
    "ContextMenu-OpenGijLinkFailedMissingInfo": "No commit sha found.",
    "ContextMenu-OpenGijLinkFailedNoFirstCommitSha": "No first commit sha found for the repo.",
    "ContextMenu-OpenGijLinkFailedMissingResource": "Please select a Jira project first.",
    "ContextMenu-OpenGijLinkForBranch": "Open Jira to branch: {0}",
    "ContextMenu-OpenGijLinkForCommit": "Open Jira to this commit",
    "ContextMenu-OpenGijLinkForCommitFileDiff": "Open Jira to this file diff",
    "ContextMenu-OpenGijLinkForCommitFileDiffOnInstance": "Open Jira to this file diff on instance: {0}",
    "ContextMenu-OpenGijLinkForCommitOnInstance": "Open Jira to this commit on instance: {0}",
    "ContextMenu-OpenGijLinkForTag": "Open Jira to this tag",
    "ContextMenu-CopyFilePath": "将文件路径复制到剪贴板",
    "ContextMenu-CopyCommitSha": "将sha复制到剪贴板",
    "ContextMenu-CopyTagName": "将标签名称复制到剪贴板",
    "ContextMenu-CreateBranchHere": "在此处创建分支",
    "ContextMenu-CreateTagHere": "在此处创建标签",
    "ContextMenu-Cut": "Cut",
    "ContextMenu-DeleteLocalAndRemoteBranches": "删除{0}和{1}",
    "ContextMenu-DeleteAll": "删除所有\"{0}\"分支 (本地和远程)",
    "ContextMenu-DeleteBranch": "删除{0}",
    "ContextMenu-Delete1BranchInFolder": "删除文件夹\"{0}\"中的1个分支",
    "ContextMenu-DeleteNBranchesInFolder": "在文件夹\"{1} \"中删除{0}个分支",
    "ContextMenu-DeleteNLocalBranches": "Delete {0} local branches",
    "ContextMenu-DeleteNStashes": "Delete {0} stashes",
    "ContextMenu-DeleteProjectGroup": "从列表中删除",
    "ContextMenu-DeleteTagXLocally": "从本地删除{0}",
    "ContextMenu-DeleteTagFromRemote": "从远程删除标签",
    "ContextMenu-DeleteTagXFromRemoteY": "从{1}删除{0}",
    "ContextMenu-DeleteTagXFromAllRemotes": "从所有远程中删除{0}",
    "ContextMenu-DropCommit": "删除提交",
    "ContextMenu-DropCommits": "Drop {0} commits",
    "ContextMenu-EditProjectGroup": "编辑标签",
    "ContextMenu-EditRemote": "编辑{0}",
    "ContextMenu-FastForward": "快进{0}到{1}",
    "ContextMenu-FavoriteRepository": "将存储库添加到收藏夹",
    "ContextMenu-FetchRemote": "获取{0}",
    "ContextMenu-ForkRemoteOnService": "Fork {0} ({1}) on {2}",
    "ContextMenu-GitHubActionDelete": "删除工作流程",
    "ContextMenu-GitHubActionEdit": "编辑工作流程",
    "ContextMenu-GoToParentCommit": "跳转以提交图形",
    "ContextMenu-HideAllStashes": "隐藏所有贮藏区",
    "ContextMenu-HideAllTags": "隐藏所有标签",
    "ContextMenu-HideNStashes": "Hide {0} stashes",
    "ContextMenu-HideNLocalBranches": "Hide {0} branches",
    "ContextMenu-IssueCheckoutBranchFrom": "Checkout branch from {0}",
    "ContextMenu-IssueCreateBranchGitFlowFeature": "Gitflow：创建功能分支",
    "ContextMenu-IssueCreateBranchGitFlowHotfix": "Gitflow：创建修补程序分支",
    "ContextMenu-IssueCreateBranchGitFlowRelease": "Gitflow：创建发布分支",
    "ContextMenu-IssueCopyCardLink": "复制卡链接",
    "ContextMenu-IssueCopyIssueLink": "复制问题链接",
    "ContextMenu-IssueViewIssueInGitHub": "View issue in GitHub",
    "ContextMenu-IssueViewIssueInGitHubEnterprise": "View issue in GitHub Enterprise",
    "ContextMenu-IssueViewIssueInGitLab": "在GitLab中查看问题",
    "ContextMenu-IssueViewCardInGKBoards": "在GitKraken板上查看卡",
    "ContextMenu-IssueViewCardInTrello": "在Trello中查看卡",
    "ContextMenu-IssueViewIssueInGitlab": "在Gitlab中查看问题",
    "ContextMenu-IssueViewIssueInIssueTracker": "在问题跟踪器中查看问题",
    "ContextMenu-IssueViewIssueInJira": "查看Jira的问题",
    "ContextMenu-IssueViewCardX": "View card {0}",
    "ContextMenu-IssueViewIssueX": "View issue {0}",
    "ContextMenu-IssueViewCardXInBrowser": "View card {0} in browser",
    "ContextMenu-IssueViewIssueXInBrowser": "View issue {0} in browser",
    "ContextMenu-IssueTrackerFilterRemoveFilter": "删除此过滤器",
    "ContextMenu-IssueTrackerFilterEditFilter": "编辑此过滤器",
    "ContextMenu-IssueTrackerFilterMoveDown": "向下移动此过滤器",
    "ContextMenu-IssueTrackerFilterMoveUp": "向上移动此过滤器",
    "ContextMenu-MergeBranchIntoBranch": "将 {0}合并到{1}",
    "ContextMenu-MoveCommitDown": "下移提交",
    "ContextMenu-MoveCommitUp": "向上提交",
    "ContextMenu-MoveXCommitsDown": "Move {0} commits down",
    "ContextMenu-MoveXCommitsUp": "Move {0} commits up",
    "ContextMenu-Paste": "Paste",
    "ContextMenu-PickCommit": "选择提交",
    "ContextMenu-PushAndStartPullRequestToRef": "推送{0}并在{1}上创建拉取请求",
    "ContextMenu-PushAndStartPullRequest": "推送{0}创建拉取请求",
    "ContextMenu-PushTagToRemote": "将标签推送到远程",
    "ContextMenu-PushXToEllipses": "将{0}推送到...",
    "ContextMenu-PushXToAllRemotes": "将{0}推送到所有远程",
    "ContextMenu-PushXToY": "将{0}推送到{1}",
    "ContextMenu-RebaseBranchOntoBranch": "变基{0}于{1}",
    "ContextMenu-RebaseBranchOntoBranchInteractively": "Interactive Rebase {0} onto {1}",
    "ContextMenu-RebaseXChildrenOfShaInteractively": "Interactive Rebase {0} children of {1}",
    "ContextMenu-RemoveRemote": "删除{0}",
    "ContextMenu-RenameBranch": "重命名{0}",
    "ContextMenu-ReopenClosedTab": "重新打开关闭的标签页",
    "ContextMenu-ResetBranchToThisCommit": "将{0}重置为此提交",
    "ContextMenu-ResetSoftWithHint": "软 - 保持所有本地改动",
    "ContextMenu-ResetMixedWithHint": "混合 - 保持工作副本并重置索引",
    "ContextMenu-ResetHardWithHint": "强行 - 丢弃所有改动过的工作副本",
    "ContextMenu-RevertCommit": "还原提交",
    "ContextMenu-RewordCommit": "重新提交密码",
    "ContextMenu-SelectAll": "Select &All",
    "ContextMenu-SetUpstream": "设置上游",
    "ContextMenu-ShowAllStashes": "显示所有贮藏区",
    "ContextMenu-ShowAllTags": "显示所有标签",
    "ContextMenu-ShowNLocalBranches": "Show {0} branches",
    "ContextMenu-SoloNLocalBranches": "Solo {0} branches",
    "ContextMenu-ShowNStashes": "Show {0} stashes",
    "ContextMenu-SquashCommit": "壁球提交",
    "ContextMenu-StartPullRequestFromY": "从{0}创建拉取请求",
    "ContextMenu-StartPullRequestToX": "创建拉取请求到{0}",
    "ContextMenu-StartPullRequestToXFromY": "创建从{1}到{0}的拉取请求",
    "ContextMenu-StashApply": "应用贮藏区",
    "ContextMenu-StashDelete": "删除贮藏区",
    "ContextMenu-StashPop": "弹出贮藏区",
    "ContextMenu-StopSoloingNLocalBranches": "Stop soloing {0} branches",
    "ContextMenu-SquashXCommits": "合并{0}个提交",
    "ContextMenu-UnfavoriteRepository": "取消收藏存储库",
    "ContextMenu-ViewServiceRemoteInBrowser": "在{1}上查看{0}",
    "LocalBranchDeletion-Complete": "分支删除完成",
    "StashDeletion-Complete": "Stash 删除完成",
    "StashDeletion-SuccessfullyDeletedNStashes": "Successfully deleted {0} out of {1} stashes.",
    "Toolbar-CloseSubmodule": "关闭子模块",
    "Toolbar-CloseRepository": "关闭存储库",
    "Toolbar-PushNotAvailableInDetachedHead": "处于分离HEAD状态时，推送不可用",
    "Toolbar-PullMergeNotAvailableInDetachedHead": "处于分离HEAD状态时，Pull（如果可能的话，快进）不可用",
    "Toolbar-PullFastForwardOnlyNotAvailableInDetachedHead": "处于分离HEAD状态时，Pull（仅快进）不可用",
    "Toolbar-PullRebaseNotAvailableInDetachedHead": "处于分离HEAD状态时，Pull（重新设置）不可用",
    "BreadCrumbs-FavoritesHeader": "收藏夹",
    "BreadCrumbs-ManageProjects": "Manage Projects",
    "BreadCrumbs-OpenAProjectHintHeader": "Open a Project",
    "BreadCrumbs-AddRepoToProjectHintHeader": "Add this repo to a Project",
    "BreadCrumbs-ProjectsCount": "{0} projects",
    "BreadCrumbs-RecentsHeader": "最近打开的",
    "Profile-AddAProfile": "添加配置文件",
    "Profile-AuthorEmail": "Author Email",
    "Profile-AuthorName": "Author Name",
    "Profile-CancelDelete": "不, 保留此配置文件",
    "Profile-ConfirmDelete": "是, 删除此配置文件",
    "Profile-ConfirmDeleteHeaderEnd": "\"?",
    "Profile-ConfirmDeleteHeaderStart": "Are you sure you want to delete the profile \"",
    "Profile-CopySettingsFromCurrentProfile": "从当前配置文件复制设置",
    "Profile-CurrentProfile": "当前资料",
    "Profile-DeleteProfile": "删除",
    "Profile-Description": "GitKraken使用配置文件来存储应用程序首选项以及git配置信息。安装后设置的首选项设置为默认配置文件。在GitKraken Pro中, 您可以创建其他配置文件, 并在不同的项目、工作环境等之间快速切换。",
    "Profile-Description-FreeAddendum": "You are on a free account. {0} to create multiple profiles.",
    "Profile-Description-UpgradeLinkText": "Upgrade your plan",
    "Profile-EditProfile": "编辑配置文件",
    "Profile-ExplainSync": "\"Local\" profiles are only accessible on this machine. \"Synced\" profiles will sync with your account and be available on any machine.",
    "Profile-FinishEditing": "请先完成文件的编辑，然后再添加或更改配置文件",
    "Profile-Local": "Local",
    "Profile-ManageAccount": "账户管理",
    "Profile-ManageProfiles": "管理个人资料",
    "Profile-MyProfiles": "我的配置文件",
    "Profile-Organization": "Organization",
    "Profile-Preferences": "首选项",
    "Profile-ProfileName": "配置文件名称",
    "Profile-ReferralRewards": "推荐奖励",
    "Profile-RequiresPro": "需要专业版才能添加或切换配置文件, 请单击此处升级。",
    "Profile-SaveChanges": "保存改动",
    "Profile-SelectIcon": "请选择一个图标",
    "Profile-SetUpYourProfile": "设置您的配置文件",
    "Profile-SwitchProfile": "切换配置文件",
    "Profile-SwitchToThisProfile": "切换到此个人资料",
    "Profile-SyncChanges": "保持我的.gitconfig与配置文件同步更新",
    "Profile-SyncChangesSub": "选中后, GitKraken 将使用当前配置文件中的用户名和电子邮件地址更新您的全局git配置。",
    "Profile-Synced": "Synced",
    "Profile-Type": "Type",
    "Profile-Unlock": "通过升级到专业版解锁配置文件切换",
    "Profile-Unregistered": "未注册",
    "ProfileAccountMenu-Account": "Account",
    "ProfileAccountMenu-CommitSignature": "Commit signature",
    "ProfileAccountMenu-ManageAccount": "Manage account",
    "ProfileAccountMenu-ManageProfiles": "Manage profiles",
    "ProfileAccountMenu-NoProfiles": "No Profiles",
    "ProfileAccountMenu-NoProfileSelected": "No profile selected",
    "ProfileAccountMenu-Organization": "Organization",
    "ProfileAccountMenu-Profile": "Profile",
    "ProfileAccountMenu-SignIntoDifferentAccount": "Sign into a different account",
    "Profiles": "配置文件",
    "RefBar-NavigateToBranch": "导航到分支",
    "RefBar-GroupGitFlow": "GIT工作流",
    "RefBar-GroupGitHubAction": "行动",
    "RefBar-GroupGitHub": "GITHUB",
    "RefBar-GroupGitHubEnterprise": "GITHUB ENTERPRISE",
    "RefBar-GroupGitLab": "吉比特实验室",
    "RefBar-GroupGitLabSelfManaged": "GITLAB自管理",
    "RefBar-GroupGKBoards": "技工板",
    "RefBar-GroupGKBoardsShort": "GK板",
    "RefBar-GroupIssueTracker": "问题",
    "RefBar-GroupJira": "JIRA问题",
    "RefBar-GroupTeamVisibility": "TEAMS",
    "RefBar-GroupTrello": "TRELLO",
    "RefBar-GroupLocal": "本地",
    "RefBar-GroupRemote": "远程",
    "RefBar-GroupPullRequests": "拉取请求",
    "RefBar-GroupStashes": "贮藏区",
    "RefBar-GroupSubmodules": "子模块",
    "RefBar-GroupTags": "标签",
    "RefBar-NAhead": "超前{0}",
    "RefBar-NBehind": "落后{0}",
    "RefBar-NavigateToTag": "导航到标签",
    "RefBar-StatusViewing": "查看",
    "RefBar-StatusSoloing": "独奏",
    "RefBar-AddRemote": "添加远程",
    "RefBar-AddGitHubAction": "添加GitHub操作",
    "RefBar-OpenGitFlow": "打开Git工作流",
    "RefBar-AddBranch": "创建新分支",
    "RefBar-AddSubmodule": "添加子模块",
    "RefBar-AddTag": "创建新标签",
    "Refbar-BranchActions": "分支操作",
    "RefBar-TagActions": "标签操作",
    "Repo-SuccessfullyCreatedRepo": "创建存储库成功",
    "PullRequest-SuccessfullyCreatePullRequest": "创建拉取请求成功",
    "ViewOnHostingService": "在 {0} 上查看",
    "GitHubActionBar-Menu": "GitHub动作动作",
    "PullRequestBar-Assignees": "负责人",
    "PullRequestBar-Reviewers": "评审",
    "PullRequestBar-Labels": "标签",
    "PullRequestBar-Opened": "已打开:{0}",
    "PullRequestBar-Updated": "已更新:{0}",
    "PullRequestBar-CreatePullRequest": "创建拉取请求",
    "PullRequestBar-Menu": "拉请求操作",
    "PullRequestBar-UnknownPullRequestHead": "私有存储库(拒绝访问)",
    "PullRequestBar-UnknownPullRequestOwnerLogin": "未知的用户名（访问被拒绝）",
    "PullRequestBar-ViewPullRequestInBrowser": "在{2}上查看拉取请求 {0} {1}",
    "PullRequestBar-CopyPullRequestLink": "Copy link for pull request {0}{1}",
    "PullRequestBar-ViewContinuousIntegrationResultInBrowser": "查看{0}的最新版本",
    "PullRequestBar-AddPullRequestRemote": "将{0}添加为远程",
    "PullRequestBar-AddPullRequestRemoteAndCheckoutPRHead": "将{0}添加为远程并检出",
    "PullRequestFilter-CancelLabel": "Cancel",
    "PullRequestFilter-CreateFilter": "Create a filter",
    "PullRequestFilter-CreateFilterLabel": "Create Pull Request Filter",
    "PullRequestFilter-EditFilter": "Edit this filter",
    "PullRequestFilter-EditFilterLabel": "Edit Pull Request Filter",
    "PullRequestFilter-FilterLabel": "Filter Pull Requests",
    "PullRequestFilter-FilterQueryPlaceholder": "Enter a query to filter pull requests",
    "PullRequestFilter-MoveDown": "Move this filter down",
    "PullRequestFilter-MoveUp": "Move this filter up",
    "PullRequestFilter-NameLabel": "Filter name",
    "PullRequestFilter-NamePlaceholder": "Enter a name for this filter",
    "PullRequestFilter-RemoveFilter": "Remove this filter",
    "PullRequestFilter-RemoveFilterLabel": "Remove",
    "PullRequestFilter-RemoveFilterPrompt": "Do you want to remove the \"{0}\" filter?",
    "PullRequestFilter-SearchPlaceholder": "Search pull requests",
    "PullRequestFilter-SyntaxAssignee": "assignee",
    "PullRequestFilter-SyntaxAssigneeLabel": "Assignee:",
    "PullRequestFilter-SyntaxAuthorLabel": "Author:",
    "PullRequestFilter-SyntaxBaseLabel": "Base:",
    "PullRequestFilter-SyntaxBranchName": "branch_name",
    "PullRequestFilter-SyntaxChangesRequested": "changes_requested",
    "PullRequestFilter-SyntaxCreatedLabel": "Created:",
    "PullRequestFilter-SyntaxDisplayName": "display_name",
    "PullRequestFilter-SyntaxDraftLabel": "Draft:",
    "PullRequestFilter-SyntaxFailure": "failure",
    "PullRequestFilter-SyntaxFalse": "false",
    "PullRequestFilter-SyntaxHeadLabel": "Head:",
    "PullRequestFilter-SyntaxInvolves": "involves",
    "PullRequestFilter-SyntaxInolvesLabel": "Involves:",
    "PullRequestFilter-SyntaxLabel": "label",
    "PullRequestFilter-SyntaxLabelLabel": "Label:",
    "PullRequestFilter-SyntaxLabelName": "label_name",
    "PullRequestFilter-SyntaxMilestone": "milestone",
    "PullRequestFilter-SyntaxMilestoneLabel": "Milestone",
    "PullRequestFilter-SyntaxMilestoneName": "milestone_name",
    "PullRequestFilter-SyntaxNone": "none",
    "PullRequestFilter-SyntaxNoLabel": "No value:",
    "PullRequestFilter-SyntaxPending": "pending",
    "PullRequestFilter-SyntaxReferenceLink": "support site",
    "PullRequestFilter-SyntaxReferenceTitle": "Pull Request Filter Syntax",
    "PullRequestFilter-SyntaxReferenceSubTitle": "Read more about filtering pull requests on the {0}.",
    "PullRequestFilter-SyntaxReview": "review",
    "PullRequestFilter-SyntaxReviewApproved": "approved",
    "PullRequestFilter-SyntaxReviewLabel": "Review State:",
    "PullRequestFilter-SyntaxReviewRequested": "review-requested",
    "PullRequestFilter-SyntaxReviewedByLabel": "Reviewed By:",
    "PullRequestFilter-SyntaxReviewersLabel": "Requested Reviewers:",
    "PullRequestFilter-SyntaxStatus": "status",
    "PullRequestFilter-SyntaxStatusLabel": "Status:",
    "PullRequestFilter-SyntaxSuccess": "success",
    "PullRequestFilter-SyntaxTrue": "true",
    "PullRequestFilter-SyntaxUpdatedLabel": "Updated:",
    "PullRequestFilter-SyntaxUserName": "user_name",
    "PullRequestPanel-AddAssignee": "添加负责人...",
    "PullRequestPanel-AddAssignees": "添加负责人...",
    "PullRequestPanel-AddLabels": "添加标签...",
    "PullRequestPanel-AddReviewers": "添加评审人...",
    "PullRequestPanel-AddTemplate": "添加模板...",
    "PullRequestPanel-AllCards": "所有卡",
    "PullRequestPanel-Assignee": "负责人",
    "PullRequestPanel-Assignees": "负责人",
    "PullRequestPanel-Branch": "分支",
    "PullRequestPanel-CardsLinkedTo": "卡链接到",
    "PullRequestPanel-Description": "描述",
    "PullRequestPanel-EditOnService": "使用{0}进行修改",
    "PullRequestPanel-FromRepo": "源存储库",
    "PullRequestPanel-GloCard": "GitKraken卡",
    "PullRequestPanel-RemoveGloCard": "取出GitKraken卡",
    "PullRequestPanel-OpenGloCard": "打开GitKraken卡",
    "PullRequestPanel-HideFiles": "隐藏档案",
    "PullRequestPanel-Labels": "标签",
    "PullRequestPanel-MergeConflictDetected": "检测到合并冲突",
    "PullRequestPanel-NoAssigneesFound": "未找到负责人",
    "PullRequestPanel-NoCardsFound": "找不到卡",
    "PullRequestPanel-NoLabelsFound": "未找到标签",
    "PullRequestPanel-NoReviewersFound": "未找到评审人",
    "PullRequestPanel-NoTemplatesFound": "找不到模板",
    "PullRequestPanel-PullRequestTitle": "拉请求标题",
    "PullRequestPanel-PullRequestDescription": "拉请求描述",
    "PullRequestPanel-Repo": "存储库",
    "PullRequestPanel-Reviewers": "评审",
    "PullRequestPanel-SearchCards": "搜索卡...",
    "PullRequestPanel-SearchingCards": "正在搜寻卡片...",
    "PullRequestPanel-ShowFiles": "显示档案",
    "PullRequestPanel-SubmitAsDraft": "Submit as draft",
    "PullRequestPanel-Template": "模板",
    "PullRequestPanel-Title": "标题",
    "PullRequestPanel-ToRepo": "目标存储库",
    "PullRequestPanel-TypeToSearch": "开始输入搜索GitKraken卡...",
    "PullRequestPanel-AzureDevopsEditPullRequestWarning": "如果您选择在Azure开发运维上进行编辑, 您的拉请求标题/描述将不会转移到Azure开发运维",
    "PullRequestPanel-GitHubEditPullRequestWarning": "如果您选择在GitHub上编辑, 拉取请求的审阅者将不会传送到GitHub。",
    "PullRequestPanel-GitHubDraftPullRequestTooltip": "Draft pull requests are available in public repositories with GitHub Free for organizations and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud.",
    "PullRequestTooltip-WantsToMerge": "想要合并",
    "PullRequestTooltip-Into": "到",
    "PullRequestTooltip-Draft": "Draft",
    "PullRequestTooltip-BuildStatus": "构建状态:",
    "PullRequestTooltip-ChecksOK": "检查{0}/{1}正常",
    "PullRequestTooltip-ChecksOKChangesRequested": "{0} / {1} checks OK, changes requested",
    "PullRequestTooltip-ChecksOKReviewPending": "{0} / {1} checks OK, review pending",
    "PullRequestTooltip-ChecksOKReviewSuccess": "{0} / {1} checks OK, no pending reviews or changes requested",
    "PullRequestTooltip-ChangesRequested": "Changes requested",
    "PullRequestTooltip-ReviewPending": "Review pending",
    "PullRequestTooltip-ReviewSuccess": "No pending reviews or changes requested",
    "PullRequestTooltip-UnknownRequester": "[未知]",
    "ContinuousIntegrationTooltip-SomeChecksFailed": "某些检查失败",
    "ContinuousIntegrationTooltip-SomeChecksPending": "某些检查挂起",
    "ContinuousIntegrationTooltip-AllChecksPassed": "已通过所有检查",
    "IssueTooltip-Description": "描述",
    "IssueTooltip-Labels": "标签",
    "IssueTooltip-List": "清单",
    "IssueTooltip-Milestone": "里程碑",
    "IssueTooltip-Milestones": "大事记",
    "IssueTooltip-MilestoneDueDate": "Due {0}",
    "IssueTooltip-Reporter": "记者",
    "IssueTooltip-Status": "状态",
    "IssueTooltip-Column": "柱",
    "IssueTooltip-None": "没有",
    "IssueViewPanel-AssigneeEditFailed": "无法更新受让人",
    "IssueViewPanel-Branches": "分行",
    "IssueViewPanel-BaseNewBranchOn": "建立新分支",
    "IssueViewPanel-Checklists": "检查清单",
    "IssueViewPanel-ClearMember": "清除会员",
    "IssueViewPanel-ClearMembers": "清除成员",
    "IssueViewPanel-CollapseReplies": "collapse {0} replies",
    "IssueViewPanel-CollapseReply": "collapse {0} reply",
    "IssueViewPanel-Column": "柱",
    "IssueViewPanel-CreateBranch": "创建分支",
    "IssueViewPanel-CreatedBy": "由...制作",
    "IssueViewPanel-DueDate": "截止日期",
    "IssueViewPanel-DuplicateFilterName": "过滤器名称重复",
    "IssueViewPanel-List": "清单",
    "IssueViewPanel-NameLabel": "筛选器名称",
    "IssueViewPanel-Notifications": "通知事项",
    "IssueViewPanel-NotificationsOff": "通知关闭",
    "IssueViewPanel-NotificationsOn": "通知开启",
    "IssueViewPanel-OpenCardInBrowser": "在浏览器中打开卡",
    "IssueViewPanel-OpenIssueInBrowser": "浏览器中的未解决问题",
    "IssueViewPanel-ReplyToComment": "回复评论",
    "IssueViewPanel-ReplyToThread": "回复主题",
    "IssueViewPanel-ShowReplies": "show {0} replies",
    "IssueViewPanel-ShowReply": "show {0} reply",
    "IssueViewPanel-State": "州",
    "IssueViewPanel-Status": "状态",
    "IssueViewPanel-StatusInvalidTransition": "无效的状态转换",
    "IssueViewPanel-TaskLists": "任务清单",
    "IssueViewPanel-Tasks": "任务",
    "Jira-OpenGitIntegrationForJira": "View Git Integration for Jira",
    "Jira-GIJHeading": "Git Integration for Jira + GitKraken",
    "Jira-GIJMessage": "The Git Integration for Jira allows developers to review branches, commits, and pull requests directly in Jira. With this app installed on your Jira instance and the GitKraken Jira integration connected, you'll be able to quickly navigate between viewing file and commit diffs in both GitKraken and Jira.",
    "Jira-GIJIsInstalled": "App is installed on your Jira instance",
    "Jira-GIJNotInstalled": "Ask an admin to install this app on your Jira instance",
    "JiraFilterForm-JqlError": "JQL错误",
    "JiraFilterForm-JqlLabel": "查询（JQL）",
    "JiraFilterForm-JqlEmpty": "JQL不能为空",
    "JiraFilterForm-JqlMissingProject": "JQL must contain 'project = \"{0}\"'",
    "JiraFilterForm-JqlPlaceholder": "输入一个JQL查询",
    "JiraFilterForm-ValidateError": "无法使用Jira验证查询",
    "MemberMenu-AreYouSureRemoveMember": "Are you sure you want to remove \"{0}\" from your organization?",
    "MemberMenu-CurrentOwner": "Current Owner",
    "MemberMenu-EmailsDontMatch": "Emails do not match",
    "MemberMenu-MakeAdmin": "Make {0} an Admin",
    "MemberMenu-MakeBilling": "Make {0} a Billing Contact",
    "MemberMenu-MakeUser": "Make {0} a User",
    "MemberMenu-NewOwner": "New Owner",
    "MemberMenu-PleaseTypeNewOwnersEmail": "Please type the new owner's email here",
    "MemberMenu-RemoveMember": "Remove member",
    "MemberMenu-RemoveMemberWithABoard": "\"{0}\" owns 1 board that must be transferred to a new owner.",
    "MemberMenu-RemoveMemberWithBoards": "\"{0}\" owns {1} boards that must be transferred to a new owner.",
    "MemberMenu-TransferOwnership": "Transfer Ownership",
    "MemberMenu-TransferThisBoardTo": "Transfer this board to",
    "MemberMenu-TransferTheseBoardsTo": "Transfer these boards to",
    "MemberMenu-TransferWarning": "Making {0} the owner of this orgnaization is irreversible. You will be downgraded to an admin, or a billing contact if there are not enough licenses. Billing contacts do not consume a license.",
    "MemberMenu-SelectToTransfer": "Select a member to transfer",
    "MemberMenu-VerifyTransferOwnership": "To verify, please type \"{0}\" below.",
    "RemoteBar-Menu": "远程操作",
    "ShPath-ConfirmPath": "这个存储库需要需要sh来运行Git钩子。sh的路径是否位于{0}?",
    "StashBar-Menu": "贮藏操作",
    "WorkDirMessageInput-WIPPlaceholder": "// WIP",
    "CommitAllChangesShortcutTip": "使用Shift-Enter提交所有改动",
    "Timeline-1HourAgo": "1小时前",
    "Timeline-NHoursAgo": "{0}小时前",
    "Timeline-Yesterday": "昨天",
    "Timeline-NDaysAgo": "{0}天前",
    "Timeline-1WeekAgo": "一周前",
    "Timeline-NWeeksAgo": "{0}周前",
    "Timeline-1MonthAgo": "1个月前",
    "Timeline-NMonthsAgo": "{0}个月前",
    "Timeline-1YearAgo": "一年前",
    "Timeline-NYearsAgo": "{0}年前",
    "Timeline-ArbitrarilyLongAgo": "请停止滚动",
    "Graph-AdjustCommitCount": "Displaying {0} commits. Adjust this setting in ",
    "Graph-Preferences": "首选项",
    "GraphHeader-BranchTag": "BRANCH / TAG",
    "GraphHeader-CommitAuthor": "AUTHOR",
    "GraphHeader-CommitDateTime": "COMMIT DATE / TIME",
    "GraphHeader-CommitGraph": "GRAPH",
    "GraphHeader-CommitMessage": "COMMIT MESSAGE",
    "GraphHeader-CommitSha": "SHA",
    "GraphHeader-EditColumns": "Add/Remove Columns",
    "OptionalGraphZone-CommitAuthor": "Author",
    "OptionalGraphZone-CommitDateTime": "Date / Time",
    "OptionalGraphZone-CommitSha": "Sha",
    "RightPanel-FilterFiles": "过滤文件",
    "RightPanel-MergeConflictsDetected": "检测到合并冲突",
    "RightPanel-1ChangeOn": "1个文件改动",
    "RightPanel-NChangesOn": "{0}文件改动",
    "RightPanel-NCommitsSelected": "{0}个已选中的提交",
    "RightPanel-PinToBottom": "固定在底边",
    "RightPanel-PinToRight": "固定在右边",
    "RightPanel-RebaseConflictsDetected": "检测到变基冲突",
    "RightPanel-UnsupportedRebase": "外部变基正在进行中",
    "RightPanel-ViewChange": "查看改动",
    "RightPanel-ViewChanges": "查看改动",
    "RightPanel-ViewConflict": "查看冲突",
    "RightPanel-ViewConflicts": "查看冲突",
    "RightPanel-View1FileChangeInWorkingDirectory": "1工作目录中的文件改动",
    "RightPanel-ViewNFileChangesInWorkingDirectory": "工作目录中的 {0} 文件改动",
    "RightPanel-View1FileConflictInWorkingDirectory": "1工作目录中的文件冲突",
    "RightPanel-ViewNFileConflictsInWorkingDirectory": "工作目录中 {0} 文件冲突",
    "RightPanel-ViewAllFiles": "查看所有文件",
    "StagingPanel-ShowMoreFiles": "显示下一个{0}({1}以上)",
    "StagingPanel-Amend": "修改",
    "StagingPanel-UseTemplate": "使用模板",
    "StagingPanel-WarningDetachedHeadState": "您处于独立的HEAD状态",
    "StagingPanel-DetachedHeadStateExplanation": "如果签出另一个分支或提交，则可能会丢失在分离的HEAD状态下创建的所有提交",
    "CommitMessage-CommitMessageLabel": "提交消息",
    "CommitMessage-SummaryPlaceholder": "摘要",
    "CommitMessage-DescriptionPlaceholder": "描述",
    "CommitDetailPanel-AndTheWIP": "和WIP",
    "CommitDetailPanel-DiffBetweenACommitAndTheWIP": "查看提交和WIP之间的差异",
    "CommitDetailPanel-DiffBetweenCommitsTitle": "查看{0}个提交的合并差异",
    "CommitDetailPanel-DiffBetweenTwoCommits": "查看两个提交之间的差异",
    "CommitDetailPanel-MergeConflictTitle": "合并冲突",
    "CommitDetailPanel-MergeTitle": "合并",
    "CommitDetailPanel-MergeMessage": "将 {0}合并到{1}中",
    "CommitDetailPanel-UnsupportedRebaseTitle": "检测到外部变基",
    "CommitDetailPanel-UnsupportedRebaseMessage": "当变基在其他应用程序中运行时, GitKraken的功能受到限制",
    "UncommittedFileList-StagedFilesTitleSummary": "已暂存文件({0})",
    "UncommittedFileList-UnstagedFilesTitleSummary": "未暂存文件({0})",
    "UncommittedFileList-ConflictedFilesTitleSummary": "冲突文件({0})",
    "UncommittedFileList-UnconflictedFilesTitleSummary": "已解析文件({0})",
    "CommitDiffSection-NFilesAdded": "{0}添加",
    "CommitDiffSection-NFilesDeleted": "{0}删除",
    "CommitDiffSection-NFilesModified": "{0}修改",
    "CommitDiffSection-NFilesRenamed": "{0}改名",
    "FileViewPanel-DiffView": "差异视图",
    "FileViewPanel-EditInWorkDir": "在工作目录中编辑",
    "FileViewPanel-EditThisFile": "编辑此文件",
    "FileViewPanel-OpenInJira": "Open in Jira",
    "FileViewPanel-Editable": "编辑",
    "FileViewPanel-FileView": "文件视图",
    "FileViewPanel-DiffFileMode": "将文件模式从{0}改动为{1}",
    "FileViewPanel-HunkView": "区块视图",
    "FileViewPanel-InlineView": "内联视图",
    "FileViewPanel-NextDiff": "下一个更改",
    "FileViewPanel-PreviousDiff": "上一个更改",
    "FileViewPanel-SplitView": "拆分视图",
    "FileViewPanel-ToggleSplitView": "切换拆分视图",
    "FileViewPanel-IgnoreWhiteSpace": "忽略空格",
    "FileViewPanel-History": "历史",
    "FileViewPanel-Blame": "追责",
    "PendingInteractiveRebasePanel-MoveCommitDownTooltip": "下移提交",
    "PendingInteractiveRebasePanel-MoveCommitUpTooltip": "向上提交",
    "PendingInteractiveRebasePanel-Reset": "重启",
    "PendingInteractiveRebasePanel-CancelRebase": "取消变基",
    "PendingInteractiveRebasePanel-StartRebase": "开始变基",
    "PendingInteractiveRebasePanel-UpdateMessage": "更新讯息",
    "PendingInteractiveRebasePanel-KeyboardShortcuts": "键盘快捷键",
    "FileContentsPanel-Binary": "二进制文件",
    "FileContentsPanel-Deleted": "文件已删除",
    "FileContentsPanel-Tree": "目录",
    "FileContentsPanel-EmptyDiff": "该文件尚未改动。",
    "DiffPanel-EmptyFile": "空文件",
    "FileNodeListControls-FullPath": "路径",
    "FileNodeListControls-SortByNameLabel": "按文件名排序",
    "FileNodeListControls-TreeView": "树状",
    "FileNodeListHeader-CollapseAll": "全部折叠",
    "FileNodeListHeader-ExpandAll": "全部展开",
    "FileNode-1HiddenSelection": "已选中1个文件",
    "FileNode-NHiddenSelections": "已选中{0}个文件",
    "Merge-AutoResolved": "合并工具自动解决冲突",
    "Merge-A": "A",
    "Merge-B": "B",
    "Merge-BinaryFile": "二进制文件",
    "Merge-Commit": "提交",
    "Merge-ConflictXofY": "冲突{0}/{1}",
    "Merge-DontTake": "删除此行",
    "Merge-NoAncestorFile": "没有上级文件",
    "Merge-NoImage": "无图片",
    "Merge-Reset": "清除选择",
    "Merge-ResetMerge": "重置",
    "Merge-SaveOutput": "保存输出",
    "Merge-SaveWithConflicts": "创建冲突区块",
    "Merge-TakeAll": "全部使用",
    "Merge-UntakeAll": "全部取消",
    "Merge-TakeLeft": "使用A",
    "Merge-TakeLeftOnly": "仅使用A",
    "Merge-TakeLine": "使用此行",
    "Merge-TakeRight": "使用B",
    "Merge-TakeRightOnly": "仅使用B",
    "Merge-OneConflict": "(1个冲突)",
    "Merge-Output": "输出",
    "Merge-PremiumFeature": "高级GitKraken功能",
    "Merge-Unknown": "应用补丁或贮藏",
    "Merge-UpgradeLink": "升级GitKraken",
    "Merge-UpgradeText": "编辑文件输出",
    "Merge-PremiumMergeDescription": "升级GitKraken并进一步简化合并冲突解决方案，可以直接编辑输出而无需离开应用程序。",
    "Merge-XConflicts": "({0}个冲突)",
    "DiffImage-ShowDiffOverlay": "旧图片上的差异叠加",
    "DiffImage-ErrorLoadingImage": "加载图片时出错。",
    "DiffImage-OldImage": "旧图像",
    "DiffImage-NewImage": "新图像",
    "RefZone-EnterBranchName": "输入分支名称",
    "RefZone-EnterTagName": "输入标签名称",
    "RefZone-LocalRefLabel": "本地",
    "RefZone-SubmoduleTagTip": "子模块父引用",
    "ChangeRepo-CloneRepo": "克隆",
    "ChangeRepo-InitRepo": "初始化",
    "ChangeRepo-OpenRepo": "打开",
    "CloseRepo-CloseFailed": "关闭失败",
    "OpenRepo-AddProjectFolder": "添加项目文件夹",
    "OpenRepo-AddProjectFolderTooltip": "添加一个文件夹, 您可以在其中保存多个存储库, 因此GitKraken可以帮助您快速打开它们",
    "OpenRepo-BrowseForProjectDirectory": "浏览项目目录",
    "OpenRepo-BrowseForReposButtonLabel": "打开一个存储库",
    "OpenRepo-BrowseForReposDialogTitle": "选择要打开的存储库",
    "OpenRepo-Favorites": "收藏夹",
    "OpenRepo-FavoritesSubtext": "拖放以重新排序收藏夹并配置快捷方式",
    "OpenRepo-IsOpenIndicator": "(已打开)",
    "OpenRepo-NoReposFavorited": "没有收藏的存储库。",
    "OpenRepo-NoReposFound": "GitKraken 没有找到任何存储库。",
    "OpenRepo-OpenFailed": "打开失败",
    "OpenRepo-OpeningRepo": "正在打开存储库",
    "OpenRepo-ProjectFoldersSection": "项目组",
    "OpenRepo-RecentlyOpened": "最近打开的",
    "OpenRepo-SearchingForRepos": "正在寻找存储库",
    "OpenRepo-SearchBarPlaceholder": "按名称过滤仓库",
    "CloneRepo-ArchivedRepoSuffix": "(存档)",
    "CloneRepo-CloneARepo": "克隆存储库",
    "CloneRepo-CloneDestinationPath": "要克隆到的位置",
    "CloneRepo-ClonedRepoName": "完整路径",
    "CloneRepo-CloneRepoButtonLabel": "克隆存储库！",
    "CloneRepo-RepoToCloneViaService": "要克隆的存储库",
    "CloneRepo-RepoToCloneUrl": "URL",
    "CloneRepo-CloneSuccess": "存储库'{0}'克隆成功",
    "CloneRepo-CloneFailed": "克隆失败",
    "CloneRepo-CloneViaUrl": "使用URL克隆",
    "InitRepo-CreateRepoButtonLabel": "创建存储库",
    "InitRepo-CreateRepoAndCloneButtonLabel": "创建存储库并克隆",
    "InitRepo-CreateRepoTarget": "初始化",
    "InitRepo-DefaultBranchName": "Default branch name",
    "InitRepo-GitIgnoreTemplate": ".gitignore模板(可选)",
    "InitRepo-GitIgnoreTypeaheadPlaceholder": "开始输入以搜索模板",
    "InitRepo-InitLocally": "仅限本地",
    "InitRepo-InitARepo": "初始化存储库",
    "InitRepo-License": "许可证(可选)",
    "InitRepo-HostingServiceAccountLabel": "账户",
    "InitRepo-HostingServiceProjectLabel": "项目",
    "InitRepo-HostingServiceRepoNameLabel": "名称",
    "InitRepo-HostingServiceRepoDescriptionLabel": "描述",
    "InitRepo-HostingServiceAccessLabel": "访问",
    "InitRepo-HostingServiceCloneAfterInitLabel": "初始化后克隆",
    "InitRepo-InvalidDefaultBranchName": "Invalid branch name.",
    "InitRepo-InvalidInitPath": "Invalid path.",
    "InitRepo-NewRepoPath": "新建存储库路径",
    "InitRepo-PublicAccess": "公开",
    "InitRepo-PrivateAccess": "私有",
    "FileHistory-NothingFound": "已搜索到{0}({1})",
    "FileHistory-ContinueLooking": "深入",
    "GeneralPreferences": "常规",
    "GeneralPreferences-AllowTeamVisibility": "Share WIP status with my team",
    "GeneralPreferences-AllowTeamVisibilityHelp": "Allow team members to see which branches and files I'm working on to avoid conflicts.",
    "GeneralPreferences-AutoFetchInterval": "自动获取间隔",
    "GeneralPreferences-AutoFetchIntervalHelp": "它可以设置为0到60分钟(设置为0时, 禁用自动获取)。获取所有可见的远程。",
    "GeneralPreferences-AutoFetchIntervalWarning": "如果您有许多可见的远程, 这可能会影响性能。",
    "GeneralPreferences-AutoFetchIntervalWarningWithLfs": "如果您有许多可见的远程, 这可能会影响性能。LFS 对象将不会自动获取。",
    "GeneralPreferences-AutoPrune": "自动裁剪",
    "GeneralPreferences-CustomTerminalCmd": "自定义命令终端",
    "GeneralPreferences-CustomTerminalCmdHelp": "打开新终端窗口时将执行该命令。关键字%d将被替换为存储库路径",
    "GeneralPreferences-DefaultBranchName": "Default Branch Name",
    "GeneralPreferences-DefaultBranchNameHelp": "Sets the default branch name when initializing new repositories.",
    "GeneralPreferences-DefaultTerminal": "默认终端",
    "GeneralPreferences-DeleteOrigAfterMerge": "合并后删除\".orig\"文件",
    "GeneralPreferences-ExternalDiffTool": "外部差异工具",
    "GeneralPreferences-UseSameDiffTool": "使用合并工具作为比较工具",
    "GeneralPreferences-UseSameDiffToolHelp": "使用配置的合并工具显示差异",
    "GeneralPreferences-ExternalMergeTool": "外部合并工具",
    "GeneralPreferences-MergeToolHelp": "选设置用于解决合并冲突的应用程序",
    "GeneralPreferences-Longpaths": "长途跋涉",
    "GeneralPreferences-LongpathsHelp": "默认情况下，Windows仅支持少于260个字符的文件路径。启用对更长文件路径的支持。",
    "GeneralPreferences-GitConfigDefault": "Git Config默认",
    "GeneralPreferences-RememberTabs": "记住标签",
    "GeneralPreferences-ExternalEditor": "外部编辑器",
    "GeneralPreferences-OptIntoAnalytics": "将GitKraken使用数据发送给Axosoft",
    "GeneralPreferences-OptIntoBugReporting": "将关于GitKraken的bug报告发送给Axosoft",
    "GeneralPreferences-WindowsShPathLocation": "sh.exe的路径",
    "GeneralPreferences-WindowsShPathLocationHelp": "只有在使用Git钩子时才需要指定sh.exe的路径。\nsh.exe可以在Git for Windows的安装路径下找到\n它通常位于Program Files\\Git\\bin。\n如果找不到它, 则可能需要安装Git for Windows。",
    "GeneralPreferences-UseCustomTerminalCmd": "使用自定义终端命令",
    "GeneralPreferences-MaxCommitsToShowInGraph": "图中的最大提交数",
    "GeneralPreferences-MaxCommitsToShowInGraphHelp": "最低2000",
    "GeneralPreferences-MaxCommitsToShowInGraphWarning": "增大此值可能会对性能产生不利影响。",
    "GeneralPreferences-ShowAllCommitsInGraph": "显示图中的所有提交",
    "GeneralPreferences-ShowAllCommitsInGraphWarning": "启用此选项可能会对性能产生不利影响。",
    "GeneralPreferences-UseExtendedLogging": "在活动日志中使用扩展日志记录",
    "RepoSpecificPreferences": "特定存储库首选项",
    "GitConfig": "Git配置",
    "GitConfig-Email": "电子邮件地址",
    "GitConfig-Name": "用户名",
    "GitConfig-AutoCRLF": "自动行尾字符",
    "PurchaseReceipt-Updating": "updating",
    "PurchaseReceipt-Type-Suite": "GitKraken {0} Suite",
    "PurchaseReceipt-Type-Gitgui": "GitKraken Git GUI {0}",
    "PurchaseReceipt-Type-Boards": "GitKraken Boards {0}",
    "PurchaseReceipt-Type-Timelines": "GitKraken Timelines {0}",
    "PurchaseReceipt-Suite": "GitKraken Suite",
    "PurchaseReceipt-Gitgui": "GitKraken Git GUI",
    "PurchaseReceipt-Boards": "GitKraken Boards",
    "PurchaseReceipt-Timelines": "GitKraken Timelines",
    "PurchaseReceipt-Individual": "Individual",
    "PurchaseReceipt-Pro": "Pro",
    "PurchaseReceipt-Enterprise": "Enterprise",
    "PurchaseReceipt-CostEach": "{0} each",
    "PurchaseReceipt-ExistingLicensesSingular": "{0} existing license",
    "PurchaseReceipt-ExistingLicensesPlural": "{0} existing licenses",
    "PurchaseReceipt-CountAdditionalLicenseSingular": "+ {0} additional license",
    "PurchaseReceipt-CountAdditionalLicensePlural": "+ {0} additional licenses",
    "PurchaseReceipt-Subtotal": "Subtotal",
    "PurchaseReceipt-PromoCode": "Promo Code: {0}",
    "PurchaseReceipt-PromoCodeApplied": "Promo Code applied",
    "PurchaseReceipt-ProratedCharge": "Prorated charge today",
    "PurchaseReceipt-Tax": "Tax",
    "PurchaseReceipt-TaxAt": "(tax at {0})",
    "PurchaseReceipt-TaxAtRate": "Tax at {0}",
    "PurchaseReceipt-Total": "Total",
    "PurchaseReceipt-NewIntervalTotal": "New {0} Total",
    "PurchaseReceipt-NextChargeOn": "Next charge on {0}",
    "SSH": "SSH协议",
    "SSHKey": "SSH密钥",
    "SSHConfig": "SSH配置",
    "SSHConfig-GenerateNewKey": "生成新的密钥/公钥",
    "SSHConfig-GenerateNewKeyHelp": "这将创建新的密钥并配置GitKraken以使用它们",
    "SSHConfig-UseLocalSSHAgent": "使用本地SSH代理",
    "SSHConfig-SSHPrivateKey": "SSH密钥",
    "SSHConfig-SSHPublicKey": "SSH公钥",
    "SSHConfig-SSHKeySaveLocation": "SSH密钥保存位置",
    "Authentication-ForgetAllCredentials": "忘记所有用户名/密码",
    "Authentication-ForgetAll": "忘记所有",
    "Authentication-NoCredentialsToRemove": "GitKraken没有要删除的存储凭据",
    "Service": "服务",
    "Services": "服务",
    "Services-AddAndCopy": "添加SSH密钥并将其复制到剪贴板",
    "Services-AddedDate": "{0}已添加",
    "Services-AddExistingSSHKey": "添加现有SSH密钥",
    "Services-AddToService": "添加{0}",
    "Services-AppKey": "应用程式金钥",
    "Services-BrowseForPublicSSHKey": "浏览**公**钥",
    "Services-BrowseForPrivateSSHKey": "浏览**私**钥",
    "Services-CannotDisconnectLoginService": "当{0}被用于登录GitKraken时, 不能断开连接。",
    "Services-ClearSSHKey": "停止使用",
    "Services-ComingSoon": "即将推出",
    "Services-Connect": "连接",
    "Services-Connected": "已连接",
    "Services-ConnectedWithService": "已连接到{0}",
    "Services-CopySSHPublicKeyToClipboard": "将公钥复制到剪贴板",
    "Services-CopySSHPublicKeyAndOpenWebsite": "将公钥复制到剪贴板并使用{0}打开它",
    "Services-AuthenticationGeneral": "常规",
    "Services-DeleteSSHKey": "删除本地",
    "Services-Disconnect": "断开",
    "Services-EditConfig": "编辑",
    "Services-Reconnect": "重连接",
    "Services-RemoveConfig": "删除",
    "Services-RemoveConfigTooltip": "移除与此服务器的连接",
    "Services-RemoveSSHKey": "删除密钥",
    "Services-RemoveAndDeleteSSHKey": "移除并删除",
    "Services-GenerateSSHKey": "生成SSH密钥",
    "Services-GenerateAndAddSSHKey": "生成SSH密钥并添加到{0}",
    "Services-GenerateAndCopySSHKey": "生成SSH密钥并复制到剪贴板",
    "Services-HostDomain": "主机域",
    "Services-HostDomainHint": "例如: {0}.mycompany.com",
    "Services-HostDomainHintAzureDevops": "例如, dev.azure.com/mycompany",
    "Services-Info": "设置SSH并继续登录以优化您的体验。GitKraken可以为每个服务设置不同的SSH密钥。",
    "Services-KeyPrivate": "私钥: {0}",
    "Services-KeyPublic": "公钥: {0}",
    "Services-LeaveBlank": "建议此字段留空",
    "Services-ServiceNotConnected": "{0}未连接",
    "Services-NotConnected": "未连接",
    "Services-AddKey": "将密钥添加到{0}",
    "Services-OAuthToken": "OAuth令牌",
    "Services-PersonalAccessToken": "个人访问令牌",
    "Services-PersonalAccessTokenGenerate": "创建{0}的访问令牌",
    "Services-PersonalAccessTokenTooltip": "GitKraken可以使用个人访问令牌连接到企业服务器, 并简化应用程序中的操作. 单击 <i class=\"zmdi zmdi-help-outline color-accent\"> </i> 了解如何执行。",
    "Services-GitKrakenNeedsATokenFrom": "GitKraken需要一个令牌从",
    "Services-WithTheFollowingSettings": "使用以下设置：",
    "Services-GenerateATokenOn": "在{0}上生成令牌",
    "Services-Repo": "{0}存储库",
    "Services-SaveToken": "保存令牌",
    "Services-ServiceConnectionSuccessful": "已连接到{0}",
    "Services-ServiceConnectionSuccessfulMessage": "在克隆或添加远程时, GitKraken将帮助您查找{0}上的内容。我们还将使用您的SSH配置来获取和推送;或者, 您可以在\"服务\"菜单中设置一个{0}特定的SSH密钥。",
    "Services-ServiceConnectionSuccessfulWithoutRemotesMessage": "GitKraken将帮助您在克隆时查找{0}上的内容。我们还将使用您的SSH配置来获取和推送;或者, 您可以在\"服务\"菜单中设置一个{0}特定的SSH密钥。",
    "Services-SSHKey": "SSH密钥",
    "Services-SSHKeyAdviseAdd": "在{0}账户上找不到此项。GitKraken可以尝试将密钥添加到{0}(推荐)。",
    "Services-SSHKeyAdviseInvalid": "在{0}账户上找不到此项。您可以从下面配置GitHub的SSH密钥。",
    "Services-SSHKeyAdviseInvalidOrAdd": "在{0}账户上找不到此项。GitKraken可以尝试将密钥添加到{0}, 也可以在下面配置其他密钥。",
    "Services-SSHKeyAdditionSuccessful": "将SSH密钥已添加到{0}!",
    "Services-SSHKeyRemovalSuccessful": "SSH密钥已从{0}中删除。",
    "Services-SSHKeyTitlePlaceholder": "(可选)请输入新SSH密钥的标题",
    "Services-SSHKeyTooltip": "使用GitKraken将SSH密钥添加到 {0}。在与{0} SSH存储库交互时, GitKraken将使用该密钥。",
    "Services-SSHKeyUnverifiable": "{0}不允许外部应用程序检查公钥是否已注册。如果您的密钥未被{0}接受, 请使用下面的按钮, 并确保该键已添加到{1}上。",
    "Services-Token": "代币",
    "Services-UsingAgent": "使用系统SSH本地代理",
    "Services-UsingDefaults": "使用默认的GitKraken SSH密钥",
    "Services-UsingNone": "未检测到 SSH 设置。可以将 SSH 密钥添加到下面的 {0}。",
    "Services-WaitingForAuthorization": "正在等待授权...",
    "Services-WaitingForAuthorizationTooltip": "正在等待与 {0} 建立的连接。单击此处再次尝试连接。",
    "Services-UsingQuestion": "是否使用 {0}?",
    "Services-GitHubEnterpriseUpgradeToPro": "升级到GitKraken专业版并享与GitHub企业服务器相同的集成，就像使用GitHub.com一样",
    "Services-BitbucketServerUpgradeToPro": "升级到GitKraken专业版并享与BitBucket服务器相同的集成，就像使用Bitbucket.org一样",
    "Services-GitLabSelfHostedUpgradeToPro": "升级到GitKraken专业版并享与Gi​​tLab服务器相同的集成，就像使用GitLab.com一样",
    "Services-AzureDevopsUpgradeToPro": "升级到GitKraken专业版以开始使用Azure开发运维集成",
    "Services-Error-HostDomainUnreachable": "无法访问指定的主机",
    "Services-Error-TokenInvalid": "指定的令牌无效",
    "Services-Error-SaveAuthDataFailed": "连接到集成失败",
    "Services-Username": "用户名",
    "Services-Password": "密码",
    "Services-AppToken": "应用令牌",
    "Services-AccessToken": "访问令牌",
    "Services-ProceedWithInvalidSSLCert": "Proceed using an invalid SSL certificate.",
    "Integrations": "整合方式",
    "Shop-ShopTitle": "账户管理",
    "Shop-OpenInBrowser": "在浏览器中打开",
    "CommitTemplate": "提交模板",
    "CommitTemplates-Description": "描述",
    "CommitTemplates-Summary": "摘要",
    "CommitTemplates-TitleLimitHelpText": "使用为提交摘要分配的 {0}/{1} 个字符",
    "CommitTemplates-TitleLimitExceeded": "超过了用于提交摘要的字符限制 ({0})!",
    "CommitTemplates-SuccessSaveTemplate": "保存提交模板成功",
    "CommitTemplates-ErrorSaveTemplate": "保存提交模板时出错",
    "CommitTemplates-SaveCommitTemplate": "保存提交模板",
    "CommitTemplates-Instructions": "应用默认初始消息，可在提交时保持摘要和描述的一致性。有关详细信息, 请参阅",
    "CommitTemplates-CommitTemplateDocumentation": "Git提交模板文档",
    "CommitTemplates-UseTemplateForCommitMessages": "将此模板应用于提交消息",
    "CommitTemplates-RemoveCommentsFromCommitMessages": "从提交消息中删除注释",
    "GitFlow": "Git工作流",
    "GitFlow-Branches": "分支",
    "GitFlow-Prefixes": "前缀",
    "GitFlow-Master": "主干",
    "GitFlow-Develop": "开发",
    "GitFlow-Feature": "功能",
    "GitFlow-Release": "发布",
    "GitFlow-Hotfix": "热修复",
    "GitFlow-VersionTag": "版本标签",
    "GitFlow-Init": "初始化Git工作流",
    "GitFlow-Init-NoRepo": "必须打开一个存储库才能初始化 Git 流。",
    "GitFlow-Init-Success": "Git工作流初始化成功",
    "GitFlow-Init-Failure": "Git工作流初始化失败",
    "GitFlow-Update": "更新Git工作流设置",
    "GitFlow-UpdateWarning": "更改这些前缀将导致使用不同前缀的现有分支被Git工作流忽略。",
    "GitFlow-Start": "启始",
    "GitFlow-StartAt": "启始于:",
    "GitFlow-StartFeature": "启始功能",
    "GitFlow-StartHotfix": "启始热修复",
    "GitFlow-StartRelease": "启始发布",
    "GitFlow-StartFeatureSuccess": "功能已启始: '{0}'",
    "GitFlow-StartHotfixSuccess": "热修复已启始: '{0}'",
    "GitFlow-StartReleaseSuccess": "发布已启始: '{0}'",
    "GitFlow-Finish": "完结",
    "GitFlow-Finish-Branch": "完结{0}",
    "GitFlow-FinishFeature": "完结功能",
    "GitFlow-FinishFeatureSuccess": "功能已完结: '{0}'",
    "GitFlow-FinishHotfix": "完结热修复",
    "GitFlow-FinishHotfixSuccess": "热修复已完结: '{0}'",
    "GitFlow-FinishRelease": "完结发布",
    "GitFlow-FinishReleaseSuccess": "发布已完结: '{0}'",
    "GitFlow-LatestDevelop": "最新的{0}",
    "GitFlow-WorkingCopy": "当前分支",
    "GitFlow-DeleteBranch": "删除分支",
    "GitFlow-RebaseOnDevelop": "变基为{0}",
    "GitFlow-TagMessage": "标签消息",
    "GitFlow-Exit": "退出Git工作流",
    "GitFlow-CannotFinishFeatureMissingRef": "无功能可完结",
    "GitFlow-CannotFinishFeatureMissingDevelop": "{0}分支必须完结功能",
    "GitFlow-CannotFinishHotfixMissingRef": "无热修复可完结",
    "GitFlow-CannotFinishHotfixMissingBoth": "{0}和{1}分支必须完结热修复",
    "GitFlow-CannotFinishHotfixMissingDevelop": "{0}分支必须完结热修复",
    "GitFlow-CannotFinishHotfixMissingMaster": "{0}分支必须完结热修复",
    "GitFlow-CannotFinishReleaseMissingRef": "无发布可完结",
    "GitFlow-CannotFinishReleaseMissingBoth": "{0}和{1}分支必须完结热修复",
    "GitFlow-CannotFinishReleaseMissingDevelop": "{0}分支必须完结发布",
    "GitFlow-CannotFinishReleaseMissingMaster": "{0}分支必须完结发布",
    "GitFlow-CannotStartFeatureMissingDevelop": "{0}分支必须启始功能",
    "GitFlow-CannotStartHotfixMissingMaster": "{0}分支必须启始热修复",
    "GitFlow-CannotStartReleaseMissingDevelop": "{0}分支必须启始发布",
    "GitHooks-BrowseForDirectory": "Select a directory to use",
    "GitHooks-Info": "The directory that Git hooks will use for this repository.",
    "GitHooks-Instructions": "Git hooks are shell scripts that execute after an event such as a commit or push. For more details, see the ",
    "GitHooks-InvalidPath": "Invalid Git hooks directory.",
    "GitHooks-Link": "GitKraken Git hooks documentation.",
    "GitHooks-Label": "Git Hooks",
    "GitHooks-Path": "Git Hooks directory",
    "GitHubActions-WorkflowFileExists": "{0} already exists",
    "GitHubActionsTemplates-DefaultCategory": "基本模板",
    "GitHubActionTemplates-BlankTemplate": "空白工作流程",
    "GitHubActionsTemplates-AdditionalTemplatesCategory": "其他模板",
    "GitHubActionsTemplates-CCPPWithMake": "使用Make的C / C ++",
    "GitHubActionTemplates-GreetFirstTimeContributors": "迎接初次贡献者",
    "GitHubActionTemplates-LabelPRsBasedOnFilesChanged": "根据更改的文件对PR进行标签",
    "GitHubActionTemplates-CheckForStaleIssuesAndPRs": "检查过时的问题和PR",
    "Lfs-TrackingPatternPlaceholder": "请输入模式(例如: *.Zip)",
    "Lfs-AddTrackingPattern": "添加跟踪模式",
    "Lfs-ViewGitattributes": "在编辑器中查看.gitattributes",
    "Lfs-PreferencesHeader": "LFS",
    "Lfs-HasNotBeenInitialized": "LFS未使用{0}进行初始化",
    "Lfs-InitializeLfs": "初始化LFS",
    "Lfs-InitializeLfsOnThisRepo": "在此存储库初始化LFS",
    "Lfs-TrackingPatterns": "跟踪模式",
    "Lfs-AllFilesWithSameExtension": "跟踪具有扩展名 \"{0}\" 的所有文件",
    "Lfs-AllFilesInFolder": "跟踪 \"{0}/\" 下的所有文件",
    "Lfs-TrackFile": "跟踪 \"{0}\"",
    "Lfs-Commands": "LFS命令",
    "Lfs-Push": "推送所有LFS文件",
    "Lfs-Prune": "剪裁本地LFS存储库",
    "Lfs-Pull": "拉取所有 LFS 文件",
    "Lfs-Checkout": "检出所有LFS文件",
    "Lfs-Fetch": "获取所有LFS文件",
    "Lfs-IsWorking": "工作...",
    "Lfs-PullLfsNow": "您确定要拉出所有LFS文件吗?",
    "Lfs-InitializeWithLfs": "初始化LFS",
    "Lfs-SettingsHeader": "LFS设置",
    "Lfs-LfsNotInstalledMessage": "此存储库需要LFS, 但尚未安装。改动LFS管理的文件可能会对存储库产生负面影响。有关安装LFS的信息, 请访问支持网站。",
    "Lfs-LfsNotProperVersionMessage": "Git或LFS的版本已过期。改动LFS管理的文件可能会对存储库产生负面影响。有关安装LFS的信息, 请访问支持网站。",
    "Lfs-ContinueWithoutLfs": "继续无LFS",
    "Lfs-VisitSupportDocs": "查看文档",
    "Lfs-NewPattern": "添加新模式",
    "Lfs-FetchHeader": "获取",
    "Lfs-PullHeader": "拉取",
    "Lfs-PushHeader": "推送",
    "Lfs-PruneHeader": "剪裁",
    "Lfs-CheckoutHeader": "检出",
    "Lfs-ErrorPull": "拉取LFS时发生错误",
    "Lfs-ErrorFetch": "获取LFS期间发生错误",
    "Lfs-ErrorPush": "推送LFS时发生错误",
    "Lfs-ErrorPrune": "在LFS剪裁期间发生错误",
    "Lfs-ErrorCheckout": "LFS检出时发生错误",
    "Lfs-SuccessPull": "LFS拉成功",
    "Lfs-SuccessFetch": "LFS获取成功",
    "Lfs-SuccessPush": "LFS推进成功",
    "Lfs-SuccessPrune": "LFS剪裁成功",
    "Lfs-SuccessCheckout": "LFS检出成功",
    "Lfs-UpToDate": "LFS文件是最新的",
    "Lfs-NeedsYourCredentials": "LFS需要身份验证信息",
    "submodule": "submodule",
    "Submodule": "子模块",
    "Submodule-CannotStageUncommittedSubmoduleChanges": "有些改动尚未提交给子模块。请提交改动并打开子模块。",
    "Submodule-CheckingOut": "正在检出子模块{0}",
    "Submodule-CommitMessageDeleted": "已移除子模块{0}",
    "Submodule-CommitMessageNew": "子模块{0}已添加",
    "Submodule-CommitMessageUpdated": "已更新子模块{0}",
    "Submodule-CommitWithAlreadyStagedPrompt": "您有已暂存的改动，是否也要提交这些改动?",
    "Submodule-CouldNotShowCurrent": "在初始化子模块之前无法解决子模块{0}中的合并冲突",
    "Submodule-Create": "添加子模块",
    "Submodule-Creating": "正在添加子模块",
    "Submodule-DeletePrompt": "这是一种破坏性的操作, 确定要删除 \"{0}\"吗?",
    "Submodule-Deleting": "正在移除子模块",
    "Submodule-Edit": "编辑子模块",
    "Submodule-Fetching": "正在获取子模块{0}",
    "Submodule-FetchingRecursively": "正在递归获取子模块{0}",
    "Submodule-FormAdded": "已添加",
    "Submodule-FormCheckout": "检出",
    "Submodule-FormCommit": "提交改动",
    "Submodule-FormCurrentRevision": "当前修订版",
    "Submodule-FormDefault": "默认",
    "Submodule-FormMerge": "合并",
    "Submodule-FormName": "名称",
    "Submodule-FormNamePath": "名称/路径",
    "Submodule-FormNone": "无",
    "Submodule-FormOpen": "打开此子模块",
    "Submodule-FormPath": "路径",
    "Submodule-FormPointerRevision": "预期的提交",
    "Submodule-FormRebase": "变基",
    "Submodule-FormRemove": "删除此子模块",
    "Submodule-FormReset": "丢弃子模块中的改动",
    "Submodule-FormUpdateStrategy": "更新策略",
    "Submodule-FormUrl": "远程URL",
    "Submodule-FormWorkdirRevision": "已检出提交",
    "Submodule-InitAllPrompt": "您确定要初始化{0}的子模块吗?",
    "Submodule-Initialize": "初始化",
    "Submodule-Initializing": "初始化子模块",
    "Submodule-InitializingProgress": "初始化子模块{0}({1})",
    "Submodule-InitializingUpdate": "更新...",
    "Submodule-Menu": "子模块操作",
    "Submodule-LocalModifications": "有些改动未提交给子模块",
    "Submodule-OpenImplied": "打开子模块",
    "Submodule-UseCurrent": "使用当前的",
    "Submodule-Open": "打开子模块: {0}",
    "Submodule-PathExistsPrompt": "路径{0}已存在，是否删除它?",
    "Submodule-Status-AddedUninitialized": "您的子模块已添加, 但需要初始化。",
    "Submodule-Status-AddedInitialized": "您的子模块已添加和初始化, 但未提交。",
    "Submodule-Status-Deleted": "您已删除此子模块, 需要提交改动。",
    "Submodule-Status-Dirty": "此子模块中存在未提交的改动。",
    "Submodule-Status-DirtyAndOutOfSync": "此子模块中存在未提交的改动, 并且与{0}不同步。",
    "Submodule-Status-InSync": "此子模块与您的存储库 ({0}) 同步。",
    "Submodule-Status-OutOfSync": "子模块与{0}不同步。",
    "Submodule-Status-Uninitialized": "您的子模块目录尚未初始化。",
    "Submodule-UnableToDiff": "无法比较子模块差异。",
    "Submodule-Update": "更新{0}",
    "Submodule-InitializeSpecific": "初始化{0}",
    "Submodule-DirInIndex": "索引中的路径\"{0}\"已作为目录存在。",
    "Submodule-PathConflict": "Submodule {0} cannot be initialized because a submodule is already initalized at {1}",
    "ModifySubmodule-Submit": "编辑此子模块",
    "UIPreferences": "用户界面",
    "UIPreferences-Theme": "主题",
    "UIPreferences-ShowCommitAuthorInGraph": "Show commit author in graph",
    "UIPreferences-ShowCommitDateTimeInGraph": "Show commit date/time in graph",
    "UIPreferences-ShowCommitShaInGraph": "Show commit sha in graph",
    "UIPreferences-ShowGloToolbarButton": "在工具栏中显示GitKraken板按钮",
    "UIPreferences-ShowProjectBreadcrumb": "Show Project breadcrumb in toolbar",
    "UIPreferences-ShowTimelinesToolbarButton": "在工具栏中显示GitKraken时间线按钮",
    "UIPreferences-ShowToolbarLabels": "显示工具栏图标的标签",
    "UIPreferences-Spellcheck": "启用拼写检查",
    "Theme-Light": "亮",
    "Theme-Dark": "暗",
    "UIPreferences-NotificationLocation": "通知位置",
    "NotificationLocation-BottomLeft": "左下方",
    "NotificationLocation-BottomRight": "右下",
    "NotificationLocation-TopLeft": "左上方",
    "NotificationLocation-TopRight": "右上",
    "NotificationLocation-LocationUpdated": "通知位置已更新",
    "UIPreferences-Language": "语言",
    "UIPreferences-UseAuthorInitialsForAvatars": "显示作者首字母缩写，而非头像",
    "Gpg-Passphrase": "GPG密码",
    "Gpg-ReloadGpgKeys": "Reload GPG keys",
    "Gpg-VerificationInfoBadsig": "验证失败，因为签名无效",
    "Gpg-VerificationInfoErrsigPubkey": "验证失败，因为未找到用于签署提交的公钥",
    "Gpg-VerificationInfoExpired": "验证失败，因为密钥或签名已过期",
    "Gpg-VerificationInfoMismatchedEmail": "验证失败，因为提交者电子邮件与该密钥关联的任何电子邮件都不匹配",
    "Gpg-VerificationInfoRevoked": "验证失败，因为密钥已被撤消",
    "Gpg-VerificationInfoUnknown": "验证失败，原因不明",
    "Gpg-VerificationInfoUntrusted": "验证失败，因为密钥不可信",
    "Gpg-VerificationInfoValid": "验证成功完成",
    "Gpg-VerificationKeyId": "密钥ID：",
    "Gpg-VerificationPrimaryUserId": "主要用户ID：",
    "Gpg-VerificationTitle": "GPG签名详细信息",
    "Gpg-VerificationTrust": "相信：",
    "GPGPreferences": "GPG",
    "GPGPreferences-CopyPublicKey": "复制GPG公钥",
    "GPGPreferences-ExpiredKeyLink": "How do I renew an expired key?",
    "GPGPreferences-CurrentKey": "签名密钥",
    "GPGPreferences-CurrentKeyWarning": "A key is required for GPG signing.",
    "GPGPreferences-GpgBin": "GPG计划",
    "GPGPreferences-GpgBinHelp": "This is usually \"gpg\" or \"gpg2\" depending on the\n version you are using.\nYou can also browse for the path directly.",
    "GPGPreferences-GpgBinWarning": "Select a GPG program to sign with.",
    "GPGPreferences-GpgBinPathTitle": "gpg的路径",
    "GPGPreferences-GpgGenerateKey": "生成新的GPG密钥",
    "GPGPreferences-GpgGenerateKeyHelp": "这将创建一个4096位密钥，其名称和电子邮件地址在您当前的个人资料中\n，有效期为2年。\n这还将被设置为您的有效签名密钥。",
    "GPGPreferences-GpgPassphrasePlaceholder": "密码短语（可选）",
    "GPGPreferences-GpgSignCommits": "默认情况下签署承诺",
    "GPGPreferences-GpgSignTags": "默认情况下签署标签",
    "EditorPreferences": "编辑器",
    "EditorPreferences-DefaultFont": "{0} (默认)",
    "EditorPreferences-EOLCharacter": "行尾字符",
    "EditorPreferences-EOLCharacterLF": "LF",
    "EditorPreferences-EOLCharacterCRLF": "CRLF",
    "EditorPreferences-Font": "字体",
    "EditorPreferences-FontSize": "字体大小",
    "EditorPreferences-NoFontsFound": "找不到字体",
    "EditorPreferences-ShowLineNumbers": "显示行号",
    "EditorPreferences-SyntaxHighlighting": "语法高亮",
    "EditorPreferences-WordWrap": "文字换行",
    "EditorPreferences-TabSize": "制表符宽度",
    "ToolbarLabels-Chipotle": "吃葡萄",
    "ToolbarLabels-Fetch": "获取",
    "ToolbarButton-GloDropdownMessage": "单击此仓库上的“ Boards”按钮时，选择要打开的默认木板",
    "ToolbarButton-GloDropdownFilterPlaceholder": "滤板",
    "ToolbarButton-TimelinesDropdownMessage": "单击此仓库上的“时间线”按钮时，选择要打开的默认时间线",
    "ToolbarButton-TimelinesDropdownFilterPlaceholder": "筛选时间表",
    "ToolbarButton-DropdownFilterNoResults": "无结果",
    "TabsBar-CliTitle": "Terminal",
    "TabsBar-ClosedRecently": "Closed recently",
    "TabsBar-NewTabTitle": "新标签",
    "TabsBar-NewTabDescription": "{0} + T",
    "TabsBar-OpenTabs": "Open tabs",
    "TabsBar-Projects": "Projects",
    "TabsBar-SingleProject": "Project",
    "TabsBar-ReleaseNotesTitle": "发行说明",
    "TabsBar-TabsList": "Tabs list ({0} + Shift + A)",
    "TabsBar-SearchTabs": "Search Tabs",
    "ReleaseNotesTab-LoadingReleaseNotes": "加载发行说明",
    "SendUsFeedback": "向我们发送反馈",
    "SendUsFeedback-Account": "Account",
    "SendUsFeedback-BoardsBlurb": "You can also view, upvote, or submit feature requests on our feature board at {0}.",
    "SendUsFeedback-BoardsLink": "feedback.gitkraken.com",
    "SendUsFeedback-CantRespondToAllFeedback": "当 GitKraken 团队阅读所有反馈时, 我们无法回复大多数反馈电子邮件。",
    "SendUsFeedback-DefaultSubject": "关于GitKraken({0})的反馈",
    "SendUsFeedback-Feedback": "反馈",
    "SendUsFeedback-Subject": "主题",
    "ProvideFeedback-GetSupport": "获得支持",
    "ProvideFeedback-DefaultText": "摘要: \n \n [描述问题的简短句子] \n\n重现步骤: \n\n 1. [第一步] \n 2. [第二步] \n 3. [等等... ] \n\n预期行为: [您期望发生什么] \n\n实际行为: [实际发生的事情]",
    "GetSupport": "获得支持",
    "GetSupport-FreeUserUpSell": "由于GitKraken被许多人使用, 使用免费版本的人目前无法通过电子邮件获得支持。",
    "GetSupport-CheckOutOur": "看看我们的",
    "GetSupport-DefaultText": "摘要：\n \n [描述问题的简短句子] \n \n重现步骤：\n \n 1. [第一步] \n 2. [第二步] \n 3. [依此类推... ] \n \n预期行为：[您期望发生的事情] \n \n实际行为：[实际发生的事情]",
    "GetSupport-SupportSite": "支援网站",
    "GetSupport-ForDocumentationAndTutorials": " 有关文档和教程！",
    "GetSupport-CantFindWhatYouNeed": "如果仍然找不到要查找的内容，请在下面提交请求。",
    "GetSupport-DefaultSubject": "GitKraken的支持问题({0})",
    "GetSupport-Subject": "标题",
    "GetSupport-SupportQuestion": "获取支持",
    "PromptCreateFork": "Would you like to fork {0} on {1}?",
    "PromptDeletedFileConflict-KeepAncestor": "保留原始版本",
    "PromptDeletedFileConflict-KeepModified": "保留改动版本",
    "PromptDeletedFileConflict-KeepNew": "保留新版本",
    "PromptDeletedFileConflict-Message": "{0}已在{1}中改动, 但在{2}中已被删除",
    "PromptDeletedFileConflict-NoBaseNoPairMessage": "你想离开{0}吗?",
    "PromptDeletedFileConflict-RemoveFile": "删除文件",
    "PromptForCreds-EnterCredentialsForUrl": "Please enter your credentials for {0}: ",
    "PromptForCreds-InvalidCredentialsForUrl": "Invalid credentials for {0}. Please try again: ",
    "PromptForCreds-GpgPassphrase": "输入您的GPG密码",
    "PromptForCreds-EnterSSHPassphrase": "请输入SSH密钥密码:",
    "PromptForCreds-EnterServiceSSHPassphrase": "请输入{0}的SSH密钥密码:",
    "PromptForCreds-EnterPasswordForUrlWithUsername": "Enter password for {0}:",
    "PromptForCreds-IncorrectSSHPassphrase": "SSH密钥密码错误。请重试:",
    "PromptForCreds-IncorrectServiceSSHPassphrase": "{0}的SSH密钥密码错误。请重试:",
    "PromptForCreds-PasswordPlaceholder": "密码",
    "PromptForCreds-LocksIcon": "大写锁定已启用",
    "PromptForCreds-PleaseLogIn": "请登录后继续:",
    "PromptForCreds-InvalidLogin": "登录无效。请重试:",
    "PromptForCreds-UsernamePlaceholder": "用户名",
    "PromptForCreds-EnterUsername": "请输入{0}的用户名",
    "PromptForCreds-EnterUsernameInvalid": "用户名{0}不正确。请重试:",
    "PromptForCreds-RememberMe": "保存验证信息",
    "PromptForCreds-TabDiedError": "The credentials prompt was forced to close.",
    "PromptForMerge-SaveAncestor": "您尚未选择A或B, 确定要保存上级文件吗?",
    "PromptForMerge-SaveMergeWithUnresolvedConflicts": "您有未解决的冲突。您想怎样继续?",
    "PromptForRebase-ConfirmDropXCommits": "Are you sure you want to drop {0} commits?",
    "PromptForRebase-ConfirmDropCommit": "您确定要放弃1次提交吗？",
    "PromptForPush-LocalIsBehindRemote": "'{0}'落后于'{1}', 请通过拉取来更新您的分支。",
    "PromptForPush-PushingReferenceRequiresForce": "推动此参考需要力量，这是破坏性的并且无法撤消。您要完成推送吗？",
    "PromptForPush-ConfirmForcePush": "强制推送是一种破坏性的行为且不能撤消。是否确定?",
    "PromptForPush-OAuthInvalid": "您的的OAuth令牌'{0}'被标记无效。是否刷新您的OAuth凭证或在无OAuth的情况下重试?",
    "PromptForTagAnnotation-Message": "消息:",
    "PromptForTagAnnotation-Placeholder": "批注消息",
    "PromptForTagAnnotation-Sign": "标志",
    "PromptForRemoteDeletionConfirmation": "这是一种破坏性的操作。确定要删除\"{0}\"吗?",
    "PromptForDeleteRepo-Delete": "删除存储库",
    "PromptForDeleteRepo-Message": "是否永久删除存储库{0}?",
    "PromptIgnore-Message": "是否忽略'{0}'?",
    "PromptIgnoreMultiple-Message": "忽略{0}个文件?",
    "PromptIgnore-Ignore": "忽略",
    "PromptIgnore-IgnoreAndUntrack": "忽略并停止跟踪",
    "PromptNewBranchAtRemote-BranchNamePlaceholder": "分支名称",
    "PromptNewBranchAtRemote-CreateBranch": "在此处创建分支",
    "PromptNewBranchAtRemote-Message": "本地分支'{0}'已存在。",
    "PromptNewBranchAtRemote-ResetLocal": "将本地重置到此处",
    "PromptForNewBranchName-InvalidBranchName": "给定的分支名称无效",
    "PromptForNewBranchName-Message": "重命名'{0}'为:",
    "PromptForNewBranchName-Placeholder": "新分支名称",
    "CommitMessage-RemoteBranchCreated": "分支: 创建{0}",
    "GitHubActionForm-AddWorkflow": "创建工作流程",
    "GitHubActionForm-AddGitHubWorkflowButtonLabel": "创建工作流程",
    "GitHubActionForm-SearchTemplates": "搜索模板",
    "GitHubActionForm-SelectTemplate": "选择一个模板",
    "GitHubActionForm-WorkflowFileName": "文档名称",
    "GitHubActionForm-WorkflowName": "工作流程名称",
    "IssueTrackerForm-AddCardButtonLabel": "创建卡",
    "IssueTrackerForm-AddIssueButtonLabel": "创建问题",
    "IssueTrackerForm-AddIssueButtonLabelDisabled": "您无权为此项目创建问题。",
    "IssueTrackerForm-AddIssueButtonLabelDisabledNoProject": "请选择一个项目来创建问题。",
    "IssueTrackerForm-AddCardButtonLabelDisabled": "您无权为此板创建卡。",
    "IssueTrackerForm-AddCardButtonLabelDisabledNoBoard": "请选择一个板来创建卡。",
    "IssueTrackerForm-AddIssueButtonLabelDisabledNoRepo": "Please select a repo to create issues.",
    "IssueTrackerForm-AddIssueButtonLabelDisabledForRepo": "You do not have permission to create issues for this repo.",
    "IssueTracker-RequiredFieldsNotice": "必填项目",
    "IssueTracker-MissingFieldToolTip": "缺少必填字段",
    "TrelloForm-DelayWarning": "由于Trello API的延迟，显示新卡最多可能需要一分钟的时间。",
    "RemoteForm-AddRemote": "添加远程",
    "RemoteForm-AddRemoteButtonLabel": "添加远程",
    "RemoteForm-AddUserRemote": "添加此远程仓库",
    "RemoteForm-Bitbucket": "Bitbucket.org",
    "RemoteForm-BitbucketServer": "Bitbucket服务器",
    "RemoteForm-ConnectToService": "连接到{0}",
    "RemoteForm-CreateRemoteAndPushLocalRefsButtonLabel": "创建远程并推送本地引用",
    "RemoteForm-EditManually": "编辑远程",
    "RemoteForm-EditRemote": "编辑远程",
    "RemoteForm-Fork": "叉子",
    "RemoteForm-ForkAndAddRemote": "叉和添加远程仓库",
    "RemoteForm-ForkFound": "You have a fork of this repository on {0}:",
    "RemoteForm-ForkNotFound": "You have not yet forked {0} on {1}.",
    "RemoteForm-NoMatch": "没有匹配",
    "RemoteForm-PrivateRepo": "私人仓库",
    "RemoteForm-PublicRepo": "公共仓库",
    "RemoteForm-PushURL": "推送URL",
    "RemoteForm-PullURL": "拉取URL",
    "RemoteForm-RefreshButtonTooltip": "刷新",
    "RemoteForm-RemoteAccessTypeLabel": "访问",
    "RemoteForm-RemoteAccountLabel": "帐户",
    "RemoteForm-RemoteDescriptionLabel": "描述",
    "RemoteForm-RemoteName": "名称",
    "RemoteForm-NewRemoteName": "远端名称",
    "RemoteForm-NewRepoName": "储存库名称",
    "RemoteForm-RemoteProjectLabel": "项目",
    "RemoteForm-SearchRemotes": "搜索远程",
    "RemoteForm-SearchService": "搜索{0}",
    "RemoteForm-SelectPlaceholder": "选择...",
    "RemoteForm-TooManyServiceRemotesWarningNForks": "我们正在检索与此存储库关联的{0}个分叉。从{1}获取URL可能会更快",
    "RemoteForm-TooManyServiceRemotesWarningManyForks": "我们正在检索与此存储库关联的大量分叉。从{1}获取URL可能会更快",
    "RemoteForm-Url": "URL",
    "MergeConflictsPanel-1ConflictMustBeResolved": "请在继续之前解决1个冲突",
    "MergeConflictsPanel-NConflictsMustBeResolved": "请在继续之前解决{0}个冲突",
    "SetUpstreamPrompt-InvalidBranchName": "给定的分支名称无效",
    "SetUpstreamPrompt-MustSelectRemote": "您必须选择一个远程(例如\"origin/<branch>\")",
    "SetUpstreamPrompt-SelectRemoteBranchMessage": "请设置\"{0}\"的远程分支",
    "ConfirmationMessage-ClonePullRequestHead": "是否要添加\"{0}\"为远程并检出\"{1}\"?",
    "ConfirmationMessage-ClonePullRequestHeadForFileChanges": "Do you want to add \"{0}\" as a remote to view file changes?",
    "ConfirmationMessage-DeleteConfigLock": "无法锁定.git/config, 因为锁已经存在。可能正在使用另一个程序正在改动存储库。是否要删除此存储库的配置锁以便对其进行修改?",
    "ConfirmationMessage-DeleteFile": "这将删除“{0}”。你确定要继续吗？",
    "ConfirmationMessage-DeleteFiles": "删除已选中的文件。继续处理?",
    "ConfirmationMessage-DeleteGitFlowRef": "这个分支是Git工作流所必需的。确定要删除\"{0}\"吗?",
    "ConfirmationMessage-DeleteRef": "这是一种破坏性的操作。确定要删除“{0}”吗?",
    "ConfirmationMessage-Delete1LocalBranchInFolder": "这是一个破坏性操作, 确实要在\"{0}\"中删除1个本地分支?",
    "ConfirmationMessage-DeleteNLocalBranchesInFolder": "这是一个破坏性操作, 确实要在\"{1}\"中删除{0}个本地分支?",
    "ConfirmationMessage-DeleteNLocalBranches": "This is a destructive operation, are you sure you want to delete {0} local branches?",
    "ConfirmationMessage-DeleteNStashes": "This is a destructive operation, are you sure you want to delete {0} stashes?",
    "ConfirmationMessage-DeleteAllRefs": "这是一种破坏性的操作。确定要从此节点或远程删除\"{0}\"吗?",
    "ConfirmationMessage-DeleteStash": "这是一种破坏性的操作。确定要删除贮藏区\"{0}\"吗?",
    "ConfirmationMessage-DeleteTagFromRemote": "这是一种破坏性的操作。确定要从\"{1}\"中删除\"{0}\"吗?",
    "ConfirmationMessage-DeleteTagFromAllRemotes": "从远程存储库中删除标签\"{0}\"?",
    "ConfirmationMessage-WouldYouLikeToDeleteTagFromAllRemotes": "Would you like to delete tags named \"{0}\" from your remote repos?",
    "ConfirmationMessage-UnstageAndRemoveFile": "这将取消暂存并删除“{0}”。你确定要继续吗？",
    "ConfirmationMessage-DiscardUnstagedChangesToFile": "这将丢弃对“{0}”的未暂存改动。你确定要继续吗？",
    "ConfirmationMessage-DiscardUnstagedChangesToFiles": "这将丢弃已选中文件中未暂存的改动。继续处理?",
    "ConfirmationMessage-ImmediatelyCommitCherryPick": "是否立即提交摘取的改动?",
    "ConfirmationMessage-ImmediatelyCommitRevert": "是否立即提交还原的改动?",
    "ConfirmationMessage-InitEmptyRepo": "需要初始提交才能打开存储库“{0}”。你需要GitKraken为你生成一个提交吗?",
    "ConfirmationMessage-MergeConflictStashAndCheckout": "检测到合并冲突。要继续合并, 必须贮藏所有改动并检出分支{0}。是否立即执行?",
    "ConfirmationMessage-CreateCommitForMerge": "是否立即提交合并的改动?",
    "ConfirmationMessage-RebaseRequiresStashAndCheckout": "要开始变基, 您需要贮藏改动并检出分支\"{0}\"。是否立即执行?",
    "ConfirmationMessage-RebaseRequiresCheckout": "要启动变基，必须签出分支\" {0} \"。您现在要这样做吗？",
    "ConfirmationMessage-ResetAll": "这将丢弃所有暂存和未缓存的改动, 包括新的未跟踪文件。确定要放弃所有更改?",
    "ConfirmationMessage-ResetFile": "这将丢弃对“{0}”的所有已暂存和未暂存改动。你确定要继续吗？",
    "ConfirmationMessage-ResetFiles": "这将丢弃已选中文件中所有已暂存和未暂存的更改。是否确定要丢弃所有选定的更改?",
    "ConfirmationMessage-PersistConflictToDisk": "你确定要保存它吗?",
    "DeepLink-AddRemote": "Add Remote",
    "DeepLink-BranchLocationError": "Failed to find branch \"{0}\".",
    "DeepLink-Cancelled": "Cancelled opening link",
    "DeepLink-ChooseRepo": "Choose another repo on disk",
    "DeepLink-CloneRepo": "Clone repo from URL",
    "DeepLink-CommitShouldBeInStateButIsNot": "Could not find commit in the graph",
    "DeepLink-ErrorTitle": "Could not open link",
    "DeepLink-Fetch": "Fetch",
    "DeepLink-FetchError": "Failed to fetch \"{0}\"",
    "DeepLink-FetchRecommendation": "Fetching is recommended to find the ref, would you like to fetch?",
    "DeepLink-FetchRecommendationX": "Fetching is recommended to find the ref, would you like to fetch {0}?",
    "DeepLink-InvalidURI": "URI was in an invalid format",
    "DeepLink-MultipleRepos": "GK tried to open the repo but found {0} duplicates. Choose which one you want to open.",
    "DeepLink-OpenAsDefault": "Open as default",
    "DeepLink-OpenRepo": "Open",
    "DeepLink-OpenExistingRepo": "Open existing repo",
    "DeepLink-RemoteAddError": "Failed to add remote \"{0}\" to repository",
    "DeepLink-RemoteNotFound": "Couldn't find the remote from the URL, would you like to add it?",
    "DeepLink-RemoteXNotFound": "Couldn't find the remote {0}, would you like to add it?",
    "DeepLink-RepoNotFound": "Couldn't find {0}. You can browse for or clone the repo.",
    "DeepLink-RepoOpenedIncorrect": "Repo opened does not match the linked repository.",
    "DeepLink-ResolvedDeepLink": "External link to {0} resolved.",
    "DeepLink-ResolvingDeepLink": "Resolving external link to {0}",
    "DeepLink-SHALocationError": "Failed to find commit SHA",
    "DeepLink-TagLocationError": "Failed to find tag \"{0}\".",
    "DeepLink-Branch": "branch",
    "DeepLink-Commit": "commit",
    "DeepLink-Remote": "remote",
    "DeepLink-Tag": "tag",
    "UndoRedo-InformationMissing": "撤消信息丢失-这可能是由于垃圾回收造成的。",
    "UndoRedo-RedoFailed": "重做失败",
    "UndoRedo-RedoSuccessful": "重做成功",
    "UndoRedo-UndoFailed": "撤消失败",
    "UndoRedo-UndoSuccessful": "撤消成功",
    "View-ActivityLog": "活动记录",
    "View-ActivityLog-HookTitle": "Hook: {0}",
    "View-AutoUpdate": "选择安装程序",
    "View-AutoUpdate-CheckingForUpdates": "Checking for updates",
    "View-AutoUpdate-Downloading": "正在下载更新",
    "View-AutoUpdate-Downloaded": "下载已完成",
    "View-AutoUpdate-SomethingWentWrong": "出了点问题",
    "View-AutoUpdate-UpdateFailedToDownload": "Update failed to download",
    "View-KeyBindings": "键盘快捷键",
    "View-RepositoryManagement": "存储库管理",
    "View-ToggleLeftPanel": "切换左侧面板",
    "View-ToggleDetailPanel": "Toggle Commit Detail Panel",
    "View-ToggleToolbar": "Toggle Toolbar",
    "View-ZoomDown": "缩少",
    "View-ZoomReset": "复位",
    "View-ZoomUp": "放大",
    "NewTabView-GitKraken": "GitKraken Git GUI",
    "NewTabView-OpenRepo": "打开一个仓库",
    "NewTabView-StartLocalRepo": "开始本地仓库",
    "NewTabView-CloneRepo": "克隆仓库",
    "NewTabView-StartHostedRepo": "启动托管存储库：",
    "NewTabView-OnHostingService": "on {0}",
    "NewTabView-Customize": "定制",
    "NewTabView-AdditionalResources": "其他资源",
    "NewTabView-WatchGitKrakenIntroVideo": "观看GitKraken Git GUI入门视频",
    "NewTabView-WatchGloBoardsIntroVideo": "观看GitKraken板介绍视频",
    "NewTabView-JoinSlackCommunity": "加入GitKraken Slack社区",
    "NewTabView-NewsletterSignup": "订阅GitKraken新闻通讯",
    "NewTabView-ReadGitKrakenDocumentation": "阅读GitKraken Git GUI文档",
    "NewTabView-ReadGloBoardsDocumentation": "阅读GitKraken主板文档",
    "NewTabView-ReadTimelinesDocumentation": "Read the GitKraken Timelines Documentation",
    "NewTabView-ProvideFeedback": "提供反馈意见",
    "NewTabView-GetGloBoardsAppApple": "适用于iOS的GitKraken板",
    "NewTabView-GetGloBoardsAppAndroid": "适用于Android的GitKraken板",
    "NewTabView-GetSupport": "得到支持",
    "NewTabView-FavoriteRepos": "最喜欢的仓库",
    "NewTabView-NewIcon": "New",
    "NewTabView-RecentRepos": "最近的仓库",
    "NewTabView-RecentProjects": "Recent Projects",
    "NewTabView-ViewNOthers": "View {0} others",
    "NewTabView-Projects": "GitKraken Projects",
    "NewTabView-OpenProjects": "Open Projects",
    "NewTabView-NewProject": "New Project",
    "NewTabView-GloBoards": "GitKraken板",
    "NewTabView-GloBoardsAndTimelines": "GitKraken Boards & Timelines",
    "NewTabView-OpenGlo": "打开GitKraken板",
    "NewTabView-OpenTimelines": "打开GitKraken时间轴",
    "NewTabView-NewGloBoard": "新的GitKraken板",
    "NewTabView-FavoriteBoards": "最喜欢的板",
    "NewTabView-RecentBoards": "最近的董事会",
    "NewTabView-Cli": "GitKraken CLI",
    "NewTabView-OpenCli": "New Terminal Tab",
    "NewTabView-Preview": "Preview",
    "NewTabView-FeaturePreview": "Feature Preview",
    "NewTabView-CliCurrentlyPreview": "The GitKraken CLI is currently in preview. Open a Terminal tab to see what we're working on and ",
    "NewTabView-CliSubmitFeedback": "submit feedback ",
    "NewTabView-CliPreviewHelpTeam": "to help the team make refinements before release.",
    "NewTabView-NonPreviewCliHelpTeam": "to help the team make refinements.",
    "TabError-OpenCliError": "Cannot open CLI",
    "TabError-OpenProjectsError": "Cannot open Projects",
    "TabError-OpenRepoError": "Cannot open repo",
    "TabError-CloneRepoInProgress": "A repo is being cloned",
    "ProfileError-ProfileSwitchError": "Cannot switch profiles",
    "ProfileError-CloneRepoInProgress": "A repo is being cloned",
    "KeyBindingFilter-Placeholder": "过滤快捷方式({0} + F)",
    "KeyBindingHeader-RepoActions": "存储库操作",
    "KeyBindingHeader-Navigation": "导航",
    "KeyBindingHeader-FuzzyFinder": "模糊查找器",
    "KeyBindingHeader-UI": "用户界面",
    "KeyBinding-or": "或",
    "KeyBinding-CloseFileOrTab": "关闭文件/标签",
    "KeyBinding-Commit": "提交(如果输入消息)",
    "KeyBinding-CommitWithStage": "暂存所有并提交(如果输入消息)",
    "KeyBinding-FocusCommitMessage": "焦点提交消息",
    "KeyBinding-CreateBranch": "创建分支",
    "KeyBinding-SearchCommits": "搜索提交",
    "KeyBinding-Fetch": "获取所有",
    "KeyBinding-FilterBranches": "筛选左侧面板",
    "KeyBinding-FullScreen": "切换全屏",
    "KeyBinding-OpenFileInExternalDiffOrMergeTool": "使用外部差异/合并工具打开已选中的文件",
    "KeyBinding-FuzzyFinderHistory": "搜索文件以查看其历史记录/追责",
    "Keybinding-FuzzyFinderOpenRepo": "在模糊查找器中打开存储库",
    "KeyBinding-SelectFirst": "选择第一个元素",
    "KeyBinding-SelectLast": "选择最后一个元素",
    "KeyBinding-SelectNext": "选择下一个元素",
    "KeyBinding-SelectNextTopological": "选择分支中的下一个项目",
    "KeyBinding-SelectPrev": "选择上一个元素",
    "KeyBinding-SelectPrevTopological": "选择分支中的上一个项目",
    "KeyBinding-Stage": "暂存当前文件",
    "KeyBinding-StageAll": "暂存所有文件",
    "KeyBinding-ToggleFuzzyFinder": "切换模糊查找器",
    "KeyBinding-OpenNewTab": "开启新分页",
    "KeyBinding-CloseCurrentTab": "关闭当前标签",
    "KeyBinding-JumpToNextTab": "跳到下一个打开的标签",
    "KeyBinding-JumpToPreviousTab": "跳至上一个打开的标签",
    "KeyBinding-JumpToSpecificTab": "跳至特定标签",
    "KeyBinding-Unstage": "取消暂存当前文件",
    "KeyBinding-UnstageAll": "取消暂存所有文件",
    "KeyBinding-OpenTabsList": "Open tabs list",
    "Notification-AlreadyUpToDate": "已经是最新的",
    "Notification-AppUpdateAvailable": "Version {0} of GitKraken is now available.",
    "Notification-AnnotatedSuccessfully": "批注成功",
    "Notification-BigSurSlowdown-Desktop": "A change in macOS Big Sur has caused slowdowns in many macOS applications. See https://www.gitkraken.com/blog/workaround-gitkraken-big-sur-issues for a workaround and additional information.",
    "Notification-BigSurSlowdown-Markdown": "##### macOS Big Sur Performance Fix\nA change in macOS Big Sur has caused slowdowns in many macOS applications. See https://www.gitkraken.com/blog/workaround-gitkraken-big-sur-issues for a workaround and additional information.\n\n###### TL;DR\nRun this in the terminal to make GitKraken a partially-signed app as a temporary workaround:\n```\ncodesign --remove-signature /Applications/GitKraken.app/Contents/Frameworks/GitKraken\\ Helper\\ \\(Renderer\\).app\n```",
    "Notification-BranchToBranch": "{0}进{1}",
    "Notification-DesktopNotificationsEnabled": "Desktop notifications enabled",
    "Notification-RefToRemote": "{0}到{1}",
    "Notification-CloningToPath": "克隆到{0}",
    "Notification-CheckoutSuccessful": "检出成功",
    "Notification-CherrypickSuccessful": "摘取成功",
    "Notification-CreatedSuccessfully": "创建成功",
    "Notification-DeletedBranch": "删除{0}",
    "Notification-DeletedNBranches": "Deleted {0} branches",
    "Notification-FeedbackSent": "反馈已发送",
    "Notification-GpgCopyPublicKeySuccessfully": "GPG公钥成功复制",
    "Notification-SupportSent": "支持已发送",
    "Notification-GpgKeyGenSuccess": "GPG密钥创建成功",
    "Notification-Merged": "已合并",
    "Notification-MergedSuccessfully": "合并成功",
    "Notification-PulledSuccessfully": "拉取成功",
    "Notification-PushedSuccessfully": "推送成功",
    "Notification-RebaseSuccessful": "变基成功",
    "Notification-RenameSuccessful": "重命名成功",
    "Notification-RepoDeleteSuccessful": "存储库删除成功",
    "Notification-RevertSuccessful": "还原成功",
    "Notification-SubmoduleCreatedSuccessful": "子模块已创建",
    "Notification-SubmoduleDeletedSuccessful": "子模块已删除",
    "Notification-SSHKeyBeingUsed": "密钥已添加",
    "Notification-UpdateAvailable": "Update available: {0}",
    "Notification-ManageSSHKeysButton": "管理{0}的SSH密钥",
    "NotificationMessage-AlreadyUpToDate": "不需要合并。分支{1}未移动。",
    "NotificationMessage-RefToRef": "{0}到{1}",
    "NotificationMessage-RepoDeleteSuccessful": "存储库{0}已删除成功!",
    "NotificationMessage-RevertWasNoop": "然而, 当前分支已经包含还原了的提交中的所有改动。",
    "NotificationMessage-CherrypickWasNoop": "然而, 当前分支已经包含摘取了的提交中的所有改动。",
    "NotificationMessage-SSHKeyBeingUsed": "GitKraken将使用此密钥连接到{0}。公钥已复制到您的剪贴板中, 请确保它已在您的{0}账户中注册。",
    "NotificationDesktop-XNewMessages": "You have {0} new notifications",
    "NotificationPreferences": "Notifications",
    "NotificationPreferences-Desktop": "Enable Desktop Notifications",
    "NotificationPreferences-Desktop-Help": "Allow GitKraken to send desktop notifications.",
    "NotificationPreferences-Disconnected": "This setting cannot be modified while offline.",
    "NotificationPreferences-Error": "Notification settings received were not in a valid format",
    "NotificationPreferences-Marketing": "Receive Marketing Notifications",
    "NotificationPreferences-Marketing-Help": "Receive marketing related notifications.",
    "NotificationPreferences-Marketing-Tooltip": "These notifications cannot be turned off on free accounts.",
    "NotificationPreferences-Help": "Receive Help Notifications",
    "NotificationPreferences-Help-Help": "Receive helpful notifications about GitKraken features.",
    "NotificationMenu-CantSync": "Unable to sync notifications. Please check your internet connection or reload GitKraken.",
    "NotificationMenu-Notifications": "Notifications",
    "NotificationMenu-FiltersAll": "All",
    "NotificationMenu-FiltersRead": "Read",
    "NotificationMenu-FiltersUnread": "Unread",
    "NotificationMenu-SubMenu-MarkAsRead": "Mark all as read",
    "NotificationMenu-SubMenu-MarkAsUnread": "Mark all as unread",
    "NotificationMenu-SubMenu-Settings": "Notification Settings",
    "NotificationMenu-All-Empty": "You have no notifications",
    "NotificationMenu-Read-Empty": "You have no read notifications",
    "NotificationMenu-Unread-Empty": "You have no unread notifications",
    "NotificationMenu-WaitingForCloud": "It is taking longer than usual to receive notifications. Please try again later.",
    "NotificationUI-FeatureRequiresUpdate": "This feature requires an updated client.",
    "NotificationUI-DateAtTime": "{0} @ {1}",
    "NotificationUI-MarkAsRead": "Mark as read",
    "NotificationUI-MarkAsUnread": "Mark as unread",
    "NotificationUI-NotificationRequiresUpdate": "This notification requires an updated client.",
    "NotificationUI-RemoveNotification": "Remove notification",
    "NotificationUI-TimeToday": "Today",
    "NotificationUI-TimeYesterday": "Yesterday",
    "NotificationUI-UpdateNotAvailable": "This update is currently rolling out and will be available soon.",
    "NotificationUI-UpdateNow": "Update now",
    "OrganizationMember-Admin": "Admin",
    "OrganizationMember-AlreadyMember": "{0} is already a member of this organization",
    "OrganizationMember-Billing": "Billing Contact",
    "OrganizationMember-CannotAddSameEmailTwice": "Cannot add the same email twice",
    "OrganizationMember-DiscardedSingular": "email was invalid or they have already been added",
    "OrganizationMember-DiscardedPlural": "{0} emails were invalid or they have already been added",
    "OrganizationMember-Emails": "Emails",
    "OrganizationMember-EmailsRequiredField": "User Emails is a required field",
    "OrganizationMember-EnterEmailAddresses": "enter email addresses, separated by commas",
    "OrganizationMember-Filter": "Search members by name, username, or email",
    "OrganizationMember-Invite": "Invite",
    "OrganizationMember-InviteMember": "Invite member",
    "OrganizationMember-InviteNMembers": "Invite {0} members",
    "OrganizationMember-LicenseNeeded": "You must purchase 1 additional license",
    "OrganizationMember-LicensesNeeded": "You must purchase {0} additional licenses",
    "OrganizationMember-MaxMembers": "You can only add up to {0} users at a time",
    "OrganizationMember-MaxMembersTrialSingular": "A trial organization allows a maximum of 50 members, you can only add up to {0} user",
    "OrganizationMember-MaxMembersTrialPlural": "A trial organization allows a maximum of 50 members, you can only add up to {0} users",
    "OrganizationMember-NotValidEmail": "{0} is not a valid email",
    "OrganizationMember-Role": "Role",
    "OrganizationMember-SuggestedMembers": "Suggested Members",
    "OrganizationMember-SuggestedMembersSubTitle": "Contributors to the {0} repository",
    "OrganizationMember-User": "User",
    "Organization-Members": "Members",
    "Organization-TeamMembers": "Team Members",
    "Organization-Teams": "Teams",
    "Organization-Settings": "Settings",
    "Organization-SettingsSubtitle": "These settings are only applied for this organization",
    "Organization-SwitchOrganization": "Switch organization",
    "Organization-RenameTeam": "Rename Team",
    "Organization-DeleteTeam": "Delete Team",
    "Organization-AddTeamTooltip": "Create new team.",
    "Organization-CreateTeamModalButton": "Create team",
    "Organization-CreateTeamModalTitle": "Team Name",
    "Organization-CreateTeamModalPlaceholder": "Enter a team name",
    "Organization-UpgradeToAddTeamsTooltip": "Pro and trial accounts are limited to {0} team. Upgrade your subscription to add more teams",
    "Organization-TeamNameError": "Team Name may only contain alphanumeric characters, single hyphens or single spaces, and cannot begin or end with a hyphen",
    "Organization-PermissionErrorTitle": "An Error Occurred",
    "Organization-PermissionErrorMessage": "You may have lost permission to perform this action.",
    "Organization-ServerErrorTitle": "An Unknown Error Occurred",
    "Organization-ServerErrorMessage": "Please try again later.",
    "Team-AreYouSureDelete": "Are you sure you want to delete team \"{0}\"",
    "Team-DeleteTeam": "Delete Team",
    "TeamSettings-Label": "Team",
    "TeamSettings-DefaultTeamLabel": "Use this as the default for all repositories",
    "TeamSettings-SelectTeam": "Select a team for this repo",
    "TeamMember-Add": "Add a member",
    "TeamMember-AddMember": "Add member",
    "TeamMember-AddMembers": "Add members",
    "TeamMember-Members": "Members",
    "TeamMember-NoMembersAddedToTeam": "No members have been added to this team",
    "TeamMember-NoMembersFound": "No members found",
    "TeamMember-SelectToAdd": "Select a member to add",
    "TeamMember-OptedOut": "{0} has opted-out of sharing their WIP",
    "Trial-StartFreeGitKrakenTrial": "Start a Free GitKraken Trial",
    "Trial-TrialStartedModalContent1": "For the next {0} days, you will have access to all paid GitKraken features! After your trial expires, it will default to the free plan.",
    "Trial-TrialStartedModalContent2": "Add teammates to extend your trial!",
    "Trial-TrialStartedModalContent3": "Extend your trial by {0} days when you create an organization and add your teammates. Everyone will have access to all of GitKraken's paid features until your trial ends.",
    "Trial-Feature1": "Work with privately-hosted and self-hosted remote repositories",
    "Trial-Feature2": "A powerful merge conflict editor",
    "Trial-Feature3": "Multiple profiles for work & personal use",
    "Trial-Feature4": "Integrations for self-hosted repos on GitHub Enterprise, GitLab Self-Managed, Bitbucket Server, and Azure DevOps",
    "Trial-Feature5": "Create and edit issues on Jira, GitHub, GitLab, GitKraken Boards and Trello",
    "Trial-SeeAllFeatures": "See all features on gitkraken.com",
    "Trial-TrialStartedCreateOrganization": "Add teammates to extend my trial",
    "Trial-TrialStartedContinuePersonal": "Continue my {0} day trial",
    "Trial-TrialStartedModalTitle": "GitKraken专业版免费试用已经开始",
    "Trial-AnyKindOfTrialEndedModalTitle": "您的GitKraken试用已结束",
    "Trial-ExtendNoThanks": "No thanks",
    "Trial-AnyKindOfTrialTrialEndedModalContinueUsingFree": "No thanks, I'll continue without {0}.",
    "Trial-OrgTrialEndedDescriptionOwner": "Purchase a subscription to allow members of your organization to continue using these paid GitKraken features.",
    "Trial-OrgTrialEndedDescriptionUser": "Your organization trial has expired. Contact the organization owner to purchase a subscription and continue using these paid GitKraken features.",
    "Trial-ProFeatures": "专业功能",
    "Trial-PremiumFeatures": "高级功能",
    "Trial-StartXDayTrial": "Start {0}-Day Pro Trial",
    "Error": "错误",
    "Error-AddExternalSSHKeyToServiceFailed": "SSH密钥添加失败",
    "Error-AmendFailed": "修改失败",
    "Error-AnnotateTagFailed": "标签批注失败",
    "Error-ApplyingStashError": "应用贮藏区错误",
    "Error-CloneAnUnknownRepo": "Can't clone an unknown repo",
    "Error-CommitFailed": "提交失败",
    "Error-CreatingStashError": "创建贮藏区错误",
    "Error-BranchNameEmpty": "必须填写分支名称",
    "Error-BranchNameMayNotContainSpaces": "分支名称中不允许有空格",
    "Error-CheckoutFailed": "检出失败",
    "Error-CherrypickFailed": "摘取失败",
    "Error-ConflictDetected": "检测到冲突",
    "Error-AddSSHKeyToServiceFailed": "SSH密钥连接失败",
    "Error-CouldNotParseResponse": "Could not parse response",
    "Error-CouldNotWriteToRepo": "该文件无法写入存储库",
    "Error-CreateRepoFailed": "存储库创建失败",
    "Error-CreateRefFailed": "引用创建失败",
    "Error-CreateRemoteRepoAndCloneFailed": "无法创建存储库",
    "Error-CreateRemoteRepoFailed": "存储库创建失败",
    "Error-DefaultBranchNotFound": "Default branch not found",
    "Error-DeleteFileFailed": "在该路径删除文件失败: {0}。",
    "Error-DeleteFailedWithName": "删除失败: {0}",
    "Error-DeleteFailedWithNamesTagForRemote": "删除失败: {1}的{0}",
    "Error-Diff3DoesNotExist": "找不到要执行操作的差异",
    "Error-Diff3UpdateFailed": "更新差异失败",
    "Error-DiscardSelectionFailed": "丢弃所选项失败",
    "Error-DisconnectingServiceFailed": "服务断开失败",
    "Error-RemoveSSHKeyFromServiceFailed": "SSH密钥断开失败",
    "Error-FetchFailedWithName": "获取'{0}'失败",
    "Error-FetchAllPullRequestsFailed": "获取拉取请求失败",
    "Error-GenerateDiff3Failed": "生成冲突的差异失败",
    "Error-GenerateSshKeyAndAddToServiceFailed": "SSH key creation failed",
    "Error-Generic": "发生错误",
    "Error-GitConfigUpdate": "无法更新git配置",
    "Error-GitFlowFinishFeatureFailed": "完结功能“{0}”失败",
    "Error-GitFlowFinishHotfixFailed": "完结热修复“{0}”失败",
    "Error-GitFlowFinishReleaseFailed": "完成发布“{0}”失败",
    "Error-GitFlowStartFeatureFailed": "启始功能“{0}”失败",
    "Error-GitFlowStartHotfixFailed": "启始热修复“{0}”失败",
    "Error-GitFlowStartReleaseFailed": "启始发布“{0}”失败",
    "Error-GitHubNoMorePrivateRepos": "此GitHub帐户下无可用的私有存储库",
    "Error-GitHubUsernamePasswordDeprecation": "GitKraken detected a GitHub password in one of your remotes or stored credentials. GitHub will remove username and password authentication for Git operations starting August 13th, 2021.",
    "Error-GitHubUsernamePasswordDeprecationLink": "View more information",
    "Error-GitHubUsernamePasswordDeprecationTitle": "Deprecation Warning",
    "Error-GitLabMergeRequestsDisabled": "此存储库已禁用合并请求",
    "Error-GpgAnnotateFailedNotEnabled": "无法签名带注释的标签，因为未配置GPG签名密钥",
    "Error-GpgBadPassphrase": "密码错误",
    "Error-GpgCopyPublicKeyFailed": "复制公共GPG密钥失败",
    "Error-GpgKeyGenFailed": "GPG密钥生成失败",
    "Error-GpgKeyGenMissingNameOrEmail": "无法生成GPG密钥：必须提供个人资料名称和电子邮件",
    "Error-GpgNoKeyConfigured": "未配置GPG密钥",
    "Error-GpgNoPassphrase": "未提供GPG密码",
    "Error-GpgNoSmartCard": "找不到GPG智能卡",
    "Error-GpgNotFound": "找不到GPG二进制文件",
    "Error-GpgSigningAborted": "没有给出密码",
    "Error-GpgSigningFailed": "签名失败",
    "Error-GpgUnparseableSignature": "无法解析PGP签名",
    "Error-GpgUnusableSecretKey": "The active GPG key was unusable and may have expired",
    "Error-InotifyLimitReached": "通知上限错误",
    "Error-InvalidPAT": "Your Personal Access Token for {0} was rejected. The token may have been revoked, or it may not have enough scopes.",
    "Error-InvalidSSLCert": "Invalid SSL Certificate",
    "Error-KeyAlreadyExistsOnAccount": "此账户中已存在密钥",
    "Error-LoadingIntegrationFailed": "{0} integration failed to initialize",
    "Error-LoadingActivityLogFailed": "An error occurred while trying to load this log.",
    "Error-LoginRedirect": "尝试检索用户数据时遇到重定向 - 请将${0}添加到网络白名单中",
    "Error-MergeAbortFailed": "中止合并失败",
    "Error-MergeFailed": "合并失败",
    "Error-NeedUpgradedPermissions": "需要{0}权限",
    "Error-OpenDiffToolFailed": "打开差异工具失败",
    "Error-OpenMergeToolFailed": "打开合并工具失败",
    "Error-OpenRepoInExternalEditorNoRepo": "您必须打开一个存储库才能打开它的外部编辑器",
    "Error-OpenRepoInTerminalFailed": "在终端中打开存储库失败",
    "Error-PersistMergeToDisk": "将合并保存到磁盘失败",
    "Error-PullFailed": "拉取失败",
    "Error-PushFailed": "推送失败",
    "Error-PushFailedNoRemote": "没有要推送的远程仓库，您想添加一个吗？",
    "Error-PushFailedWithName": "推送失败: {0}",
    "Error-PushUpdateReferenceFailed": "推送到{0}失败: {1}",
    "Error-Marking-Read-State": "We were unable to update the read state of this notification. Please check your internet connection and try again",
    "Error-Marking-Read-State-Multiple": "We were unable to update the read state of one or more notifications. Please check your internet connection and try again",
    "Error-MissingAzureDevopsContributePermission": "缺少此远程的“贡献”权限",
    "Error-MissingAzureDevopsCreateBranchPermission": "缺少此远程的“创建分支”权限",
    "Error-MissingAzureDevopsForcePushPermission": "缺少此远程的“强制推送”权限",
    "Error-AzureDevops404GetRepository": "无法找到存储库{0}/{1}",
    "Error-AzureDevops404GetProjects": "无法找到项目",
    "Error-BitbucketServerUnauthorized": "Bitbucke服务器：{0}未接受个人访问令牌",
    "Error-BitbucketServerForbidden": "Bitbucket服务器：请求被拒绝，因为您或您的令牌权限不足",
    "Error-BitbucketServerUnknownErrorForResource": "Bitbucket服务器：收到{0}的{1}错误。来自服务器的响应: {2}",
    "Error-BitbucketServerGeneric": "Bitbucket服务器：{0}",
    "Error-RemoteRefusedToDelete": "推送到{0}失败: 无法删除远程分支",
    "Error-PullRequestFailed": "拉取请求创建失败",
    "Error-RebaseFailed": "变基失败",
    "Error-RebaseAutoUnstashFailed": "弹出自动贮藏区失败",
    "Error-RebaseFailedFromFileLock": "无法修改文件。可能是由于文件权限限制或正在被其他进程占用。解锁文件, 中止变基, 然后重试。",
    "Error-RebaseAbortFailed": "中止变基失败",
    "Error-RebaseAbortFailedFromFileLock": "变基无法中止。可能是由于文件权限限制或正在被其他进程占用。",
    "Error-RenameFailed": "重命名失败",
    "Error-RenameNeedsLocalBranch": "必须检出一个本地分支!",
    "Error-RemoveFailed": "文件删除失败",
    "Error-ResetFailed": "重置失败",
    "Error-RepoAlreadyExists": "存储库已存在",
    "Error-RepoAlreadyExistsOnAccount": "存储库已存在于该账户",
    "Error-RepoDeleteFailed": "存储库删除失败",
    "Error-RevertFailed": "还原失败",
    "Error-SendFeedbackFailure": "无法发送反馈！请稍后再试。",
    "Error-StageFilemodeFailed": "暂存文件模式失败",
    "Error-StagePathsFailed": "暂存路径失败",
    "Error-StageSelectionFailed": "暂存所选路径失败",
    "Error-SyncingPreferences": "We were unable to sync this preference. Please check your internet connection and try again",
    "Error-UnableToMergeInApp": "文件需要外部合并工具来解决",
    "Error-UnstageFilemodeFailed": "取消暂存文件模式更改失败",
    "Error-UnstagePathsFailed": "取消暂存路径失败",
    "Error-UnstageSelectionFailed": "取消暂存所选项失败",
    "Error-UpdateContentFailed": "更新文件内容失败",
    "Error-UpdateDiffFailed": "更新差异失败",
    "Error-UpdateInteractiveRebaseStepsFailed": "更新基准步骤失败",
    "Error-UnkownFetchErrorForResource": "尝试获取{0}时出现未知错误",
    "ErrorFallback-ConfirmationMessage": "您的错误报告已提交。谢谢！",
    "ErrorFallback-Message": "GitKraken遇到了一个致命错误。如果您启用了错误报告，则会报告此问题。如果没有，请考虑发送报告。",
    "ErrorFallback-ReportError": "报告错误",
    "ErrorFallback-RestartLabel": "重新启动",
    "ErrorFallback-QuitLabel": "退出",
    "ErrorMessage-BranchNameConflictsWithDirectory": "无法创建引用\"{0}\"，因为它的名称与现有的引用冲突",
    "ErrorMessage-CannotApplyStashWhenFilesAreStaged": "有任何暂存时都不能应用贮藏。请先贮藏、提交或取消暂存。",
    "ErrorMessage-CannotDeleteCheckedOutBranch": "无法删除当前检出了的分支。请先切换分支。",
    "ErrorMessage-FailedToLaunchExternalEditor": "Cannot open repo in {0}",
    "ErrorMessage-1ConflictPreventsCheckout": "1个冲突阻止了检出。\n请先提交, 贮藏或丢弃改动。",
    "ErrorMessage-NConflictsPreventCheckout": "{0}个冲突阻止了检出。\n请先提交, 贮藏或丢弃改动。",
    "ErrorMessage-ConflictsPreventStashApplication": "{0}个冲突阻止了应用贮藏区。",
    "ErrorMessage-DiscardSelectionFailedWithReason": "无法丢弃{0}的选中项, 原因如下: {1}",
    "ErrorMessage-InotifyLimitReached": "此存储库禁用了文件监视。请增加您的通知限制并重新打开此存储库。",
    "ErrorMessage-FileWatcherFailedToStart": "无法对该存储库启动文件监视。",
    "ErrorMessage-InvalidSSLCert": "GitKraken could not complete the request due to potentially invalid SSL certification for {0}.",
    "ErrorMessage-InvalidCommonNameSSLCert": "GitKraken received an CERT_COMMON_NAME_INVALID error for {0}. Your SSL certificate may be missing the proper Server Alternate Name (SAN).",
    "ErrorMessage-InvalidSshKey": "配置的SSH密钥无效。请确认它是否与您的Git服务匹配。",
    "ErrorMessage-SshKeyNotFound": "未找到SSH密钥。请在“首选项->认证”中配置一个。",
    "ErrorMessage-SshKeyNotSupported": "配置的SSH密钥的格式无效。请确保您的密钥有效并且是RSA类型密钥。",
    "ErrorMessage-MergeConflicts": "有合并冲突需要解决",
    "ErrorMessage-CannotOpenFileCompareToolForMultiSelectedFiles": "当前在提交面板中已选中多个文件",
    "ErrorMessage-CannotOpenFileCompareToolWithoutActiveFile": "没有任何在提交面板已选中或合并解决方案面板中打开的文件",
    "ErrorMessage-CannotOpenFileCompareToolForMergedDiffs": "当前在关系图中已选中两个以上的提交",
    "ErrorMessage-CannotOpenRepo": "Could not find a compatible repository at '{0}'.",
    "ErrorMessage-DiffToolNotFound": "未找到配置的差异工具",
    "ErrorMessage-ExternalEditorNotFound": "找不到配置的外部编辑器",
    "ErrorMessage-MergeToolNotFound": "未找到配置的合并工具",
    "ErrorMessage-FailedToLaunchDiffTool": "未找到在git config中设置的差异工具\"{0}\"。",
    "ErrorMessage-FailedToLaunchMergeTool": "未找到在git config中设置的合并工具\"{0}\"。",
    "ErrorMessage-GitHubEnterpriseTooOld": "GitKraken不再支持您的GitHub Enterprise实例。请要求您的网络管理员更新您的GitHub Enterprise服务器。",
    "ErrorMessage-GitLabEnterpriseTooOldIssues": "Your instance of GitLab Self-Managed is no longer supported by GitKraken for issue tracking. Please ask your network administrator to update your GitLab self-hosted server.",
    "ErrorMessage-GitLabBadGateway": "Bad GitLab发布集成网关",
    "ErrorMessage-GitLabUnknown": "未知的GitLab出现集成错误",
    "ErrorMessage-NeedUpgradedPermissions": "GitKraken与{0}有更好的集成, 需要更多的权限才能继续。",
    "ErrorMessage-NeedUpgradedPermissionsButton": "提升权限",
    "ErrorMessage-NoAncestorAvailableToWriteToDisk": "无法将无上级或未解决的冲突保存到磁盘",
    "ErrorMessage-NoDiffToolSet": "在您的设置中没有配置差异工具",
    "ErrorMessage-NoExternalEditorSet": "您的设置中没有配置外部编辑器",
    "ErrorMessage-NoMergeToolSet": "在您的设置中没有配置合并工具",
    "ErrorMessage-ErrorNotificationDeleteFailed": "Failed to delete the notification. Please check your internet connection and try again",
    "ErrorMessage-OpenRepoInExternalEditorFailed": "无法在外部编辑器中打开仓库",
    "ErrorMessage-PullRequestRemoteNotFoundWithNameAndHostingService": "无法获取{1}上的'{0}'拉取请求。请仔细检查您的远程URL，并确保您有权限访问该存储库。",
    "ErrorMessage-PushRefToRefFailed": "将{0}推送到{1}失败",
    "ErrorMessage-RateLimitExceededFor": "Rate limit exceeded for {0}",
    "ErrorMessage-RateLimitReset": "You can begin making requests to {0} again {1}",
    "ErrorMessage-RebaseConflicts": "有变基冲突需要解决",
    "ErrorMessage-RemoteAccessDenied": "访问被拒绝。请确保您有权限在远程执行该操作, 然后重试。",
    "ErrorMessage-RemoteAccessDeniedOrgWarning": "如果{0}是{1}上的组织, 你可能可能需要为GitKraken**请求或授予访问权限**。",
    "ErrorMessage-RemoteAccessDeniedButton": "Go to {0}",
    "ErrorMessage-RemoteRefDoesNotExistOnHostingServiceForPR": "拉取请求的源和/或目标在远程上不存在。请获取您的远程仓库以对其进行更新，然后按缺少的分支。",
    "ErrorMessage-RemoteNotFoundWithName": "无法连接到'{0}'。请仔细检查您的远程URL，并确保您有权限在远程执行该操作，然后重试。",
    "ErrorMessage-RemoteRefBehindRemote": "您的远程分支已过期。请在推送前拉取{0}。",
    "ErrorMessage-RenameRefToRefFailed": "无法将{0}重命名为'{1}'",
    "ErrorMessage-RenameTargetAlreadyExists": "'{0}'已经存在!",
    "ErrorMessage-RepoDeleteFailed": "无法删除存储库{0}!",
    "ErrorMessage-ResetFailedWithReason": "无法重置, 原因如下: {0}",
    "ErrorMessage-WindowsShPathNotFound": "这个存储库有Git钩子。在Windows上使用Git钩子需要sh.exe, 但GitKraken找不到它。",
    "ErrorMessage-SomethingWentWrongAndRestartGK": "Something went wrong. Please try restarting GitKraken.",
    "ErrorMessage-StageFilemodeFailedWithReason": "无法暂存{0}的文件模式, 原因如下: {1}",
    "ErrorMessage-StagePathsFailedWithReason": "无法暂存路径, 原因如下: {0}",
    "ErrorMessage-StageSelectionFailedWithReason": "无法暂存{0}的选择项, 原因如下: {1}",
    "ErrorMessage-TerminalCommandNotConfigured": "设置中没有配置终端。是否立即配置终端?",
    "ErrorMessage-UnableToMergeInApp": "文件冲突同时包含文本和二进制部分。使用外部工具来处理此合并。",
    "ErrorMessage-UnrecognizedAllowedTypes": "无法识别此格式: {0}",
    "ErrorMessage-UnstageFilemodeFailedWithReason": "无法取消暂存{0}的文件模式, 原因如下: {1}",
    "ErrorMessage-UnstagePathsFailedWithReason": "无法取消暂存路径, 原因如下: {0}",
    "ErrorMessage-UnstageSelectionFailedWithReason": "无法取消暂存{0}的选定项, 原因如下: {1}",
    "ErrorMessage-UpdateDiffFailedWithReason": "无法更新差异, 原因如下: {0}",
    "ErrorMessage-UpstreamNotInFetchData": "{1}上不存在{0}",
    "ErrorMessage-SSHKeyDeletionFailed": "SSH key deletion failed. Please remove {0} manually.",
    "ErrorMessage-UnknownFailure": "未知失败。",
    "Plugin-GenericTabLabel": "插入",
    "Plugin-TabViewLoadFailed": "插件无法打开",
    "FileSavePrompt-Detail": "任何未保存的改动都将被丢弃。",
    "FileSavePrompt-Message": "是否保存对{0}所做的改动?",
    "CheckoutError-CloseDetailPanel": "如果要检出, 请保存改动并重试。",
    "MergeError-CloseDetailPanel": "如果要合并, 请保存改动并重试。",
    "RebaseError-CloseDetailPanel": "如果要变基, 请保存改动并重试。",
    "RebaseAbortError-CloseDetailPanel": "要中止变基, 请保存更改并重试。",
    "RebaseContinueError-CloseDetailPanel": "要继续变基, 请保存改动并重试。",
    "CloseRepoError-CloseDetailPanel": "要关闭存储库, 请保存改动并重试。",
    "OpenRepoError-CloseDetailPanel": "要打开另一个存储库, 请保存改动并重试。",
    "DropStashError-CloseDetailPanel": "要删除贮藏区, 请保存改动并重试。",
    "CreateStashError-CloseDetailPanel": "如果要贮藏, 请保存改动并重试。",
    "ApplyStashError-CloseDetailPanel": "要应用贮藏区，请保存您改动并重试。",
    "TryUndoError-CloseDetailPanel": "如果要重做, 请保存改动并重试。",
    "TryRedoError-CloseDetailPanel": "如果要撤销, 请保存改动并重试。",
    "Error-CloseDetailPanel": "请保存您的改动, 然后重试。",
    "Editor-OverwriteContentsOnDiskQuestion": "文件已在GitKraken之外修改。是否覆盖该文件?",
    "Editor-OverwriteContentsOnDiskOrDiscardQuestion": "文件已在GitKraken之外修改。要放弃改动, 还是覆盖文件?",
    "Editor-OverwriteContentsOnDisk": "保存并覆盖",
    "Editor-DiscardChanges": "丢弃这些改动",
    "SaveAndStageEditorChanges-Message": "您是否要在暂存之前保存改动, 或者只暂存已保存到磁盘的部分?",
    "SaveAndStageEditorChanges-SaveAndStage": "保存并暂存",
    "SaveAndStageEditorChanges-StageSavedChangesOnly": "仅暂存已保存的改动",
    "CreateFork-ForkSuccessfullyCreated": "Fork successfully created on {0}",
    "TeamVisibility-SelectTeam": "Team",
    "TeamVisibility-LoadingTeamsPlaceholder": "Fetching teams...",
    "TeamVisibility-NoMatch": "No Match",
    "TeamVisibility-NoTeamsMessage": "Teams in GitKraken allow you to collaborate more effectively with team members and identify merge conflicts before they happen. Teams are included with your subscription and can be created by Admins in the Organization section of {0}.",
    "TeamVisibility-NoTeamsLinkText": "Preferences",
    "TeamVisibility-OtherFilePotentialConficts": "Potential conflicts: you also have changes on this file",
    "TeamVisibility-SelectPlaceholder": "Select a team",
    "TeamVisibility-UnavailableMessage": "Teams in GitKraken allow you to collaborate more effectively with team members and identify  merge conflicts before they happen. Upgrade to a Pro subscription, or join an organization already using GitKraken Teams to get started.",
    "TeamVisibility-UnavailableButtonLabel": "View upgrade options",
    "TeamVisibility-YourFileOnePotentialConflict": "Potential conflicts: {0} also has changes on this file",
    "TeamVisibility-YourFileMultiplePotentialConflicts": "Potential conflicts: multiple members also have changes on this file",
    "IntegrationView-AddCommentSubmitLabel": "Add Comment",
    "IntegrationView-AddCommentPlaceholder": "Add a comment",
    "IntegrationView-AddDescriptionPlaceholder": "Add a description",
    "IntegrationView-AddRemote": "Yes, add remote",
    "IntegrationView-AddRemotePrompt": "Do you want to add \"{0}\" as a remote?",
    "IntegrationView-Assignee": "Assignee",
    "IntegrationView-Assignees": "Assignees",
    "IntegrationView-ClearAssignee": "Clear assignee",
    "IntegrationView-ClearAssignees": "Clear assignees",
    "IntegrationView-ClearLabels": "Clear labels",
    "IntegrationView-ClearMilestone": "Clear milestone",
    "IntegrationView-Comments": "Comments",
    "IntegrationView-Description": "Description",
    "IntegrationView-EditDetail": "Edit",
    "IntegrationView-Labels": "Labels",
    "IntegrationView-Milestone": "Milestone",
    "IntegrationView-MilestoneDueDate": "Due {0}",
    "IntegrationView-Milestones": "Milestones",
    "IntegrationView-NoMatch": "No Match",
    "IntegrationView-Refresh": "Refresh",
    "IntegrationView-SelectPlaceholder": "Select ...",
    "IntegrationView-UnknownUser": "unknown user",
    "IntegrationView-BranchLabelTooltipWithRemote": "Click to view. Double-click to checkout.",
    "IntegrationView-BranchLabelTooltipWithoutRemote": "Double-click to checkout.",
    "IntegrationViewCommentMenu-QuoteReply": "Quote reply",
    "IntegrationViewError-AssigneesEditFailed": "Failed to edit assignees",
    "IntegrationViewError-DescriptionEditFailed": "Failed to update description",
    "IntegrationViewError-LabelsEditFailed": "Failed to edit labels",
    "IntegrationViewError-MilestonesEditFailed": "Failed to edit milestones",
    "IntegrationViewError-ReviewersEditFailed": "Failed to edit reviewers",
    "IntegrationViewError-TitleEditFailed": "Failed to update title",
    "IntegrationView-GitHubTriagePermissionMessage": "GitHub's API doesn't allow triage users to edit.",
    "PullRequestView-AddCommitSummary": "Add a commit summary",
    "PullRequestView-AddCommitDescription": "Add a commit description",
    "PullRequestView-And": "and",
    "PullRequestView-Approve": "Approve",
    "PullRequestView-Approved": "approved",
    "PullRequestView-ApprovedSubText": "1 approving review",
    "PullRequestView-ApproveSubText": "Submit feedback and approve merging these changes.",
    "PullRequestView-Branch": "Branch",
    "PullRequestView-BuildStatus": "Build Status",
    "PullRequestView-ClearReviewer": "Clear reviewer",
    "PullRequestView-ClearReviewers": "Clear reviewers",
    "PullRequestView-Closed": "Closed with unmerged commits",
    "PullRequestView-CodeCommentHide": "Hide",
    "PullRequestView-CodeCommentHideResolved": "Hide Resolved",
    "PullRequestView-CodeCommentOutdated": "Outdated",
    "PullRequestView-CodeCommentReviewed": "reviewed",
    "PullRequestView-CodeCommentShow": "Show",
    "PullRequestView-CodeCommentShowResolved": "Show Resolved",
    "PullRequestView-Comment": "Comment",
    "PullRequestView-Commented": "commented",
    "PullRequestView-CommentPending": "Pending",
    "PullRequestView-CommentSubText": "Submit general feedback without explicit approval.",
    "PullRequestView-ConfirmX": "Confirm {0}",
    "PullRequestView-ContinuousIntegrationAllFailed": "All checks have failed",
    "PullRequestView-ContinuousIntegrationAllPassed": "All checks have passed",
    "PullRequestView-ContinuousIntegrationCheck": "{0} check",
    "PullRequestView-ContinuousIntegrationChecks": "{0} checks",
    "PullRequestView-ContinuousIntegrationSomeFailed": "Some checks were not successful",
    "PullRequestView-ContinuousIntegrationSomePending": "Some checks haven't completed yet",
    "PullRequestView-ContinuousIntegrationXFailed": "{0} failed",
    "PullRequestView-ContinuousIntegrationXSuccessful": "{0} successful",
    "PullRequestView-ContinuousIntegrationXPending": "{0} pending",
    "PullRequestView-CopyPullRequestLink": "Copy pull request link to clipboard.",
    "PullRequestView-DeleteBranch": "Delete branch",
    "PullRequestView-DeleteLocalRefs": "Delete local branch",
    "PullRequestView-FileChanged": "1 file changed",
    "PullRequestView-FilesChangedX": "{0} files changed",
    "PullRequestView-FilesChangedNotFound": "Files changed not found",
    "PullRequestView-FinishReview": "Finish Review",
    "PullRequestView-FinishYourReview": "Finish your review",
    "PullRequestView-GitHub": "GitHub",
    "PullRequestView-Merge": "Merge pull request",
    "PullRequestView-MergeSuccessfulSubtextThe": "The",
    "PullRequestView-MergeSuccessfulSubtext": "branch can be safely deleted.",
    "PullRequestView-MergeSuccessful": "Pull request successfully merged and closed",
    "PullRequestView-Opened": "Opened",
    "PullRequestView-OpenPullRequestInBrowser": "Open pull request in browser",
    "PullRequestView-Participants": "Participants",
    "PullRequestView-PendingReviewComment": "1 pending comment",
    "PullRequestView-PullRequest": "Pull Request",
    "PullRequestView-Pending": "started a review",
    "PullRequestView-PendingReviewSubText": "Review has been requested on this pull request",
    "PullRequestView-Reply": "Reply",
    "PullRequestView-ReplyDisabledDueToPendingReview": "Finish pending review to reply to this comment",
    "PullRequestView-RepoOutOfSync-BaseNotFound": "Pull request base branch is not found locally. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-HeadNotFound": "Pull request head branch is not found locally. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-BaseDifferent": "Pull request base branch is different from remote. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-RepoOutOfSync-HeadDifferent": "Pull request head branch is different from remote. Local repo is most likely out of sync with remote (try fetching).",
    "PullRequestView-ReRequestReviewTip": "Re-request review",
    "PullRequestView-RequestedChanges": "requested changes",
    "PullRequestView-RequestChanges": "Request Changes",
    "PullRequestView-ReviewApprovedChanges": "Changes Approved",
    "PullRequestView-ReviewApproving": "{0} approving",
    "PullRequestView-ReviewChangesRequested": "Changes Requested",
    "PullRequestView-ReviewDismissed": "Dismissed",
    "PullRequestView-ReviewPending": "{0} pending",
    "PullRequestView-ReviewPendingReview": "Review Requested",
    "PullRequestView-ReviewRequestedChanges": "{0} requested changes",
    "PullRequestView-ReviewReview": "{0} review",
    "PullRequestView-ReviewReviews": "{0} reviews",
    "PullRequestView-RequestChangesSubText": "Submit feedback that must be addressed before merging.",
    "PullRequestView-ReviewChanges": "Review Changes",
    "PullRequestView-Reviewed": "reviewed",
    "PullRequestView-Reviewers": "Reviewers",
    "PullRequestView-SubmitReview": "Submit review",
    "PullRequestView-ViewFileChanges": "View file changes",
    "PullRequestView-ViewOnlyPermissionMessage": "You do not have permission to edit this pull request.",
    "PullRequestView-WaitingForAReviewFromX": "Waiting for review from {0}",
    "PullRequestView-XApproved": "{0} approved",
    "PullRequestView-XCommented": "{0} left comments",
    "PullRequestView-XPendingReviewComments": "{0} pending comments",
    "PullRequestView-XRequestedChanges": "{0} requested changes",
    "PullRequestViewFilesError-CouldNotFindAncestorCommit": "Failed to find shared ancestor commit for this pull request.",
    "PullRequestViewFilesError-CouldNotFindBaseCommit": "Failed to find base commit for this pull request.",
    "PullRequestViewFilesError-CouldNotFindHeadCommit": "Failed to find head commit for this pull request. Ensure this remote is not hidden, or try increasing the number of commits visible in the graph in Preferences > General.",
    "PullRequestViewFilesError-MissingShaToViewFileChanges": "Failed to find shas for this pull request.",
    "PullRequestViewFilesError-NoAncestorCommit": "Failed to find a shared commit between the head and base of this pull request.",
    "PullRequestViewMergeabilitySection-Blocked": "Merging is blocked",
    "PullRequestViewMergeabilitySection-Conflicts": "This branch has conflicts that must be resolved",
    "PullRequestViewMergeabilitySection-NoConflicts": "This branch has no conflicts with the base branch",
    "PullRequestViewMergeabilitySection-NoPermission": "Only those with write access can merge pull requests.",
    "PullRequestViewMergeabilitySection-Draft": "This pull request is still a work in progress",
    "PullRequestViewMergeabilitySection-DraftSubText": "Draft pull requests cannot be merged.",
    "PullRequestViewMergeForm-ChooseEmail": "Choose which email to associate with this merge",
    "PullRequestViewMergeForm-Merge": "Merge",
    "PullRequestViewMergeForm-MergeDetails": "All commits from this branch will be added to the base branch via a merge commit.",
    "PullRequestViewMergeForm-MergeHeader": "Create a merge commit",
    "PullRequestViewMergeForm-NotEnabled": "Not enabled for this repository",
    "PullRequestViewMergeForm-RebaseDetails": "The commits from this branch will be rebased and added to the base branch.",
    "PullRequestViewMergeForm-RebaseHeader": "Rebase and merge",
    "PullRequestViewMergeForm-SquashDetails": "The commits from this branch will be added to the base branch.",
    "PullRequestViewMergeForm-SquashHeader": "Squash and merge",
    "PullRequestViewError-DeletingBranch": "Failed to delete branch.",
    "PullRequestViewError-FailedToFindPullRequest": "Failed to find pull request on {0}.",
    "PullRequestViewError-FailedToFindRepository": "Failed to find repository on {0}.",
    "PullRequestViewError-FetchingCommentsAndReviewsFailed": "Failed to fetch comments and reviews.",
    "PullRequestViewError-FetchingRemoteMetadataFailed": "Failed to fetch remote metadata.",
    "PullRequestViewError-PollingDataFailed": "Failed to fetch pull request data.",
    "PullRequestViewError-MergingPullRequestFailed": "Failed to merge pull request.",
    "PullRequestViewError-NoCommentParentIdFound": "Failed to find original comment to reply to.",
    "PullRequestViewError-NoCommentReturned": "No comment returned from provider.",
    "PullRequestViewError-NoNodeId": "Pull request does not have a node id.",
    "PullRequestViewError-NoReviewId": "Pull request review does not have a node id.",
    "PullRequestViewError-NoRefsFound": "Failed to find branches associated with this pull request.",
    "PullRequestViewError-PostingComment": "Failed to post comment.",
    "PullRequestViewError-RenderingDiff": "Failed to render diff.",
    "PullRequestViewError-ReplyingToComment": "Failed to reply to comment.",
    "PullRequestViewError-AddReviewWithPendingReview": "Pending review in progress. Please review pending comments before trying again.",
    "PullRequestViewError-AddReplyWithPendingReview": "Pending review in progress. Please finish review before adding replies.",
    "PullRequestViewError-SubmittingReview": "Failed to submit review.",
    "PullRequestViewError-ViewingFileChanges": "Failed to view file changes.",
    "PullRequestViewError-MergingPullRequestUnverifiedEmail": "The email {0} is not verified on {1}. Use a {1} verified email in your GitKraken profile or add this email to your {1} account.",
    "PullRequestViewDisabled-AuthorCantApprove": "Pull request authors can't approve their own pull request.",
    "PullRequestViewDisabled-AuthorCantRequestChanges": "Pull request authors can't request changes on their own pull request.",
    "Issues": "问题",
    "IssueTracker": "问题追踪器",
    "IssueTracker-Card": "卡",
    "IssueTracker-Issue": "问题",
    "IssueTracker-CancelLabel": "取消",
    "IssueTracker-ConfirmDefaultIssueTrackerType": "Do you want to set {0} as the default issue tracker type? (this can be changed in Preferences)",
    "IssueTracker-Connected": "连接的",
    "IssueTracker-Connect": "连接",
    "IssueTracker-CreateAFilter": "创建一个过滤器",
    "IssueTracker-CreateBranchForCard": "为此卡创建一个分支",
    "IssueTracker-CreateBranchForIssue": "为此问题创建一个分支",
    "IssueTracker-DefaultIssueTrackerTypeLabel": "将其用作所有存储库的默认值",
    "IssueTracker-DoNotAskAgain": "不要再问了",
    "IssueTracker-GitHub": "GitHub",
    "IssueTracker-GitHubEnterprise": "GitHub Enterprise",
    "IssueTracker-GitHubNoValidRemotes": "To use GitHub issues, add a remote repo with issues enabled.",
    "IssueTracker-GitLab": "GitLab",
    "IssueTracker-GitLabSelfManaged": "GitLab自我管理",
    "IssueTracker-GKBoards": "GitKraken板",
    "IssueTracker-IssueTracker": "问题追踪器",
    "IssueTracker-Jira": "Jira",
    "IssueTracker-JiraCloud": "Jira 云",
    "IssueTracker-JiraServer": "Jira服务器",
    "IssueTracker-LoadingBoardsPlaceholder": "Fetching boards...",
    "IssueTracker-LoadingProjectsPlaceholder": "Fetching projects...",
    "IssueTracker-LoadingRemotesPlaceholder": "Fetching repos...",
    "IssueTracker-Trello": "TRELLO",
    "IssueTracker-MaximumIssues": "Filter maximum is {0} issues",
    "IssueTracker-MaximumIssuesWithoutSpecificLimit": "Filter matches too many issues to list them all",
    "IssueTracker-MaximumCards": "Filter maximum is {0} cards",
    "IssueTracker-NoLabel": "没有",
    "IssueTracker-None": "没有",
    "IssueTracker-RefreshCards": "刷新卡",
    "IssueTracker-RefreshIssues": "刷新问题",
    "IssueTracker-RemoveFilterLabel": "去掉",
    "IssueTracker-RemoveFilterPrompt": "Do you want to remove the \"{0}\" filter?",
    "IssueTracker-SelectATracker": "选择此仓库的问题跟踪器",
    "IssueTracker-SaveDetail": "保存",
    "IssueTracker-SelectBoardToCreateFilter": "选择一个板来创建过滤器",
    "IssueTracker-SelectProjectToCreateFilter": "选择一个项目以创建过滤器",
    "IssueTracker-SelectRepoToCreateFilter": "Select a repository to create a filter",
    "IssueTracker-SelectBoard": "板",
    "IssueTracker-SelectProject": "项目",
    "IssueTracker-SelectRepo": "Repo",
    "IssueTracker-YesLabel": "是",
    "IssueTrackerSearch-FilteredCards": "Search filtered cards",
    "IssueTrackerSearch-FilteredIssues": "搜索过滤的问题",
    "IssueTrackerCreateForm-BaseBranch": "基地分行",
    "IssueTrackerCreateForm-ColumnLabel": "柱",
    "IssueTrackerCreateForm-ListLabel": "清单",
    "IssueTrackerCreateForm-StatusLabel": "状态",
    "IssueTrackerCreateForm-StateLabel": "州",
    "IssueTrackerCreateForm-ColumnPlaceholder": "搜索栏",
    "IssueTrackerCreateForm-ListPlaceholder": "搜寻清单",
    "IssueTrackerCreateForm-StatusPlaceholder": "搜索状态",
    "IssueTrackerCreateForm-StatePlaceholder": "搜索状态",
    "IssueTrackerCreateForm-CreateNewCard": "创建新卡",
    "IssueTrackerCreateForm-CreateNewIssue": "创刊号",
    "IssueTrackerCreateForm-AssigneesPlaceholder": "搜索受让人",
    "IssueTrackerCreateForm-MembersPlaceholder": "搜索成员",
    "IssueTrackerCreateForm-DescriptionLabel": "描述",
    "IssueTrackerCreateForm-DescriptionPlaceholder": "输入描述",
    "IssueTrackerCreateForm-EpicLinkLabel": "史诗般的链接",
    "IssueTrackerCreateForm-EpicLinkPlaceholder": "搜索史诗",
    "IssueTrackerCreateForm-IssueTypeLabel": "发行类型",
    "IssueTrackerCreateForm-IssueTypePlaceholder": "选择问题类型",
    "IssueTrackerCreateForm-LabelsLabel": "标签",
    "IssueTrackerCreateForm-LabelsPlaceholder": "搜索标签",
    "IssueTrackerCreateForm-NameLabel": "名称",
    "IssueTrackerCreateForm-SummaryLabel": "摘要",
    "IssueTrackerCreateForm-TitleLabel": "标题",
    "IssueTrackerCreateForm-NamePlaceholder": "输入名字",
    "IssueTrackerCreateForm-SummaryPlaceholder": "输入摘要",
    "IssueTrackerCreateForm-TitlePlaceholder": "输入标题",
    "IssueTrackerCreateForm-NoMatch": "没有匹配",
    "IssueTrackerCreateForm-SubmitLabelCard": "创建卡",
    "IssueTrackerCreateForm-SubmitLabelIssue": "创建问题",
    "IssueTrackerCreateForm-SuccessfullyCreatedCardOnGitLab": "在GitLab上成功创建问题",
    "IssueTrackerCreateForm-SuccessfullyCreatedCardOnGKBoards": "在GitKraken板上成功创建卡",
    "IssueTrackerCreateForm-SuccessfullyCreatedCardOnTrello": "在Trello上成功创建卡",
    "IssueTrackerCreateForm-SuccessfullyCreatedIssue": "成功创建问题",
    "IssueTrackerCreateForm-SuccessfullyCreatedIssueOnJira": "在Jira上成功创建问题",
    "IssueTrackerCreateForm-OpenJiraIssueCreateLink": "在Jira中创建此问题",
    "IssueFilterError-GitHubField": "Filter field name is not valid: {0}",
    "IssueFilterError-GitHubAssignee": "Assignee must be a username, \"none\", or \"*\"",
    "IssueFilterError-GitHubCreator": "Creator must be a username",
    "IssueFilterError-GitHubLabels": "Labels must be a comma-separated list of labels",
    "IssueFilterError-GitHubMentioned": "Mentioned must be a username",
    "IssueFilterError-GitHubMilestone": "Milestone must be either a number or \"*\"",
    "IssueFilterError-GitHubSince": "Since must be an ISO-8601 date/time value such as YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS-07",
    "IssueFilterError-GitHubSort": "Sorting must be \"created\", \"updated\", or \"comments\"",
    "IssueFilterError-GitHubSortDirection": "Sorting direction must be \"asc\" or \"desc\"",
    "IssueFilterError-GitHubState": "State must be \"open\", \"closed\", or \"all\"",
    "IssueTrackerFilterForm-CreateGitLabFilter": "创建GitLab过滤器",
    "IssueTrackerFilterForm-CreateGKBoardsFilter": "创建GitKraken板过滤器",
    "IssueTrackerFilterForm-CreateIssueTrackerFilter": "创建问题跟踪过滤器",
    "IssueTrackerFilterForm-CreateJiraFilter": "创建Jira过滤器",
    "IssueTrackerFilterForm-CreateTrelloFilter": "创建Trello过滤器",
    "IssueTrackerFilterForm-CreateGitHubFilter": "Create GitHub Filter",
    "IssueTrackerFilterForm-CreateGitLabFilterFailed": "创建GitLab过滤器失败",
    "IssueTrackerFilterForm-CreateGKBoardsFilterFailed": "无法创建GitKraken板过滤器",
    "IssueTrackerFilterForm-CreateIssueTrackerFilterFailed": "无法创建问题跟踪过滤器",
    "IssueTrackerFilterForm-CreateJiraFilterFailed": "创建Jira过滤器失败",
    "IssueTrackerFilterForm-CreateTrelloFilterFailed": "创建Trello过滤器失败",
    "IssueTrackerFilterForm-CreateGitHubFilterFailed": "Failed to create GitHub filter",
    "IssueTrackerFilterForm-EditGitLabFilter": "编辑GitLab过滤器",
    "IssueTrackerFilterForm-EditGKBoardsFilter": "编辑GitKraken板过滤器",
    "IssueTrackerFilterForm-EditIssueTrackerFilter": "编辑问题跟踪过滤器",
    "IssueTrackerFilterForm-EditJiraFilter": "编辑Jira过滤器",
    "IssueTrackerFilterForm-EditTrelloFilter": "编辑Trello筛选器",
    "IssueTrackerFilterForm-EditGitHubFilter": "Edit GitHub Filter",
    "IssueTrackerFilterForm-EditGitLabFilterFailed": "编辑GitLab过滤器失败",
    "IssueTrackerFilterForm-EditGKBoardsFilterFailed": "无法编辑GitKraken板过滤器",
    "IssueTrackerFilterForm-EditIssueTrackerFilterFailed": "无法编辑问题跟踪过滤器",
    "IssueTrackerFilterForm-EditJiraFilterFailed": "无法编辑Jira过滤器",
    "IssueTrackerFilterForm-EditTrelloFilterFailed": "无法编辑Trello过滤器",
    "IssueTrackerFilterForm-EditGitHubFilterFailed": "Failed to edit GitHub filter",
    "IssueTrackerFilterForm-EditLabel": "编辑过滤器",
    "IssueTrackerFilterForm-FetchIssueTrackerFilterFailed": "Filter '{0}' is invalid",
    "IssueTrackerFilterForm-FilterCardsInBoardTextLabel": "板载滤卡",
    "IssueTrackerFilterForm-FilterIssuesInRemoteTextLabel": "Filter Issues in Remote Repo",
    "IssueTrackerFilterForm-FilterIssuesInProjectTextLabel": "过滤项目中的问题",
    "IssueTrackerFilterForm-FilterCardsInXTextLabel": "Filter Cards in {0}",
    "IssueTrackerFilterForm-FilterIssuesInXTextLabel": "Filter Issues in {0}",
    "IssueTrackerFilterForm-FilterCardsTextPlaceholder": "Enter a query to filter cards. A blank query will return all cards on the board.",
    "IssueTrackerFilterForm-FilterIssuesTextPlaceholder": "Enter a query to filter issues. A blank query will return all issues.",
    "IssueTrackerFilterForm-FilterOpenIssuesTextPlaceholder": "Enter a query to filter issues. A blank query will return all open issues.",
    "IssueTrackerFilterForm-GitlabSyntaxReferenceSubTitle": "Read more about filtering Gitlab on their {0}.",
    "IssueTrackerFilterForm-GKBoardsSyntaxReferenceSubTitle": "Read more about filtering GK Boards on the {0}.",
    "IssueTrackerFilterForm-IssueTrackerSyntaxReferenceSubTitle": "Read more about filtering issue trackers on the {0}.",
    "IssueTrackerFilterForm-TrelloSyntaxReferenceSubTitle": "Read more about filtering Trello on their {0}.",
    "IssueTrackerFilterForm-SyntaxReferenceSubTitleLinkText": "支持网站",
    "IssueTrackerFilterForm-GitLabSyntaxReferenceTitle": "GitLab过滤器语法",
    "IssueTrackerFilterForm-GKBoardsSyntaxReferenceTitle": "GitKraken板过滤器语法",
    "IssueTrackerFilterForm-TrelloSyntaxReferenceTitle": "Trello过滤器语法",
    "IssueTrackerFilterForm-GitHubSyntaxReferenceTitle": "GitHub Filter Syntax",
    "IssueTrackerFilterForm-NamePlaceholder": "输入此过滤器的名称",
    "IssueTrackerFilterForm-SubmitLabel": "创建过滤器",
    "IssueTrackerFilterForm-AssigneeAnyLabel": "Assignee (any):",
    "IssueTrackerFilterForm-AssigneeLabel": "受让人：",
    "IssueTrackerFilterForm-ChecklistLabel": "清单：",
    "IssueTrackerFilterForm-ColumnLabel": "柱：",
    "IssueTrackerFilterForm-CommentLabel": "评论：",
    "IssueTrackerFilterForm-OperatorsLabel": "常用运算符：",
    "IssueTrackerFilterForm-CreatedDateLabel": "创建日期：",
    "IssueTrackerFilterForm-CreatorLabel": "创建者:",
    "IssueTrackerFilterForm-CustomCreatedDateLabel": "在过去number_of_days天创建：",
    "IssueTrackerFilterForm-CustomDueDateLabel": "在接下来的天数内到期：",
    "IssueTrackerFilterForm-CustomEditedDateLabel": "在过去几天内编辑：",
    "IssueTrackerFilterForm-DescriptionLabel": "描述：",
    "IssueTrackerFilterForm-DueDateLabel": "截止日期：",
    "IssueTrackerFilterForm-EditedDateLabel": "编辑日期：",
    "IssueTrackerFilterForm-FilterByLabel": "过滤：",
    "IssueTrackerFilterForm-GitLabDoubleQuotes": "对于其中带有空格的名称，请使用双引号。",
    "IssueTrackerFilterForm-IsCompleteLabel": "完成了：",
    "IssueTrackerFilterForm-LabelLabel": "标签：",
    "IssueTrackerFilterForm-LabelsLabel": "Labels:",
    "IssueTrackerFilterForm-ListLabel": "清单：",
    "IssueTrackerFilterForm-MemberLabel": "会员：",
    "IssueTrackerFilterForm-MentionedLabel": "Mentioned:",
    "IssueTrackerFilterForm-MilestoneAnyLabel": "Milestone (any):",
    "IssueTrackerFilterForm-MilestoneLabel": "里程碑：",
    "IssueTrackerFilterForm-NameLabel": "名称：",
    "IssueTrackerFilterForm-OpenStatusLabel": "开启状态：",
    "IssueTrackerFilterForm-SinceLabel": "Since:",
    "IssueTrackerFilterForm-SortingLabel": "排序：",
    "IssueTrackerFilterForm-DirectionLabel": "Sorting Direction:",
    "IssueTrackerFilterForm-StateLabel": "州：",
    "IssueTrackerFilterForm-All": "全部",
    "IssueTrackerFilterForm-Archived": "archived",
    "IssueTrackerFilterForm-Ascending": "asc",
    "IssueTrackerFilterForm-Asterisk": "*",
    "IssueTrackerFilterForm-Assignee": "assignee",
    "IssueTrackerFilterForm-Checklist": "checklist",
    "IssueTrackerFilterForm-Column": "column",
    "IssueTrackerFilterForm-ColumnName": "column_name",
    "IssueTrackerFilterForm-Comments": "评论",
    "IssueTrackerFilterForm-Closed": "已关闭",
    "IssueTrackerFilterForm-Comment": "评论",
    "IssueTrackerFilterForm-Complete": "complete",
    "IssueTrackerFilterForm-Created": "created",
    "IssueTrackerFilterForm-Creator": "creator",
    "IssueTrackerFilterForm-CustomDays": "天数",
    "IssueTrackerFilterForm-Description": "description",
    "IssueTrackerFilterForm-Day": "天",
    "IssueTrackerFilterForm-Descending": "desc",
    "IssueTrackerFilterForm-Direction": "direction",
    "IssueTrackerFilterForm-Due": "due",
    "IssueTrackerFilterForm-DueDate": "due_date",
    "IssueTrackerFilterForm-Edited": "edited",
    "IssueTrackerFilterForm-Incomplete": "incomplete",
    "IssueTrackerFilterForm-InputText": "输入文本",
    "IssueTrackerFilterForm-Is": "is",
    "IssueTrackerFilterForm-Label": "label",
    "IssueTrackerFilterForm-Labels": "labels",
    "IssueTrackerFilterForm-LabelName": "label_name",
    "IssueTrackerFilterForm-LabelSpaceName": "标签名称",
    "IssueTrackerFilterForm-ListName": "列表名称",
    "IssueTrackerFilterForm-Me": "我",
    "IssueTrackerFilterForm-Member": "成员",
    "IssueTrackerFilterForm-Mentioned": "mentioned",
    "IssueTrackerFilterForm-Milestone": "milestone",
    "IssueTrackerFilterForm-MilestoneName": "milestone_name",
    "IssueTrackerFilterForm-MilestoneNumber": "milestone_number",
    "IssueTrackerFilterForm-Month": "月",
    "IssueTrackerFilterForm-Name": "名称",
    "IssueTrackerFilterForm-None": "空",
    "IssueTrackerFilterForm-Open": "打开",
    "IssueTrackerFilterForm-Overdue": "过期的",
    "IssueTrackerFilterForm-Since": "since",
    "IssueTrackerFilterForm-SinceFormat": "{ISO-8601 date string}",
    "IssueTrackerFilterForm-Sort": "排序",
    "IssueTrackerFilterForm-State": "state",
    "IssueTrackerFilterForm-StateName": "state_name",
    "IssueTrackerFilterForm-Updated": "updated",
    "IssueTrackerFilterForm-UserName": "用户名",
    "IssueTrackerFilterForm-FilterError": "Filter Error",
    "TrelloFilterForm-QueryWarning": "警告",
    "TrelloFilterForm-BoardWarningMessage": "结果已由选定的木板过滤，因此不需要\" board：\"参数。",
    "IssueTrackerDefaultFilter-AllCards": "所有卡",
    "IssueTrackerDefaultFilter-AllIssues": "所有问题",
    "IssueTrackerDefaultFilter-AllOpenIssues": "All Open Issues",
    "IssueTrackerDefaultFilter-MyCards": "我的卡",
    "IssueTrackerDefaultFilter-MyIssues": "我的问题",
    "IssueTrackerDefaultFilter-MyOpenIssues": "My Open Issues",
    "IssueTrackerDefaultFilter-MyClosedIssues": "My Closed Issues",
    "IssueTrackerDefaultFilter-UnassignedCards": "未分配的卡",
    "IssueTrackerDefaultFilter-UnassignedIssues": "未分配的问题",
    "IssueTrackerError-BadRequest": "错误的请求语法",
    "IssueTrackerError-CapchaBlockingLogin": "验证码阻止了身份验证。请登录到您的帐户以继续。",
    "IssueTrackerError-ColumnEditFailed": "无法更新列",
    "IssueTrackerError-CommentEditFailed": "无法更新评论",
    "IssueTrackerError-CreateCardFailed": "创建卡失败",
    "IssueTrackerError-CreateCommentFailed": "创建评论失败",
    "IssueTrackerError-CreateIssueFailed": "创建问题失败",
    "IssueTrackerError-FetchingCardsFailed": "提取卡失败",
    "IssueTrackerError-FetchingIssuesFailed": "提取问题失败",
    "IssueTrackerError-FetchingFiltersFailed": "Failed to fetch one or more filters",
    "IssueTrackerError-FetchingPublicProjectsFailed": "Failed to fetch one or more public projects",
    "IssueTrackerError-FourOhFour": "找不到指定的资源",
    "IssueTrackerError-IncorrectVersionGitLab": "低于13.1的GitLab自我管理版本不支持问题跟踪。",
    "IssueTrackerError-IncorrectVersion": "不支持问题跟踪器版本",
    "IssueTrackerError-InitializeFailed": "Failed to initialize",
    "IssueTrackerError-InvalidCredentials": "无效证件",
    "IssueTrackerError-InvalidUsernameOrPassword": "用户名或密码无效",
    "IssueTrackerError-JiraPeoplePermissionError": "您无权浏览Jira上的用户和组",
    "IssueTrackerError-MembersEditFailed": "无法更新成员",
    "IssueTrackerError-GitLabMissingProject": "Missing project {0}. Make sure the project exists and you have permission to access it.",
    "IssueTrackerError-GitLabMissingIssueProject": "Missing issue {0} for project {1}. Make sure the project and issue exist and you have permission to access them.",
    "IssueTrackerError-GitLabMissingDiscussionsIssueProject": "Missing discussions for issue {0} for project {1}. Make sure the project and issue exist and you have permission to access them.",
    "IssueTrackerError-GitLabMissingBoardProject": "Missing board {0} for project {1}. Make sure the project and board exist and you have permission to access them.",
    "IssueTrackerError-NameEditFailed": "无法更新名称",
    "IssueTrackerError-NotUseGitHub": "Repo must be hosted on GitHub.",
    "IssueTrackerError-NotUseGitHubEnterprise": "Repo must be hosted on GitHub Enterprise.",
    "IssueTrackerError-SaveCredentialsFailed": "保存凭证失败",
    "IssueTrackerError-SetActiveIssueTrackerFailed": "无法设置问题跟踪器",
    "IssueTrackerError-StatusEditFailed": "无法更新状态",
    "IssueTrackerError-SummaryEditFailed": "无法更新摘要",
    "IssueTrackerError-TaskItemEditFailed": "无法更新任务项目值",
    "IssueTrackerError-TrelloTokenExpired": "Trello令牌已过期",
    "IssueTrackerError-TrelloRateLimit": "超过Trello API速率限制",
    "IssueTrackerPreferences-IssueTracker": "问题追踪器",
    "IssueTrackerPreferences-ChangePreferencesHint": "要为此存储库设置问题跟踪器，请转到“偏好设置”>“问题”",
    "IssueTrackerPreferences-OpenPreferences": "打开首选项",
    "IssueTracker-Member": "会员",
    "IssueTracker-Members": "会员",
    "IssueTracker-GitHubSyncedBoardBlocksEditMessage": "这是GitHub同步板。请导航至GitKraken板以编辑此卡。",
    "IssueTracker-GitHubSyncedBoardBlocksCreateMessage": "这是GitHub同步板。请导航到GitKraken板以创建卡。",
    "IssueTracker-UpgradeToCreateACardMessage": "升级GitKraken以创建卡。",
    "IssueTracker-UpgradeToCreateAnIssueMessage": "升级GitKraken以创建问题。",
    "IssueTracker-UpgradeToEditACardMessage": "升级GitKraken以编辑卡片。",
    "IssueTracker-UpgradeToEditAnIssueMessage": "升级GitKraken以编辑问题。",
    "IssueTracker-ViewOnlyPermissionMessageCard": "您无权编辑此卡。",
    "IssueTracker-ViewOnlyPermissionMessageIssue": "您无权编辑此问题。",
    "IssueTracker-ViewOnlyPermissionCommentMessageCard": "您无权对此卡发表评论。",
    "IssueTracker-ViewOnlyPermissionCommentMessageIssue": "您无权对此问题发表评论。",
    "IssueTracker-GoToBoard": "在GitKraken板中打开",
    "IssueTracker-UnsupportedJiraFieldMessage": "无法创建此类型的问题，因为Jira要求GitKraken当前不支持以下字段:",
    "Cli-CloseGraphView": "Close graph view",
    "Cli-GraphViewNotAvailableOnPrivateRepos": "The graph view is not available for private or self-hosted repositories",
    "Cli-WelcomeMessageLine1": "🐙  {0}Welcome to the GitKraken CLI!{1}",
    "Cli-WelcomeMessageLine2": "{0}cd{1} into a directory being tracked by Git and type {2}gk graph{3} to see what GitKraken can do{4}",
    "Cli-NoRepoToShowError": "No repo to show",
    "Cli-EmptyRepo": "Repository is empty",
    "Cli-GenericError": "{0}Error: {1}",
    "Cli-PtyStartError": "Failed to start shell process",
    "Cli-UnsupportedOperation": "Unsupported operation",
    "Cli-GkHistoryNotInRepoError": "You have not opened a repo",
    "Cli-GkHistoryFilePathNotInRepoError": "The given path does not match any file in this repo",
    "Cli-GkHistoryPathNotFoundError": "The given path does not exist",
    "Cli-GkHistoryFileNotFoundError": "The given path does not match any file",
    "Cli-GainedFeatureNotificationTitle": "You've been invited to the GitKraken CLI Preview",
    "Cli-GainedFeatureNotificationBodyP1": "The GitKraken CLI enhances the terminal experience for all things Git by eliminating the need to memorize Git commands and providing powerful visualizations of your repository when you need them.",
    "Cli-GainedFeatureNotificationBodyP2": "You have been invited to this limited preview to test what the GitKraken team has been working on and **provide feedback** that will help us deliver the best CLI experience to all GitKraken users later this year.",
    "Cli-GainedFeatureNotificationBodyP3": "Here is what is possible in the preview:",
    "Cli-GainedFeatureNotificationBodyP3-1": "Open a GitKraken graph when changing into a directory being tracked by Git",
    "Cli-GainedFeatureNotificationBodyP3-2": "Get autocomplete suggestions while writing Git commands in the terminal",
    "Cli-GainedFeatureNotificationBodyP3-3": "Use the new gk program to interact with the GitKraken GUI from the terminal",
    "Cli-GainedFeatureNotificationButton": "Open the GK CLI",
    "Cli-GkDiffDescription": "diff [sha1] [sha2] Show changes between commits in graph panel. If no SHAs are provided, it will use your WIP and HEAD. If only one SHA is provided, it will be compared with HEAD.",
    "Cli-GkDiffNoShaError": "Sha is mandatory",
    "Cli-GkDiffNoRepoError": "Repository not found",
    "Cli-GkDiffSameShaError": "Shas should not be equal",
    "Cli-GkDiffShaNoExistError": "Commit \"{0}\" not found",
    "CliPreviewModal-Title": "Welcome to the GitKraken CLI Preview",
    "CliPreviewModal-ButtonLabel": "Submit CLI feedback",
    "CliPreviewModal-BodyContent": "The GitKraken CLI enhances the terminal experience for all things Git by eliminating the need to memorize Git commands and providing powerful visualizations of your repository when you need them.\n\nYou have been invited to this limited preview to test what the GitKraken team has been working on and provide feedback that will help us deliver the best CLI experience to all GitKraken users later this year.\n\nHere is what is possible in the preview:\n\n* Open a GitKraken graph when changing into a directory being tracked by Git\n  * Toggle the graph panel on/off with `gk graph`\n  * Select commits and inspect file diffs\n  * Use context-menu options for git operations\n  * Complete drag-and-drop actions to merge, rebase, etc.\n+ Get autocomplete suggestions while writing Git commands in the terminal\n* Use the new `gk` program to interact with the GitKraken GUI from the terminal:\n  * `gk graph`- toggles the graph panel on/off\n  * Reposition the graph by adding `top` `right` `bottom` or `left` to `gk graph`\n  * Additional commands for the `gk` program are currently in development",
    "CliModal-BodyContent": "The GitKraken CLI enhances the terminal experience for all things Git by eliminating the need to memorize Git commands and by providing powerful visualizations of your repository when you need them.\n\nHere is what is possible inside Terminal tabs during the preview:\n\n* Open a GitKraken graph when changing into a directory being tracked by Git\n  *  Select commits and inspect file diffs\n  *  Use context-menu options for Git operations\n  *  Use drag-and-drop actions to merge, rebase, etc.\n+ Get autocomplete suggestions while writing Git commands\n* Use the new `gk` program to interact with a visualization panel within a Terminal tab. Current commands include:\n  *  `gk panel`  - toggle the panel on/off\n   *  `top` , `right` , `bottom` , or `left`  will pin the panel to that side of the terminal\n  *  `gk graph`  - hide/show the commit graph\n  *  `gk diff`  - open the diff view for the current working directory, or the diff between two commits\n  *  `gk history`  or `gk blame`  - open the history or blame view for a file\n  *  `gk help`  - view the list of commands available",
    "CliPreviewModal-FeedbackSubject": "GitKraken CLI Feedback",
    "CliRepoInfoToolbar-On": "on",
    "CliRepoInfoToolbar-Is": "is",
    "CliRepoInfoToolbar-RebaseInProgress": "rebase in progress: {0}",
    "CliRepoInfoToolbar-top": "Top",
    "CliRepoInfoToolbar-bottom": "Bottom",
    "CliRepoInfoToolbar-right": "Right",
    "CliRepoInfoToolbar-left": "Left",
    "CliRepoInfoToolbar-ToggleCommitDetails": "Show/Hide commit details ({0} + K)",
    "CliRepoInfoToolbar-PanelPosition": "Select panel position",
    "CliRepoInfoToolbar-HidePanel": "Hide panel",
    "CliRepoInfoToolbar-OpenPanel": "Show panel",
    "CLIPreferences": "Terminal",
    "CLIPreferences-GitPromptToggle": "Enable Git Prompt",
    "CLIPreferences-AutocompleteSuggestions": "Enable Autocomplete Suggestions",
    "CLIPreferences-GraphPanelPosition": "Default Graph Panel Position",
    "CLIPreferences-GraphPanelPosition-top": "Top",
    "CLIPreferences-GraphPanelPosition-bottom": "Bottom",
    "CLIPreferences-GraphPanelPosition-left": "Left",
    "CLIPreferences-GraphPanelPosition-right": "Right",
    "CLIPreferences-GraphPanelVisible": "Show Graph Panel by default",
    "CLIPreferences-FontSizeSetting": "Font Size",
    "CLIPreferences-FontFamily": "Font",
    "CLIPreferences-FontFamilyNotFound": "No fonts found",
    "CLIPreferences-HelpText-WillApplyOnNewTabs": "Changes to this setting will only apply to new terminal tabs",
    "CLIPreferences-TerminalTheme": "Terminal Theme",
    "CLIPreferences-TerminalTheme-DARK": "Dark",
    "CLIPreferences-TerminalTheme-LIGHT": "Light",
    "CLIPreferences-TerminalTheme-DEFAULT": "Default (same as GitKraken UI theme)",
    "AddRepositoriesToProject-Error": "Error Adding Repositories",
    "AddRepositoriesToProject-SuccessSingular": "Successfully added {0} repository to {1}",
    "AddRepositoriesToProject-SuccessPlural": "Successfully added {0} repositories to {1}",
    "AddRepositoryToProject-ErrorNoRemoteForLocal": "No remote for local repo at: {0}",
    "AddRepositoryToProject-Error": "Error adding repository to projects",
    "AddRepositoriesToProjectModal-Adding": "Adding...",
    "AddRepositoriesToProjectModal-Title": "Add Repositories",
    "Project-AddRepositories": "Add repositories",
    "Project-AddIcon": "Icon",
    "Project-ClearRepositories": "Clear current selection",
    "Project-CloneRepoButtonLabel": "Clone",
    "Project-CloneRepositories": "Clone repositories",
    "Project-CloneRepository": "Clone repository",
    "Project-CloneRepositoryPrompt": "Please select a location to clone {0}",
    "Project-CloneRepositoriesPrompt": "Please select a location to clone {0} repositories",
    "Project-Cloning": "Cloning... {0}%",
    "Project-IntegrationNotConnected": "Integration not connected",
    "Project-LocateInFilesystem": "Locate in filesystem",
    "Project-LocationChangeWarning": "Your current provider is {0}. If you want to add repositories from {1}, you will have to clear your current selected repositories.",
    "Project-Name": "Name",
    "Project-ProjectType": "Project Type",
    "Project-ProjectTypeLocal": "Personal",
    "Project-ProjectTypeShared": "Shared",
    "Project-ProjectOrgInParenthesis": "({0})",
    "Project-PullRequest": "Pull Request",
    "Project-SelectLocation": "Select location",
    "Project-SelectRepositoryLocation": "Select repository location",
    "Project-SuccessfullyMappedRepos": "Successfully located {0} repos in {1}",
    "Project-UnsuccessfullyMappedRepos": "Could not locate {0} repos in {1}",
    "Project-IconErrorTitle": "Failed to Upload Icon",
    "Project-SelectIcon": "Select Project Icon",
    "Project-ImageFileType": "Image File",
    "Cli-GkDescription": "Access GitKraken commands",
    "Cli-GkShowHelpDescription": "Show command help",
    "Cli-GkGraphDescription": "Show the commit graph",
    "Cli-GkPanelDescription": "Toggle the panel",
    "Cli-GkGraphTopDescription": "Set commit graph at the top",
    "Cli-GkGraphLeftDescription": "Set commit graph at the left",
    "Cli-GkGraphRightDescription": "Set commit graph at the right",
    "Cli-GkGraphBottomDescription": "Set commit graph at the bottom",
    "Cli-GkGraphShowDescription": "Shows the commit information from the graph panel columns",
    "Cli-GkGraphShowShaDescription": "Show commit SHA",
    "Cli-GkGraphShowAuthorDescription": "Show commit AUTHOR",
    "Cli-GkGraphShowDateDescription": "Show commit DATE/TIME",
    "Cli-GkGraphHideDescription": "Hides the commit information from the graph panel columns",
    "Cli-GkGraphHideShaDescription": "Hide commit SHA",
    "Cli-GkGraphHideAuthorDescription": "Hide commit AUTHOR",
    "Cli-GkGraphHideDateDescription": "Hide commit DATE/TIME",
    "Cli-GkBlameDescription": "Search for a file to view who did what",
    "Cli-GkHistoryDescription": "Search for a file to view its history/blame",
    "Cli-CdDescription": "Change directory",
    "Cli-ParentDirectory": "Parent directory",
    "Cli-CurrentDirectorySuggestion": "Current Directory",
    "Cli-GitDescription": "The content tracker",
    "Cli-GitVersionDescription": "Output version",
    "Cli-GitHelpDescription": "Output help",
    "Cli-GitCDescription": "Run as if git was started in <path> instead of the current working directory",
    "Cli-GitCNameDescription": "Record changes to the repository",
    "Cli-GitExecPathDescription": "Get or set GIT_EXEC_PATH for core Git programs",
    "Cli-GitHtmlPathDescription": "Print Git’s HTML documentation path",
    "Cli-GitManDescription": "Print the manpath for this version of Git",
    "Cli-GitInfoDescription": "Print the info path documenting this version of Git",
    "Cli-GitPageDescription": "Pipe output into `less` or custom $PAGER",
    "Cli-GitNoPagerDescription": "Do not pipe Git output into a pager",
    "Cli-GitNoReplaceDescription": "Do not use replacement refs to replace Git objects",
    "Cli-GitBareDescription": "Treat the repository as a bare repository",
    "Cli-GitDirPathDescription": "Set the path to the repository dir (`.git`)",
    "Cli-GitWorkTreeDescription": "Set working tree path",
    "Cli-GitNamespaceDescription": "Set the Git namespace",
    "Cli-GitCommitDescription": "Record changes to the repository",
    "Cli-GitCommitMessageDescription": "Use the given message as the commit message",
    "Cli-GitCommitAllDescription": "Stage all modified and deleted paths",
    "Cli-GitCommitAllMessageDescription": "Stage all and use given text as commit message",
    "Cli-GitCommitVerboseDescription": "Show unified diff of all file changes",
    "Cli-GitConfigDescription": "Get and set repository or global options",
    "Cli-GitConfigLocalDescription": "Default: write to the repository .git/config file",
    "Cli-GitConfigLocalUserNameDescription": "Set config for username",
    "Cli-GitConfigLocalUserEmailDescription": "Set config for email",
    "Cli-GitConfigGlobalDescription": "For writing options: write to global ~/.gitconfig file rather than the repository .git/config",
    "Cli-GitConfigGlobalUserNameDescription": "Set config for username",
    "Cli-GitConfigGlobalUserEmailDescription": "Set config for email",
    "Cli-GitRebaseDescription": "Reapply commits on top of another base tip",
    "Cli-GitRebaseOntoDescription": "Starting point at which to create the new commits. If not specified, the starting point is <upstream>",
    "Cli-GitRebaseKeepBaseDescription": "Set the starting point at which to create the new commits to the merge base of <upstream> <branch>.",
    "Cli-GitRebaseContinueDescription": "Continue the rebasing after conflict resolution",
    "Cli-GitRebaseAbortDescription": "Abort the rebase operation and reset HEAD to the original branch",
    "Cli-GitRebaseQuitDescription": "Abort the rebase operation but HEAD is not reset back to the original branch",
    "Cli-GitRebaseApplyDescription": "Use applying strategies to rebas",
    "Cli-GitRebaseEmptyDescription": "How to handle commits that are not empty to start, but become empty after rebasing",
    "Cli-GitRebaseEmptyDropDescription": "commits that become empty are dropped",
    "Cli-GitRebaseEmptyKeepDescription": "commits that become empty are kept",
    "Cli-GitRebaseEmptyAskDescription": "Allows you to choose whether to drop empty commits, edit files more, or just commit the empty changes.",
    "Cli-GitRebaseNoKeepEmptyDescription": "Do not keep commits that start empty before the rebase",
    "Cli-GitRebaseKeepEmptyDescription": "Keep commits that start empty before the rebase",
    "Cli-GitRebaseReapplyCherryDescription": "Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them.",
    "Cli-GitRebaseNoReapplyCherryDescription": "(Default) all clean cherry-picks commits will be automatically dropped.",
    "Cli-GitRebaseAllowEmptyMessageDescription": "Allow commits with empty messages to be rebased",
    "Cli-GitRebaseSkipDescription": "Skips a commit",
    "Cli-GitRebaseEditDescription": "Edit the todo list during an interactive rebase.",
    "Cli-GitRebaseShowCurrentPatchDescription": "Show the current patch in an interactive rebase or when rebase is stopped because of conflicts",
    "Cli-GitRebaseMergeDescription": "(Default) Allows rebase to be aware of renames on the upstream side. This is the default.",
    "Cli-GitRebaseStrategyDescription": "Use the given merge strategy",
    "Cli-GitRebaseXStrategyDescription": "Pass the <strategy-option> through to the merge strategy.",
    "Cli-GitRebaseGpgSignDescription": "GPG-sign commits",
    "Cli-GitRebaseNoGpgSignDescription": "Don't GPGP-sign commits",
    "Cli-GitRebaseQuietDescription": "Be quiet. Implies --no-stat.",
    "Cli-GitRebaseVerboseDescription": "Be verbose. Implies --stat.",
    "Cli-GitRebaseStatDescription": "Show a diffstat of what changed upstream since the last rebase",
    "Cli-GitRebaseNoStatDescription": "Do not show a diffstat as part of the rebase process.",
    "Cli-GitRebaseNoVerifyDescription": "This option bypasses the pre-rebase hook",
    "Cli-GitRebaseVerifyDescription": "(Default) Allows the pre-rebase hook to run",
    "Cli-GitRebaseCOptionDescription": "Ensure at least <n> lines of surrounding context match before and after each change. ",
    "Cli-GitRebaseNoForceDescription": "Do not replay rebased commits",
    "Cli-GitRebaseForceDescription": "Individually replay all rebased commits instead of fast-forwarding over the unchanged ones",
    "Cli-GitRebaseForkPointDescription": "When is active, fork_point will be used instead of <upstream> to calculate the set of commits to rebase",
    "Cli-GitRebaseNoForkPointRebaseDescription": "If <upstream> is given on the command line, then the default is --no-fork-point",
    "Cli-GitRebaseIgnoreWhitespaceDescription": "Ignore whitespace differences when trying to reconcile differences",
    "Cli-GitRebaseWhitespaceDescription": "This flag is passed to the git apply program",
    "Cli-GitRebaseCommitterDateDescription": "Use the author date of the commit being rebased as the committer date",
    "Cli-GitRebaseIgnoreDateDescription": "Use the current time as the author date of the rebased commit",
    "Cli-GitRebaseSignoffDescription": "Add a Signed-off-by trailer to all the rebased commits.",
    "Cli-GitRebaseInteractiveDescription": "Make a list of the commits which are about to be rebased and let the user edit that list",
    "Cli-GitRebaseMergesDescription": "Rebase will try to preserve the branching structure within the commits that are to be rebased, by recreating the merge commits.",
    "Cli-GitRebasePreserveMergesDescription": "Recreate merge commits instead of flattening the history by replaying commits a merge commit introduces",
    "Cli-GitRebaseExecDescription": "Will execute a command after each commit in your interactive rebase.",
    "Cli-GitRebaseRootDescription": "Rebase all commits reachable from <branch>, instead of limiting them with an <upstream>",
    "Cli-GitRebaseAutoSquashDescription": "modify the todo list of rebase -i, so that the commit marked for squashing comes right after the commit to be modified and change its action",
    "Cli-GitRebaseNoAutoSquashDescription": "Do not look for commit messages in the to do list of rebase -i",
    "Cli-GitRebaseAutoStashDescription": "Create a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitRebaseNoAutoStashDescription": "Do not create a temporary stash entry",
    "Cli-GitRebaseRescheduledDescription": "Automatically reschedule exec commands that failed",
    "Cli-GitRebaseNoRescheduledDescription": "Disable Reschedule",
    "Cli-GitAddDescription": "Add file contents to the index",
    "Cli-GitAddAllDescription": "Add, modify, and remove index entries to match the working tree",
    "Cli-GitAddIgnoredDescription": "Allow adding otherwise ignored files",
    "Cli-GitAddInteractiveDescription": "Add modified contents in the working tree interactively to the index",
    "Cli-GitAddDryRunDescription": "Don't actually add the files(s), just show if they exist and/or will be ignored",
    "Cli-GitAddPatchDescription": "Interactively choose hunks of patch between the index and the work tree and add them to the index",
    "Cli-GitStatusDescription": "Show the working tree status",
    "Cli-GitStatusVerboseDescription": "Be verbose",
    "Cli-GitStatusBranchDescription": "Show branch information",
    "Cli-GitStatusStashDescription": "Show stash information",
    "Cli-GitStatusAheadDescription": "Compute full ahead/behind values",
    "Cli-GitStatusLongDescription": "Show status in long format (default)",
    "Cli-GitStatusNullDescription": "Terminate entries with NUL",
    "Cli-GitStatusUntrackedDescription": "Show untracked files",
    "Cli-GitStatusUntrackedAllDescription": "(Default)",
    "Cli-GitStatusignoredDescription": "Show ignored files",
    "Cli-GitStatusignoredTraditionalDescription": "(Default)",
    "Cli-GitStatusNoRenamesDescription": "Do not detect renames",
    "Cli-GitPushDescription": "Update remote refs",
    "Cli-GitPushTagsDescription": "push tags (can't be used with --all or --mirror)",
    "Cli-GitPushAllDescription": "Push all branches (i.e. refs under refs/heads/); cannot be used with other <refspec>.",
    "Cli-GitPushPruneDescription": "Remove remote branches that don’t have a local counterpart. For example a remote branch tmp will be removed if a local branch with the same name doesn’t exist any more. This also respects refspecs, e.g. git push --prune remote refs/heads/*:refs/tmp/* would make sure that remote refs/tmp/foo will be removed if refs/heads/foo doesn’t exist.",
    "Cli-GitPushMirrorDescription": "Instead of naming each ref to push, specifies that all refs under refs/ (which includes but is not limited to refs/heads/, refs/remotes/, and refs/tags/) be mirrored to the remote repository. Newly created local refs will be pushed to the remote end, locally updated refs will be force updated on the remote end, and deleted refs will be removed from the remote end. This is the default if the configuration option remote.<remote>.mirror is set.",
    "Cli-GitPushNDescription": "Do everything except actually send the updates.",
    "Cli-GitPushDryRunDescription": "Do everything except actually send the updates.",
    "Cli-GitPushPorcelainDescription": "Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic s of the refs will be given.",
    "Cli-GitPushDeleteDescription": "All listed refs are deleted from the remote repository. This is the same as prefixing all refs with a colon.",
    "Cli-GitPushFollowTagsDescription": "Push all the refs that would be pushed without this option, and also push annotated tags in refs/tags that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable push.followTags. For more information, see push.followTags in git-config[1].",
    "Cli-GitPushSignedDescription": "GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged. The push will fail if the server does not support signed pushes. If set to if-asked, sign if and only if the server supports signed pushes. The push will also fail if the actual call to gpg --sign fails.",
    "Cli-GitPushSignedTrueDescription": "GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged. The push will fail if the server does not support signed pushes. The push will also fail if the actual call to gpg --sign fails.",
    "Cli-GitPushSignedFalseDescription": "No GPG-sign the push request to update refs on the receiving side.",
    "Cli-GitPushSignedIfAskedDescription": "Sign if and only if the server supports signed pushes.",
    "Cli-GitPushNotSignedDescription": "No GPG-sign the push request to update refs on the receiving side.",
    "Cli-GitPushAtomicDescription": "Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.",
    "Cli-GitPushNotAtomicDescription": "Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.",
    "Cli-GitPushOptionDescription": "Transmit the given option to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character.",
    "Cli-GitPushOptionToSendDescription": "<option> to transmit to the server.",
    "Cli-GitPushOption2Description": "Transmit the given <option> to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character. When multiple --push-option=<option> are given, they are all sent to the other side in the order listed on the command line. When no --push-option=<option> is given from the command line, the values of configuration variable push.pushOption are used instead.",
    "Cli-GitPushReceivePackDescription": "Path to the git-receive-pack program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.",
    "Cli-GitPushExecDescription": "Path to the git-receive-pack program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.",
    "Cli-GitPushForceLeaseDescription": "Overrides restriction to update a remote ref that is not an ancestor of the local ref",
    "Cli-GitPushNotForceLeaseDescription": "Not overrides restriction to update a remote ref that is not an ancestor of the local ref",
    "Cli-GitPushForceDescription": "Force operations without checking restrictions",
    "Cli-GitPushForceIfIncludesDescription": "Force an update only if the tip of the remote-tracking ref has been integrated locally.",
    "Cli-GitPushNotForceIfIncludesDescription": "Force an update only if the tip of the remote-tracking ref has been integrated locally.",
    "Cli-GitPushRepoDescription": "This option is equivalent to the <repository> argument. If both are specified, the command-line argument takes precedence.",
    "Cli-GitPushSetUpstreamDescription": "For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less git-pull[1] and other commands. For more information, see branch.<name>.merge in git-config[1].",
    "Cli-GitPushThinDescription": "This options is passed to git-send-pack. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common. This is the default",
    "Cli-GitPushNotThinDescription": "This options is passed to git-send-pack. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common.",
    "Cli-GitPushQuietDescription": "Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream.",
    "Cli-GitPushVerboseDescription": "Run verbosely.",
    "Cli-GitPushProgressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.",
    "Cli-GitPushSubmodulesDescription": "May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch.",
    "Cli-GitPushSubmodulesCheckDescription": "Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule.",
    "Cli-GitPushSubmodulesDemandDescription": "All submodules that changed in the revisions to be pushed will be pushed. If it's not able to push all necessary revisions it will also be aborted and exit with non-zero status.",
    "Cli-GitPushSubmodulesOnlyDescription": "All submodules will be recursively pushed while the superproject is left unpushed.",
    "Cli-GitPushSubmodulesNoDescription": "Like using --no-recurse-submodules can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required.",
    "Cli-GitPushNotSubmodulesDescription": "May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch. If check is used Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule. If any commits are missing the push will be aborted and exit with non-zero status. If on-demand is used all submodules that changed in the revisions to be pushed will be pushed. If on-demand was not able to push all necessary revisions it will also be aborted and exit with non-zero status. If only is used all submodules will be recursively pushed while the superproject is left unpushed. A value of no or using --no-recurse-submodules can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required.",
    "Cli-GitPushVerifyDescription": "This options gives to the pre-push hook a chance to prevent the push. This is the default.",
    "Cli-GitPushNotVerifyDescription": "The pre-push hook is bypassed completely.",
    "Cli-GitPullDescription": "Fetch from and integrate with another repository or a local branch",
    "Cli-GitPullRebaseDescription": "Fetch the remote’s copy of current branch and rebases it into the local copy",
    "Cli-GitPullNoRebaseDescription": "Override earlier --rebase",
    "Cli-GitPullCommitDescription": "Perform the merge and commit the result. This option can be used to override --no-commit",
    "Cli-GitPullNoCommitDescription": "Perform the merge and stop just before creating a merge commit, to give the user a chance to inspect and further tweak the merge result before committing",
    "Cli-GitPullEditDescription": "Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message, so that the user can explain and justify the merge",
    "Cli-GitPullNoEditDescription": "The --no-edit option can be used to accept the auto-generated message (this is generally discouraged). The --edit (or -e) option is still useful if you are giving a draft message with the -m option from the command line and want to edit it in the editor",
    "Cli-GitPullCleanupDescription": "This option determines how the merge message will be cleaned up before committing. See git-commit[1] for more details. In addition, if the <mode> is given a value of scissors, scissors will be appended to MERGE_MSG before being passed on to the commit machinery in the case of a merge conflict",
    "Cli-GitPullFfDescription": "When possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit). When not possible (when the merged-in history is not a descendant of the current history), create a merge commit",
    "Cli-GitPullNoFfDescription": "Create a merge commit in all cases, even when the merge could instead be resolved as a fast-forward",
    "Cli-GitPullFfOnlyDescription": "Resolve the merge as a fast-forward when possible. When not possible, refuse to merge and exit with a non-zero status",
    "Cli-GitPullGPGSignDescription": "GPG-sign the resulting merge commit. The keyid argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space",
    "Cli-GitPullNoGPGSignDescription": "Is useful to countermand both commit.gpgSign configuration variable, and earlier --gpg-sign",
    "Cli-GitPullLogDescription": "In addition to branch names, populate the log message with one-line descriptions from at most <n> actual commits that are being merged",
    "Cli-GitPullNoLogDescription": "Do not list one-line descriptions from the actual commits being merged",
    "Cli-GitPullSignOffDescription": "Add a Signed-off-by trailer by the committer at the end of the commit log message. The meaning of a signoff depends on the project to which you’re committing. For example, it may certify that the committer has the rights to submit the work under the project’s license or agrees to some contributor representation, such as a Developer Certificate of Origin. (See http://developercertificate.org for the one used by the Linux kernel and Git projects.) Consult the documentation or leadership of the project to which you’re contributing to understand how the signoffs are used in that project",
    "Cli-GitPullNoSignOffDescription": "Can be used to countermand an earlier --signoff option on the command line",
    "Cli-GitPullStatDescription": "Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat",
    "Cli-GitPullNoStatDescription": "Do not show a diffstat at the end of the merge",
    "Cli-GitPullSquashDescription": "With --squash, --commit is not allowed, and will fail. Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the HEAD, or record $GIT_DIR/MERGE_HEAD (to cause the next git commit command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus)",
    "Cli-GitPullNoSquashDescription": "perform the merge and commit the result. This option can be used to override --squash",
    "Cli-GitPullNoVerifyDescription": "This option bypasses the pre-merge and commit-msg hooks",
    "Cli-GitPullStrategyDescription": "Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried. If there is no -s option, a built-in list of strategies is used instead (git merge-recursive when merging a single head, git merge-octopus otherwise)",
    "Cli-GitPullStrategyOptionDescription": "Pass merge strategy specific option through to the merge strategy",
    "Cli-GitPullVerifySignaturesDescription": "Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key. If the tip commit of the side branch is not signed with a valid key, the merge is aborted",
    "Cli-GitPullNoVerifySignaturesDescription": "Do not verify that the tip commit of the side branch being merged is signed with a valid key",
    "Cli-GitPullSummaryDescription": "Synonym to --stat ; this is deprecated and will be removed in the future",
    "Cli-GitPullNoSummaryDescription": "Synonym to --no-stat ; this is deprecated and will be removed in the future",
    "Cli-GitPullQuietDescription": "Operate quietly. Implies --no-progress",
    "Cli-GitPullVerboseDescription": "Be verbose",
    "Cli-GitPullAutostashDescription": "Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run the operation on a dirty worktree. However, use with care: the final stash application after a successful merge might result in non-trivial conflicts",
    "Cli-GitPullNoAutostashDescription": "Do not automatically create a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitPullAllowUnrelatedHistoriesDescription": "By default, git merge command refuses to merge histories that do not share a common ancestor. This option can be used to override this safety when merging histories of two projects that started their lives independently. As that is a very rare occasion, no configuration variable to enable this by default exists and will not be added",
    "Cli-GitPullAllDescription": "Fetch all remotes",
    "Cli-GitPullAppendDescription": "Append ref names and object names of fetched refs to the existing contents of .git/FETCH_HEAD",
    "Cli-GitPullAtomicDescription": "Use an atomic transaction to update local refs. Either all refs are updated, or on error, no refs are updated",
    "Cli-GitPullDepthDescription": "Limit fetching to the specified number of commits from the tip of each remote branch history",
    "Cli-GitPullDeepenDescription": "Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history",
    "Cli-GitPullShallowSinceDescription": "Deepen or shorten the history of a shallow repository to include all reachable commits after <date>",
    "Cli-GitPullShallowExcludeDescription": "Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag. This option can be specified multiple times",
    "Cli-GitPullUnshallowDescription": "If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository",
    "Cli-GitPullUpdateShallowDescription": "By default when fetching from a shallow repository, git fetch refuses refs that require updating .git/shallow",
    "Cli-GitPullNegotiationTipDescription": "By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile",
    "Cli-GitPullDryRunDescription": "Show what would be done, without making any changes",
    "Cli-GitPullForceDescription": "This option overrides that check",
    "Cli-GitPullKeepDescription": "Keep downloaded pack",
    "Cli-GitPullPruneDescription": "Before fetching, remove any remote-tracking references that no longer exist on the remote",
    "Cli-GitPullPruneTagsDescription": "Before fetching, remove any local tags that no longer exist on the remote if --prune is enabled",
    "Cli-GitPullNoTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitPullRefMapDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitPullTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitPullRecurseSubmodulesDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitPullNoRecurseSubmodulesDescription": "Disable recursive fetching of submodules (this has the same effect as using the --recurse-submodules=no option)",
    "Cli-GitPullJobsDescription": "Number of parallel children to be used for all forms of fetching",
    "Cli-GitPullSetUpstreamDescription": "If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less git-pull[1] and other commands",
    "Cli-GitPullUploadPackDescription": "When given, and the repository to fetch from is handled by git fetch-pack, --exec=<upload-pack> is passed to the command to specify non-default path for the command run on the other end",
    "Cli-GitPullProgressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified",
    "Cli-GitPullServerOptionDescription": "Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character",
    "Cli-GitPullShowForcedUpdatesDescription": "By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs",
    "Cli-GitPullNoShowForcedUpdatesDescription": "By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons",
    "Cli-GitPullIpV4Description": "Use IPv4 addresses only, ignoring IPv6 addresses",
    "Cli-GitPullIpV6Description": "Use IPv6 addresses only, ignoring IPv4 addresses",
    "Cli-GitDiffDescription": "Show changes between commits, commit and working tree, etc",
    "Cli-GitDiffStagedDescription": "Show difference between the files in the staging area and the latest version",
    "Cli-GitResetDescription": "Reset current HEAD to the specified state",
    "Cli-GitResetKeepDescription": "Safe: files which are different between the current HEAD and the given commit. Will abort if there are uncommitted changes",
    "Cli-GitResetSoftDescription": "remove the last commit from the current branch, but the file changes will stay in your working tree",
    "Cli-GitResethardDescription": "⚠️WARNING: you will lose all uncommitted changes in addition to the changes introduced in the last commit",
    "Cli-GitResethardToHeadDescription": "Reset back to any number of commits",
    "Cli-GitResetMixedDescription": "keep the changes in your working tree but not on the index",
    "Cli-GitResetMixedToHeadDescription": "Reset back any number of commits",
    "Cli-GitResetMergeDescription": "Resets the index and updates the files in the working tree that are different between 'commit' and HEAD",
    "Cli-GitLogDescription": "Show commit logs",
    "Cli-GitLogFollowDescription": "Show history of given file",
    "Cli-GitLogQuietDescription": "Suppress diff output",
    "Cli-GitLogSourceDescription": "Show source",
    "Cli-GitLogOnelineDescription": "Show each commit as a single line ",
    "Cli-GitRemoteDescription": "Manage remote repository",
    "Cli-GitRemoteAddDescription": "Add remote repo ",
    "Cli-GitRemoteSetHeadDescription": "Sets or deletes the default branch",
    "Cli-GitRemoteRmDescription": "Removes given remote [name]",
    "Cli-GitRemoteGetUrlDescription": "Retrieves the URLs for a remote",
    "Cli-GitRemoteSetUrlDescription": "Changes the URLs for the remote",
    "Cli-GitRemoteShowDescription": "Gives some information about the remote [name]",
    "Cli-GitRemotePruneDescription": "Equivalent to git fetch --prune [name], except that no new references will be fetched",
    "Cli-GitRemoteFetchDescription": "Fetch after remote info is added",
    "Cli-GitRemoteTagsDescription": "Import tags from remote",
    "Cli-GitFetchDescription": "Download objects and refs from another repository",
    "Cli-GitFetchAllDescription": "Fetch all remotes",
    "Cli-GitFetchAppendDescription": "Append ref names and object names of fetched refs to the existing contents of .git/FETCH_HEAD",
    "Cli-GitFetchAtomicDescription": "Use an atomic transaction to update local refs. Either all refs are updated, or on error, no refs are updated.",
    "Cli-GitFetchDepthDescription": "Limit fetching to the specified number of commits from the tip of each remote branch history",
    "Cli-GitFetchDeepenDescription": "Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history",
    "Cli-GitFetcShallowSinceDescription": "Deepen or shorten the history of a shallow repository to include all reachable commits after <date>",
    "Cli-GitFetchShallowExcludeDescription": "Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag. This option can be specified multiple times",
    "Cli-GitFetchUnshallowDescription": "If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository",
    "Cli-GitFetchUpdateShallowDescription": "By default when fetching from a shallow repository, git fetch refuses refs that require updating .git/shallow",
    "Cli-GitFetchNegotiationDescription": "By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile",
    "Cli-GitFetchDryRunDescription": "Show what would be done, without making any changes.",
    "Cli-GitFetchWriteHeadDescription": "Write the list of remote refs fetched in the FETCH_HEAD file directly under $GIT_DIR. This is the default",
    "Cli-GitFetchNotWriteHeadDescription": "Tells Git not to write the file",
    "Cli-GitFetcForceDescription": "This option overrides that check",
    "Cli-GitFetchKeepDescription": "Keep downloaded pack.",
    "Cli-GitFetchMultipleDescription": "Allow several <repository> and <group> arguments to be specified. No <refspec>s may be specified.",
    "Cli-GitFetchMaintenanceDescription": "Run git maintenance run --auto at the end to perform automatic repository maintenance if",
    "Cli-GitFetchNoMaintenanceDescription": "Don't run git maintenance run --auto at the end to perform automatic repository maintenance",
    "Cli-GitFetchWriteGraphDescription": "Write a commit-graph after fetching. This overrides the config setting fetch.writeCommitGraph",
    "Cli-GitFetchNotWriteGraphDescription": "Don't write a commit-graph after fetching. This overrides the config setting fetch.writeCommitGraph",
    "Cli-GitFetchPruneDescription": "Before fetching, remove any remote-tracking references that no longer exist on the remote",
    "Cli-GitFetchPruneTagsDescription": "Before fetching, remove any local tags that no longer exist on the remote if --prune is enabled",
    "Cli-GitFetchNotTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitFetchRefmapDescription": "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of remote.*.fetch configuration variables for the remote repository",
    "Cli-GitFetchTagsDescription": "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following",
    "Cli-GitFetchJobsDescription": "Number of parallel children to be used for all forms of fetching.",
    "Cli-GitFetchNoSubmodulesDescription": "Disable recursive fetching of submodules (this has the same effect as using the --recurse-submodules=no option).",
    "Cli-GitFetchSetUpstreamDescription": "If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less git-pull1 and other commands.",
    "Cli-GitFetchSubmodulesDescription": "Prepend <path> to paths printed in informative messages such as 'Fetching submodule foo'. This option is used internally when recursing over submodules.",
    "Cli-GitFetchUpdateHeadDescription": "By default git fetch refuses to update the head which corresponds to the current branch. This flag disables the check. This is purely for the internal use for git pull to communicate with git fetch, and unless you are implementing your own Porcelain you are not supposed to use it.",
    "Cli-GitFetchUploadPackDescription": "When given, and the repository to fetch from is handled by git fetch-pack, --exec=<upload-pack> is passed to the command to specify non-default path for the command run on the other end.",
    "Cli-GitFetchQuietDescription": "Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream.",
    "Cli-GitFetchVerboseDescription": "Be verbose.",
    "Cli-GitFetchprogressDescription": "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified.",
    "Cli-GitFetchOptionDescription": "Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. ",
    "Cli-GitFetchShowForcedDescription": "By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs",
    "Cli-GitFetchNotShowForcedDescription": "By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons.",
    "Cli-GitIPV4Description": "Use IPv4 addresses only, ignoring IPv6 addresses.",
    "Cli-GitIPV6Description": "Use IPv6 addresses only, ignoring IPv4 addresses.",
    "Cli-GitFetchStdinDescription": "Use binary search to find the commit that introduced a bug",
    "Cli-GitStashDescription": "Stash the changes in a dirty working directory away",
    "Cli-GitStashPushDescription": "Save your local modifications to a new stash entry and roll them back to HEAD.",
    "Cli-GitStashPushPatchDescription": "Interactively select hunks from the diff between HEAD and the working tree to be stashed.",
    "Cli-GitStashPushKeepIndexDescription": "All changed already added to the index are left intact.",
    "Cli-GitStashPushIncludeDescription": "All untracked files are also stashed and then cleaned up.",
    "Cli-GitStashPushAllDescription": "All ignored and untracked files are also stashed.",
    "Cli-GitStashPushMessageDescription": "Use the given <msg> as the stash message.",
    "Cli-GitStashPathspecFromFileDescription": "Pathspec is passed in <file> instead of commandline args",
    "Cli-GitStashHyphenDescription": "Separates pathsec from options for disambiguation purposes.",
    "Cli-GitStashShowDescription": "Show the changes recorded in the stash entry as a diff.",
    "Cli-GitStashSaveDescription": "Stash the changes in a dirty working directory away",
    "Cli-GitStashSavePatchDescription": "Interactively select hunks from the diff between HEAD and the working tree to be stashed.",
    "Cli-GitStashSaveIndexDescription": "All changed already added to the index are left intact.",
    "Cli-GitStashSaveIncludeUntrackedDescription": "All untracked files are also stashed and then cleaned up.",
    "Cli-GitStashSaveAllDescription": "All ignored and untracked files are also stashed.",
    "Cli-GitQuietOptionDescription": "Quiet, suppress feedback messages from command line.",
    "Cli-GitStashPopDescription": "Restores the most recently stashed files",
    "Cli-GitStashPopIndexDescription": "Tries to reinstate not only the working tree's changes, but also the index's ones.",
    "Cli-GitStashListDescription": "Lists all stashed changesets",
    "Cli-GitStashDropDescription": "Discards the most recently stashed changeset",
    "Cli-GitStashClearDescription": "Remove all the stash entries.",
    "Cli-GitStashApplyDescription": "Like pop, but do not remove the state from the stash list.",
    "Cli-GitStashApplyIndexDescription": "Tries to reinstate not only the working tree's changes, but also the index's ones.",
    "Cli-GitStashBranchDescription": "Creates and checks out a new branch named ",
    "Cli-GitStashCreateDescription": "Creates a stash with the message <msg>",
    "Cli-GitStashStoreDescription": "Store a given stash in the stash ref., updating the staft reflog.",
    "Cli-GitStashStoreMessageDescription": "Use the given <msg> as the stash message.",
    "Cli-GitReflogDescription": "Show history of events with hashes",
    "Cli-GitCloneDescription": "Clone a repository into a new directory",
    "Cli-GitInitDescription": "Create an empty Git repository or reinitialize an existing one",
    "Cli-GitMoveDescription": "Move or rename a file, a directory, or a symlink",
    "Cli-GitRemoveDescription": "Remove files from the working tree and from the index",
    "Cli-GitRemoveHyphenDescription": "used to separate command-line options from the list of files",
    "Cli-GitRemoveCachedDescription": "only remove from the index",
    "Cli-GitRemoveForceDescription": "override the up-to-date check",
    "Cli-GitRemoveRecursiveDescription": "allow recursive removal",
    "Cli-GitBisectDescription": "Use binary search to find the commit that introduced a bug",
    "Cli-GitGrepDescription": "Print lines matching a pattern",
    "Cli-GitShowCommandDescription": "Show various types of objects",
    "Cli-GitBranchDescription": "List, create, or delete branches",
    "Cli-GitBranchAllDescription": "list both remote-tracking and local branches",
    "Cli-GitBranchDeleteDescription": "delete fully merged branch",
    "Cli-GitBranchDeleteDDescription": "delete branch (even if not merged)",
    "Cli-GitBranchRenameDescription": "move/rename current branch and its reflog",
    "Cli-GitBranchMoveDescription": "move/rename current branch, even if target exists",
    "Cli-GitBranchcDescription": "copy a branch and its reflog",
    "Cli-GitBranchCDescription": "copy a branch, even if target exists",
    "Cli-GitBranchListDescription": "list branch names",
    "Cli-GitBranchCreateReflogDescription": "create the branch's reflog",
    "Cli-GitBranchEditDescription": "edit the description for the branch",
    "Cli-GitBranchForceDescription": "force creation, move/rename, deletion",
    "Cli-GitBranchMergedDescription": "print only branches that are merged",
    "Cli-GitBranchNotMergedDescription": "print only branches that are not merged",
    "Cli-GitBranchColumDescription": "list branches in columns [=<style>]",
    "Cli-GitBranchSortDescription": "field name to sort on",
    "Cli-GitBranchPointsAtDescription": "print only branches of the object",
    "Cli-GitBranchIgnoreDescription": "sorting and filtering are case insensitive",
    "Cli-GitBranchFormatDescription": "format to use for the output",
    "Cli-GitCheckoutDescription": "Switch branches or restore working tree files",
    "Cli-GitCheckoutbDescription": "create and checkout a new branch",
    "Cli-GitCheckoutBDescription": "create/reset and checkout a branch",
    "Cli-GitCheckoutlDescription": "create reflog for new branch",
    "Cli-GitCheckoutDetachDescription": "detach HEAD at named commit",
    "Cli-GitCheckoutTrackDescription": "set upstream info for new branch",
    "Cli-GitCheckoutOrphanDescription": "new unparented branch",
    "Cli-GitCheckoutOursDescription": "checkout our version for unmerged files",
    "Cli-GitCheckoutTheirsDescription": "checkout their version for unmerged files",
    "Cli-GitCheckoutForceDescription": "force checkout (throw away local modifications)",
    "Cli-GitCheckoutMergeDescription": "perform a 3-way merge with the new branch",
    "Cli-GitCheckoutOverwriteIgnoredDescription": "update ignored files (default)",
    "Cli-GitCheckoutConflictDescription": "conflict style (merge or diff3)",
    "Cli-GitCheckoutPatchDescription": "select hunks interactively",
    "Cli-GitCheckoutToBranchDescription": "Branch to switch to",
    "Cli-GitMergeDescription": "Join two or more development histories together",
    "Cli-GitMergeCommitDescription": "Perform the merge and commit the result",
    "Cli-GitMergeNoCommitDescription": "Perform the merge and stop just before creating a merge commit",
    "Cli-GitMergeEditDescription": "Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message",
    "Cli-GitMergeNoEditDescription": "Used to accept the auto-generated message",
    "Cli-GitMergeCleanupDescription": "This option determines how the merge message will be cleaned up before committing",
    "Cli-GitMergeBranchDescription": "Branch to merge with",
    "Cli-GitMergeMessageDescription": "Set the commit message to be used for the merge commit (in case one is created)",
    "Cli-GitMergeFastForwardDescription": "Fast-forward (Default): when possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit). When not possible, create a merge commit",
    "Cli-GitMergeNoFastForwardDescription": "No-fast-forward: create a merge commit in all cases, even when the merge could instead be resolved as a fast-forward",
    "Cli-GitMergeFastForwardOnlyDescription": "Fast-forward-only: Resolve the merge as a fast-forward when possible. When not possible, refuse to merge and exit with a non-zero status",
    "Cli-GitMergeAbortDescription": "Abort the current conflict resolution process, and try to reconstruct the pre-merge state. If an autostash entry is present, apply it to the worktree",
    "Cli-GitMergeQuitDescription": "Forget about the current merge in progress. Leave the index and the working tree as-is. If MERGE_AUTOSTASH is present, the stash entry will be saved to the stash list",
    "Cli-GitMergeContinueDescription": "After a git merge stops due to conflicts you can conclude the merge by running git merge --continue after resolving conflicts",
    "Cli-GitMergeGpgSignDescription": "GPG-sign the resulting merge commit, 'Keyid' is optional",
    "Cli-GitMergeGpgSignKeyDescription": "GPG-sign the resulting merge commit, '=Keyid' is optional",
    "Cli-GitMergeNoGpgSignDescription": "Do not GPG-sign the resulting merge commit",
    "Cli-GitMergeLogDescription": "In addition to branch names, populate the log message with one-line descriptions from at most <n> actual commits that are being merged",
    "Cli-GitMergeNoLogDescription": "Do not list one-line descriptions from the actual commits being merged",
    "Cli-GitMergeSignOffDescription": "Add a Signed-off-by trailer by the committer at the end of the commit log message",
    "Cli-GitMergeNoSignOffDescription": "Can be used to countermand an earlier --signoff option on the command line",
    "Cli-GitMergeStatDescription": "Show a diffstat at the end of the merge",
    "Cli-GitMergeNoStat": "Do not show a diffstat at the end of the merge",
    "Cli-GitMergeVerifySignaturesDescription": "Verify that the tip commit of the side branch being merged is signed with a valid key, if not the merge is aborted",
    "Cli-GitMergeNoVerifySignaturesDescription": "Do not verify signature if it was previously configured to do so",
    "Cli-GitMergeVerboseDescription": "Be verbose",
    "Cli-GitMergeProgressDescription": "Turn progress on explicitly",
    "Cli-GitMergeNoProgressDescription": "Turn progress off explicitly",
    "Cli-GitMergeAutostashDescription": "Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends",
    "Cli-GitMergeNoAutostashDescription": "Do not create a temporary stash entry",
    "Cli-GitMergeAllowUnrelatedHistoriesDescription": "Allow to merge histories that do not share a common ancestor",
    "Cli-GitMergeFileDescription": "Merge commit message to be use read by file given",
    "Cli-GitMergeReReReDescription": "Allow the rerere mechanism to update the index with the result of auto-conflict resolution if possible",
    "Cli-GitMergeNoReReReDescription": "Do not let the rerere mechanism to update the index",
    "Cli-GitMergeOverWriteIgnoreDescription": "Silently overwrite ignored files from the merge result. default behavior",
    "Cli-GitMergeNoOverWriteIgnoreDescription": "Do not overwrite ignored files",
    "Cli-GitTagDescription": "Create, list, delete or verify a tag object signed with GPG",
    "Cli-GitTagListDescription": "List tag names",
    "Cli-GitTagNDescription": "Print <n> lines of each tag message",
    "Cli-GitTagDeleteDescription": "Delete tags",
    "Cli-GitTagVerifyDescription": "Verify tags",
    "Cli-GitTagAnnotateDescription": "Annotated tag, needs a message",
    "Cli-GitTagMessageDescription": "Tag message",
    "Cli-GitTagNameDescription": "Select a tag",
    "Cli-GitGcDescription": "Cleanup unnecessary files and optimize the local repository",
    "Cli-GitGcAggressiveDescription": "More aggressively optimize",
    "Cli-GitGcAutoDescription": "Check whether housekeeping is required",
    "Cli-GitGcPruneDescription": "Prune loose objects older than given date. --prune is on by default",
    "Cli-GitGcPruneNowDescription": "Prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently",
    "Cli-GitGcNoPruneDescription": "Do not prune any loose objects.",
    "Cli-GitGcQuietDescription": "Suppress progress reporting",
    "Cli-GitGcForceDescription": "Force git gc to run even if there may be another git gc instance running on this repository.",
    "Cli-GitGcKeepLargestPackDescription": "Repack all other packs except the largest pack",
    "ProjectRepositories-Actions": "Actions",
    "ProjectRepositories-AddRepositories": "Add Repositories",
    "ProjectRepositories-CheckedOut": "Checked Out",
    "ProjectRepositories-FindARepository": "Find a repository...",
    "ProjectRepositories-LastUpdate": "Last Update",
    "ProjectRepositories-CloneRepositories": "Clone repositories",
    "ProjectRepositories-CloneRepository": "Clone repository",
    "ProjectRepositories-OpenInNewTab": "Open in new tab",
    "ProjectRepositories-RemoveRepositories": "Remove repositories",
    "ProjectRepositories-RemoveRepository": "Remove repository",
    "ProjectRepositories-Repository": "Repository",
    "ProjectRepositories-SelectedReposSummary": "{0} repositories selected",
    "ProjectRepositories-SelectedReposSummarySingular": "{0} repository selected",
    "ProjectRepositories-Upstream": "Upstream",
    "ProjectRepositories-XofYRepositoriesSelected": "{0} of {1} repositories selected",
    "ProjectRepositories-InvalidFilepath": "Invalid Filepath",
    "ProjectRepositories-CouldNotFindRepoAtFilepath": "Could not find repo at {0}",
    "ProjectRepostories-Or": "or",
    "ProjectPullRequests-FindAPullRequest": "Find a pull request...",
    "ProjectsTab-GKProjectsDescription": "GitKraken Projects group your repositories together so they are more accessible, and aggregate pull request information for those repos in one place. They can also be shared with teammates for better collaboration and onboarding.",
    "ProjectsTab-AllProjects": "All Projects",
    "ProjectsTab-1Repository": "1 repository",
    "ProjectsTab-NRepositories": "{0} repositories",
    "ProjectsTab-CreateProject": "Create Project",
    "ProjectsTab-Issues": "Issues",
    "ProjectsTab-Loading": "Loading",
    "ProjectsTab-LoadingProject": "Project...",
    "ProjectsTab-LoadingProjects": "Projects...",
    "ProjectsTab-NewProject": "New Project",
    "ProjectsTab-NoProjects": "You don't have any Projects yet",
    "ProjectsTab-NoProjectsDescription": "Create a Project to group, view details about, and perform actions across multiple repositories.",
    "ProjectsTab-PlusNMore": "+{0} more",
    "ProjectsTab-PullRequests": "Pull Requests",
    "ProjectsTab-Repositories": "Repositories",
    "ProjectsTab-SearchProjects": "Search projects",
    "ProjectsTab-Title": "Projects",
    "SingleProjectTab-ProjectPrefix": "Projects",
    "SingleProjectTab-AddRepositories": "Add repositories",
    "SingleProjectTab-Issues": "Issues",
    "SingleProjectTab-NoRepo": "There are no repositories yet on this project",
    "SingleProjectTab-NoRepoDescription": "The repositories that are part of this project will appear here",
    "SingleProjectTab-NoPullRequests": "There are no pull requests for this project",
    "SingleProjectTab-NoPullRequestsDescription": "The pull requests that are part of this project will appear here",
    "SingleProjectTab-PullRequests": "Pull Requests",
    "SingleProjectTab-PullRequestsBy": "by",
    "SingleProjectTab-Repositories": "Repositories",
    "SingleProjectTab-SharedWith": "Shared with {0}",
    "AddEditProject-ComingSoon": "Coming soon",
    "AddEditProject-CreateProject": "Create Project",
    "AddEditProject-Creating": "Creating...",
    "AddEditProject-Description": "Description",
    "AddEditProject-DescriptionPlaceholder": "Describe the purpose of the project",
    "AddEditProject-ErrorGeneric": "Error Saving Project",
    "AddEditProject-HostingServiceTypeNotSupported": "Provider '{0}' not yet supported for Projects",
    "AddEditProject-LocalDescription": "Personal projects are only accessible by you on this machine.",
    "AddEditProject-NamePlaceholder": "Name of the project",
    "AddEditProject-RemotesAvailable": "Remotes available",
    "AddEditProject-RequiredFieldsNotice": "Required Field",
    "AddEditProject-SaveChanges": "Save Changes",
    "AddEditProject-Saving": "Saving...",
    "AddEditProject-SearchRemoteRepos": "Search remote repositories",
    "AddEditProject-SelectRemote": "Select a remote...",
    "AddEditProject-SelectedRepoOne": "1 repository will be added to this project",
    "AddEditProject-SelectedReposCount": "{0} repositories will be added to this project",
    "AddEditProject-SelectRepos": "Select repositories to add to this project",
    "AddEditProject-SharedDescription": "Shared projects are visible to everyone in your organization.",
    "AddEditProject-RequireAnOrganization": "Shared projects require an organization.",
    "AddEditProject-Successful": "Project updated successfully.",
    "AddEditProject-Title": "Create a GitKraken Project",
    "AddEditProject-TitleAtEdit": "Edit Project",
    "AddEditProject-UpgradeGitKraken": "Upgrade GitKraken",
    "AddEditProject-ToCreateOrganization": "to create an organization and share projects",
    "ProjectError-AddRepositoriesTitle": "Failed to add repositories",
    "ProjectError-AddRepositoryToProjectTitle": "Failed to add repository to project",
    "ProjectError-AddRepositoriesMessage": "The following repositories could not be added to the project: {0}",
    "ProjectError-AddRepositoryToProjectMessage": "The repository could not be added to the \"{0}\" project",
    "ProjectError-RemoveRepositoriesTitle": "Failed to remove repositories",
    "ProjectError-RemoveRepositoriesMessage": "The following repositories could not be removed from the project: {0}",
    "DeleteProject-Deleting": "Deleting...",
    "DeleteProject-DeleteProject": "Delete Project",
    "DeleteProject-Error": "Failed to delete project",
    "DeleteProject-NamePlaceholder": "Name of the project",
    "DeleteProject-RequestAction": "Please type the name of your project {0} to confirm",
    "DeleteProject-Successful": "Project {0} deleted successfully.",
    "DeleteProject-Title": "Delete Project",
    "DeleteProject-Warning": "Are you sure you want to DELETE this project?",
    "DeleteProject-WarningExplained": "This action cannot be undone. This will permanently delete the {0} project",
    "DeleteProject-WarningFinal": "This action cannot be undone",
    "ProjectSummarySection-Edit": "Edit project",
    "ProjectSummarySection-AddRepositories": "Add respositories",
    "ProjectSummarySection-Delete": "Delete project",
    "RemoveRepositories-Error": "Remove repositories from {0} failed",
    "RemoveRepositories-Success": "Remove {0} repositories from {1} succeeded",
    "RemoveRepositoriesModal-Removing": "Removing...",
    "RemoveRepositoriesModal-RemoveRepositories": "Remove",
    "RemoveRepositoriesModal-Title": "Remove Repositories",
    "RemoveRepositoriesModal-RequestAction": "Please type the name of your project {0} to confirm.",
    "RemoveRepositoriesModal-NamePlaceholder": "Name of the project",
    "RemoveRepositoriesModal-Warning": "Are you sure you want to remove these repos?",
    "RemoveRepositoriesModal-WarningExplained": "This action cannot be undone. This will permanently remove the following repositories from {0}:",
    "RemoveRepositoriesModal-WarningFinal": "This action cannot be undone",
    "InvalidSSLCertificate-Title": "Invalid SSL Certificate",
    "InvalidSSLCertificate-Advanced": "Advanced",
    "InvalidSSLCertificate-AdvancedMessage": "Attackers may be attempting to steal information through this integration. Proceeding with an invalid SSL certificate is not safe. Disabling this integration and contacting your system administrator is recommended.",
    "InvalidSSLCertificate-GKSupportSite": "GitKraken Support Site",
    "InvalidSSLCertificate-ProceedUsingInvalidCert": "Proceed with invalid SSL certificate and restart GitKraken (unsafe)",
    "InvalidSSLCertificate-DisableIntegration": "Disable this integration",
    "InvalidSSLCertificate-MainMessage": "Your {0} integration is using an invalid SSL certificate and the connection is not secure",
    "InvalidSSLCertificate-SubMessage1": "Please contact your system administrator to fix the certificate for this self-hosted integration. You can find information about fixing an invalid SSL certificate on the {0}.",
    "InvalidSSLCertificate-ResolveSSLError": "Resolve invalid SSL certificate",
    "InvalidSSLCertificate-IntegrationIsUsingInvalidSSLCert": "This integration is using an invalid SSL certificate",
    "InvalidSSLCertificate-ProceedingRequiresRestart": "Proceeding with an invalid SSL certificate will require a restart.",
    "InvalidSSLCertificate-PleaseContactYourAdministrator": "Please contact your system administrator to fix the certificate for this hosted integration. You can find information about fixing an invalid SSL cert on the {0}.",
    "InvalidSSLCertificate-ReconnectRequired": "You will need to reconnect to your integration following the restart.",
    "InvalidSSLCertificate-RestartIfResolved": "Please restart GitKraken after fixing the SSL certificate.",
    "SSHVulnerability-ActionRequired": "Action Required",
    "SSHVulnerability-KeyType": "Key Type:",
    "SSHVulnerability-PublicKey": "Public Key:",
    "SSHVulnerability-PrivateKey": "Private Key:",
    "SSHVulnerability-Fingerprint": "Fingerprint:",
    "SSHVulnerability-ResolutionOptions": "Resolution Options:",
    "SSHVulnerability-VulnerabilitiesResolved": "{0}/{1} Vulnerabilities resolved",
    "SSHVulnerability-AddedToProfile": "Added to \"{0}\" profile",
    "SSHVulnerability-ContinueUsingGitKraken": "Continue using GitKraken",
    "SSHVulnerability-WouldYouLikeToGenerateANewKey": "The vulnerable key has been deleted. Would you like to generate a new one?",
    "SSHVulnerability-ContinueWithoutANewKey": "Continue without generating a new key",
    "SSHVulnerability-SuccessfullyGeneratedANewKey": "Successfully generated a new key.",
    "SSHVulnerability-PleaseRemoveFromIntegration": "Please remove this key from **Integration** and then confirm below.",
    "SSHVulnerability-EnsureRemoveFromAllHosts": "Please ensure that this key is not configured on any git servers. If you have added this key to any hosts without the help of GitKraken, you should remove it from those hosts before proceeding.",
    "SSHVulnerability-EnsureRemoveFromIntegration": "Please ensure that this key is not configured on **Integration**.",
    "SSHVulnerability-ConfirmKeyHasBeenRemoved": "This key has been removed from {0}",
    "SSHVulnerability-ConfirmKeyHasBeenRemovedFromAllHost": "This key has been removed from all Git hosts",
    "SSHVulnerability-ConfirmKeyWasNotGeneratedByGK": "This key was not generated by GitKraken",
    "IssueViewPanel-Milestones": "大事记",
    "PullRequestBar-JustNow": "刚才",
    "ContextMenu-CopyCommitId": "将提交ID复制到剪贴板",
    "IssueTrackerFilterForm-FilterTextPlaceholder": "输入查询以过滤卡。空白查询将返回板上的所有卡。",
    "PullRequestBar-HourAgo": "{0}小时前",
    "PullRequestBar-MinuteAgo": "{0}分钟前",
    "IndividualLicenseCamelCase": "个人",
    "ProvideFeedback-SendUsFeedback": "向我们发送反馈",
    "ErrorMessage-UpdateHunkFailedWithReason": "无法更新{0}的区块, 原因如下: {1}",
    "Keybinding-OpenRepoInTerminal": "在终端中打开存储库",
    "Version6LegacyTrial-Feature1": "打开私人存储库的能力",
    "Trial-TrialStartedModalContent": "您可以在{0}天内使用GitKraken专业版的功能。例如:",
    "Error-GenerateSSHKeyAndAddToServiceFailed": "SSH密钥创建失败",
    "Profile-ChangeEmail": "使用其他账户登录",
    "IssueViewPanel-Description": "描述",
    "IssueViewPanel-AddCommentSubmitLabel": "添加评论",
    "Repo-OpenInTerminal": "在终端中打开",
    "RefBar-GroupGitLabSelfManagedShort": "智通SM",
    "PullRequestBar-DaysAgo": "{0}天前",
    "PullRequestBar-MinutesAgo": "{0}分钟前",
    "GitLabFilterForm-FilterError": "过滤错误",
    "IssueTrackerSearch-Cards": "搜索卡",
    "ParentRepo": "父存储库",
    "TabsBar-CloseTab": "关闭标签",
    "Trial-TableFeature1": "使用私有托管和自托管存储库",
    "Trial-TableFeature7": "Azure DevOps集成",
    "ProCamelCase": "专业版",
    "IssueViewPanel-SelectPlaceholder": "选择 ...",
    "IssueViewPanel-UnknownUser": "未知用户",
    "IssueViewPanel-NoMatch": "没有比赛",
    "Version6LegacyTrialStatus": "{0} of GitKraken Individual Remaining - Upgrade Now",
    "Trial-StartTrialModalContent": "开始{0}天GitKraken专业版免费试用，以访问专业版功能，例如合并冲突编辑器、多配置文件、GitHub企业版、GitLab自建主机、Bitbucket服务器和Azure开发运维。无需信用卡。",
    "Version6LegacyTrial-ModalContent2": "You can see our pricing plan changes in this {0}.",
    "Trial-StartTrialModalSubcontent": "了解更多关于GitKraken专业版功能的信息, 请访问",
    "Trial-TableFeature6": "Bitbucket服务器集成",
    "IssueViewPanel-Labels": "标签",
    "Trial-TableFeature3": "用于工作和个人的多个配置文件",
    "IssueTrackerSearch-Issues": "搜索问题",
    "IssueTracker-EditDetail": "编辑",
    "Error-UpdateHunkFailed": "更新区块失败",
    "AutoUpdate-RestartGitKrakenAndInstallUpdateButtonLabel": "更新就绪(重新启动GitKraken)",
    "Trial-TrialStartedModalSubcontent": "您可以在试用期间随时升级到专业版并继续使用这些功能。",
    "IssueViewPanel-ClearAssignees": "清除受让人",
    "Trial-StartTrialModalConfirmButton": "开始免费试用GitKrake专业版",
    "Trial-TableFeature2": "功能强大的应用内合并冲突编辑器",
    "ErrorMessage-GitLabEnterpriseTooOld": "GitKraken不再支持您的GitLab自我管理实例。请要求您的网络管理员更新您的GitLab自托管服务器。",
    "IssueViewPanel-BranchLabelTooltip": "点击查看。双击以结帐。",
    "Trial-StartTrialModalTitle": "开始免费试用GitKraken专业版",
    "IssueViewPanel-ClearAssignee": "清除受让人",
    "Trial-StartTrialModalNoThanksButton": "现在不, 谢谢。",
    "SendUsFeedback-EmailAddress": "电子邮件地址",
    "IssueViewPanel-Milestone": "里程碑",
    "Version6LegacyTrial-ModalContent1": "We have made some changes to the GitKraken Pricing Plans and due to these changes, we are upgrading your account to the GitKraken Individual Plan for {0} days, on us! This upgrade will give you:",
    "IssueViewPanel-AddCommentPlaceholder": "添加评论",
    "LocalBranchDeletion-SuccessfullyDeletedNBranches": "Successfully deleted {0} out of {1} local branches.",
    "Error-FeedbackSendFailure": "发送反馈失败",
    "FreeUserLicenseCamelCase": "自由",
    "NewTabView-Timelines": "GitKraken时间轴",
    "SendUsFeedback-EmailUsYourself": "或者, 你可以自己发电子邮件给我们在",
    "ConfirmationMessage-UnstageAndRemoveFiles": "这将取消暂存并删除已选中的文件。继续处理?",
    "Profile-StartAFreeProTrial": "开始专业版免费试用",
    "PullRequestBar-HoursAgo": "{0}小时前",
    "Version6LegacyTrial-BlogPost": "博客文章",
    "IssueViewPanel-Comments": "注释",
    "Trial-TableFeature5": "GitLab自我管理整合",
    "IssueTracker-Assignee": "受让人",
    "IssueViewPanel-MilestoneDueDate": "Due {0}",
    "ErrorMessage-GitLabREST": "未知的GitLab出现集成REST错误",
    "PullRequestBar-Yesterday": "昨天",
    "Version6LegacyTrial-ModalTitle": "感谢您成为了不起的GitKraken用户！",
    "IssueViewPanel-ClearLabels": "清除标签",
    "IssueTrackerError-DescriptionEditFailed": "无法更新说明",
    "IssueTracker-Assignees": "受让人",
    "Trial-TableFeature4": "GitHub企业整合",
    "Version6LegacyTrial-Feature2": "访问合并冲突编辑器",
    "IssueTrackerError-AssigneesEditFailed": "无法更新受让人",
    "TabsBar-NewTab": "新标签",
    "Profile-ConfirmDeleteHeader": "是否删除此配置文件?",
    "LinuxUpdate-AvailableStatus": "可用的更新 ({0})",
    "RefBar-GroupGitHubEnterpriseShort": "GITHUB",
    "RefBar-GroupGitHubIssues": "GITHUB ISSUES",
    "IssueTrackerError-TitleEditFailed": "Failed to update title"
  }
}